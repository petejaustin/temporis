// Complex graph with 13 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["d"], owner[1]
node s4: label["n4"], owner[0]
node s5: label["f"], owner[0]
node s6: label["n6"], owner[1]
node s7: label["h"], owner[0]
node s8: label["i"], owner[1]
node s9: label["j"], owner[1]
node s10: label["n10"], owner[0]
node s11: label["n11"], owner[0]
node s12: label["target"], owner[0]

edge s0 -> s7: (10,11,22)
edge s1 -> s5: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s1 -> s11
edge s2 -> s1: (or (= (mod t 5) 2) (= (mod t 5) 3))
edge s2 -> s4
edge s2 -> s5
edge s2 -> s7: (not (= (mod t 6) 3))
edge s2 -> s12: (or (= (mod t 4) 1) (= (mod t 3) 0))
edge s3 -> s0: (and (= (mod t 3) 2) (= (mod t 5) 1))
edge s3 -> s1: (= (mod t 2) 1)
edge s3 -> s2: (not (= (mod t 3) 2))
edge s3 -> s5: (and (= (mod t 3) 1) (= (mod t 4) 3))
edge s3 -> s7: (and (= (mod t 3) 1) (= (mod t 5) 1))
edge s4 -> s2: (2,12)
edge s4 -> s7: (or (= (mod t 3) 2) (= (mod t 5) 3))
edge s4 -> s9: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s4 -> s11: (= (mod t 2) 1)
edge s5 -> s0: (not (= (mod t 4) 1))
edge s5 -> s9: (= (mod t 4) 1)
edge s6 -> s0: (20,22)
edge s6 -> s1: (= (mod t 5) 0)
edge s6 -> s2: (not (= (mod t 5) 3))
edge s6 -> s11: (or (= (mod t 5) 4) (= (mod t 2) 1))
edge s7 -> s1: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s8 -> s0: (not (= (mod t 3) 2))
edge s8 -> s3
edge s8 -> s5
edge s9 -> s2
edge s9 -> s5: (not (= (mod t 3) 2))
edge s9 -> s11: (= (mod t 5) 3)
edge s10 -> s7: (or (= (mod t 3) 1) (= (mod t 4) 2))
edge s10 -> s11: (or (= (mod t 2) 1) (= (mod t 4) 2))
edge s11 -> s2: (0,8,11)
edge s11 -> s3: (not (= (mod t 6) 2))
edge s11 -> s4: (not (= (mod t 4) 1))
edge s11 -> s7
edge s11 -> s12: (not (= (mod t 4) 2))
edge s12 -> s2: (and (= (mod t 3) 2) (= (mod t 3) 2))
edge s12 -> s7: (5,23)
