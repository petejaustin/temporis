// Complex graph with 14 nodes

node s0: label["s0"], owner[0]
node s1: label["s1"], owner[1]
node s2: label["s2"], owner[1]
node s3: label["s3"], owner[1]
node s4: label["s4"], owner[0]
node s5: label["s5"], owner[0]
node s6: label["s6"], owner[1]
node s7: label["s7"], owner[0]
node s8: label["s8"], owner[0]
node s9: label["s9"], owner[1]
node s10: label["s10"], owner[0]
node s11: label["s11"], owner[1]
node s12: label["s12"], owner[1]
node s13: label["s13"], owner[1]

edge s0 -> s1: (or (= (mod t 4) 1) (= (mod t 4) 2))
edge s0 -> s2: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s0 -> s3: (or (= (mod t 3) 2) (= (mod t 3) 1))
edge s0 -> s5: (10,14,17,19,29)
edge s0 -> s10: (= (mod t 4) 3)
edge s0 -> s12
edge s1 -> s0: (not (= (mod t 2) 1))
edge s1 -> s8: (and (= (mod t 2) 0) (= (mod t 4) 1))
edge s1 -> s12: (and (= (mod t 4) 1) (= (mod t 5) 0))
edge s2 -> s0: (or (= (mod t 2) 1) (= (mod t 4) 3))
edge s2 -> s1: (= (mod t 4) 0)
edge s2 -> s3: (= (mod t 5) 3)
edge s2 -> s7: (2,3,6,9,16)
edge s2 -> s10: (not (= (mod t 6) 0))
edge s2 -> s13: (7)
edge s3 -> s0: (or (= (mod t 2) 1) (= (mod t 2) 0))
edge s3 -> s8: (and (= (mod t 2) 0) (= (mod t 4) 3))
edge s3 -> s11: (not (= (mod t 3) 2))
edge s4 -> s0: (not (= (mod t 6) 5))
edge s4 -> s1
edge s4 -> s2: (= (mod t 3) 2)
edge s4 -> s9
edge s5 -> s0: (15,18,20,21)
edge s5 -> s1
edge s5 -> s3: (8,19)
edge s5 -> s6
edge s5 -> s8
edge s5 -> s12: (and (= (mod t 3) 1) (= (mod t 4) 1))
edge s6 -> s0
edge s6 -> s5: (or (= (mod t 2) 0) (= (mod t 5) 2))
edge s6 -> s9: (or (= (mod t 5) 1) (= (mod t 4) 1))
edge s6 -> s10: (not (= (mod t 4) 1))
edge s6 -> s11: (not (= (mod t 5) 4))
edge s7 -> s4: (not (= (mod t 2) 0))
edge s8 -> s0: (1,2,3,4)
edge s8 -> s1: (15,16,22,23)
edge s8 -> s7: (and (= (mod t 3) 2) (= (mod t 5) 3))
edge s8 -> s10: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s8 -> s12: (not (= (mod t 2) 1))
edge s9 -> s1: (= (mod t 3) 0)
edge s9 -> s6: (= (mod t 4) 1)
edge s9 -> s7: (or (= (mod t 4) 3) (= (mod t 3) 0))
edge s9 -> s10: (not (= (mod t 4) 3))
edge s9 -> s11: (or (= (mod t 4) 3) (= (mod t 2) 1))
edge s9 -> s12
edge s9 -> s13: (or (= (mod t 3) 1) (= (mod t 5) 1))
edge s10 -> s8: (or (= (mod t 5) 4) (= (mod t 5) 2))
edge s10 -> s9: (or (= (mod t 3) 1) (= (mod t 3) 2))
edge s11 -> s0: (or (= (mod t 5) 0) (= (mod t 5) 0))
edge s11 -> s4: (2,7,11,14)
edge s11 -> s12
edge s12 -> s0
edge s12 -> s8: (not (= (mod t 2) 1))
edge s13 -> s7: (or (= (mod t 3) 2) (= (mod t 4) 1))
edge s13 -> s10: (8,12,17,18)
edge s13 -> s11: (or (= (mod t 4) 3) (= (mod t 3) 2))
