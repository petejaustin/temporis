// Complex graph with 9 nodes

node s0: label["s0"], owner[1]
node s1: label["s1"], owner[0]
node s2: label["s2"], owner[0]
node s3: label["s3"], owner[1]
node s4: label["s4"], owner[1]
node s5: label["s5"], owner[0]
node s6: label["s6"], owner[0]
node s7: label["s7"], owner[0]
node s8: label["s8"], owner[0]

edge s0 -> s1: (or (= (mod t 5) 0) (= (mod t 5) 2))
edge s0 -> s4: (27,29)
edge s0 -> s7
edge s1 -> s6
edge s1 -> s7: (= (mod t 2) 0)
edge s2 -> s0: (and (= (mod t 3) 1) (= (mod t 4) 3))
edge s2 -> s1
edge s3 -> s6: (and (= (mod t 2) 0) (= (mod t 5) 1))
edge s3 -> s8: (and (= (mod t 3) 2) (= (mod t 5) 0))
edge s4 -> s0: (= (mod t 5) 2)
edge s4 -> s3: (not (= (mod t 2) 0))
edge s4 -> s5: (or (= (mod t 2) 1) (= (mod t 2) 0))
edge s5 -> s0: (and (= (mod t 4) 0) (= (mod t 4) 2))
edge s5 -> s4: (or (= (mod t 4) 0) (= (mod t 2) 0))
edge s5 -> s6: (or (= (mod t 4) 1) (= (mod t 4) 2))
edge s6 -> s1: (20,21)
edge s6 -> s2: (23,25,26)
edge s6 -> s5: (= (mod t 5) 1)
edge s6 -> s7: (or (= (mod t 3) 1) (= (mod t 4) 1))
edge s7 -> s1: (and (= (mod t 3) 2) (= (mod t 4) 0))
edge s7 -> s8: (or (= (mod t 3) 2) (= (mod t 3) 2))
edge s8 -> s2: (= (mod t 3) 1)
edge s8 -> s6: (and (= (mod t 3) 2) (= (mod t 3) 0))
edge s8 -> s7: (and (= (mod t 2) 1) (= (mod t 4) 3))
