// Complex graph with 14 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[1]
node s2: label["n2"], owner[0]
node s3: label["d"], owner[1]
node s4: label["state4"], owner[1]
node s5: label["f"], owner[0]
node s6: label["n6"], owner[0]
node s7: label["state7"], owner[0]
node s8: label["i"], owner[1]
node s9: label["state9"], owner[0]
node s10: label["state10"], owner[1]
node s11: label["state11"], owner[0]
node s12: label["n12"], owner[1]
node s13: label["target"], owner[0]

edge s0 -> s2
edge s0 -> s9
edge s1 -> s4: (not (= (mod t 2) 0))
edge s1 -> s6: (or (= (mod t 3) 0) (= (mod t 5) 0))
edge s1 -> s9: (= (mod t 6) 3)
edge s1 -> s13: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s2 -> s1: (5,6,9,13)
edge s2 -> s3: (= (mod t 8) 5)
edge s2 -> s5: (not (= (mod t 2) 1))
edge s2 -> s6
edge s2 -> s8: (or (= (mod t 5) 1) (= (mod t 4) 3))
edge s2 -> s10: (7,15)
edge s2 -> s12
edge s2 -> s13: (= (mod t 4) 2)
edge s3 -> s0
edge s3 -> s5: (not (= (mod t 5) 3))
edge s3 -> s7: (not (= (mod t 3) 2))
edge s3 -> s10
edge s3 -> s13: (not (= (mod t 6) 1))
edge s4 -> s1: (not (= (mod t 4) 0))
edge s4 -> s2
edge s4 -> s5: (= (mod t 5) 3)
edge s4 -> s7: (= (mod t 8) 6)
edge s4 -> s8: (not (= (mod t 5) 4))
edge s4 -> s10: (= (mod t 3) 0)
edge s5 -> s3
edge s6 -> s0
edge s6 -> s3
edge s6 -> s5: (and (= (mod t 2) 1) (= (mod t 5) 2))
edge s6 -> s9: (or (= (mod t 5) 0) (= (mod t 4) 0))
edge s6 -> s10: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s6 -> s11: (8)
edge s6 -> s12
edge s7 -> s5: (= (mod t 8) 3)
edge s7 -> s11: (or (= (mod t 3) 1) (= (mod t 4) 3))
edge s7 -> s12: (= (mod t 3) 2)
edge s8 -> s3: (not (= (mod t 5) 4))
edge s8 -> s5: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s8 -> s6: (3,4)
edge s8 -> s13: (or (= (mod t 4) 3) (= (mod t 5) 4))
edge s9 -> s0: (= (mod t 5) 4)
edge s9 -> s8: (= (mod t 7) 1)
edge s9 -> s10: (and (= (mod t 4) 1) (= (mod t 3) 2))
edge s9 -> s12: (= (mod t 6) 0)
edge s10 -> s0: (4,24)
edge s10 -> s7: (= (mod t 8) 1)
edge s11 -> s1: (or (= (mod t 3) 2) (= (mod t 5) 1))
edge s11 -> s5
edge s11 -> s9: (= (mod t 5) 2)
edge s11 -> s12: (and (= (mod t 4) 2) (= (mod t 4) 1))
edge s11 -> s13: (and (= (mod t 2) 1) (= (mod t 4) 0))
edge s12 -> s2
edge s12 -> s5: (and (= (mod t 4) 2) (= (mod t 3) 1))
edge s12 -> s6: (2,4,5,9,14)
edge s12 -> s9: (3,4,9,12)
edge s12 -> s13
edge s13 -> s0: (not (= (mod t 3) 0))
edge s13 -> s1: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s13 -> s3: (1,4,7,17)
edge s13 -> s4: (1,3,9)
edge s13 -> s6: (not (= (mod t 3) 0))
edge s13 -> s12: (not (= (mod t 4) 2))
