// Complex graph with 15 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["n4"], owner[1]
node s5: label["f"], owner[1]
node s6: label["state6"], owner[0]
node s7: label["n7"], owner[1]
node s8: label["n8"], owner[1]
node s9: label["state9"], owner[1]
node s10: label["n10"], owner[0]
node s11: label["state11"], owner[1]
node s12: label["state12"], owner[1]
node s13: label["n13"], owner[1]
node s14: label["target"], owner[1]

edge s0 -> s1: (and (= (mod t 3) 2) (= (mod t 5) 1))
edge s0 -> s2: (= (mod t 7) 3)
edge s0 -> s5: (9)
edge s1 -> s5: (not (= (mod t 5) 0))
edge s1 -> s8: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s1 -> s13: (not (= (mod t 3) 1))
edge s2 -> s1: (= (mod t 8) 1)
edge s2 -> s4: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s2 -> s5: (or (= (mod t 4) 0) (= (mod t 5) 3))
edge s2 -> s6: (or (= (mod t 4) 3) (= (mod t 5) 2))
edge s2 -> s7: (and (= (mod t 2) 0) (= (mod t 5) 3))
edge s2 -> s9
edge s2 -> s10: (= (mod t 3) 2)
edge s2 -> s12
edge s2 -> s13: (and (= (mod t 4) 2) (= (mod t 3) 1))
edge s2 -> s14: (= (mod t 6) 4)
edge s3 -> s10: (not (= (mod t 4) 1))
edge s3 -> s12: (and (= (mod t 4) 1) (= (mod t 5) 4))
edge s4 -> s1: (6,14)
edge s4 -> s5: (7,11)
edge s4 -> s6: (2,10,11,18,22)
edge s4 -> s8
edge s4 -> s11: (= (mod t 2) 0)
edge s5 -> s1: (and (= (mod t 4) 1) (= (mod t 3) 0))
edge s6 -> s5: (not (= (mod t 4) 3))
edge s6 -> s10: (2,8,15)
edge s6 -> s11: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s6 -> s14: (3,8,15)
edge s7 -> s2: (or (= (mod t 3) 2) (= (mod t 3) 1))
edge s7 -> s5: (= (mod t 7) 5)
edge s7 -> s12
edge s7 -> s13: (not (= (mod t 5) 3))
edge s7 -> s14: (= (mod t 3) 0)
edge s8 -> s0: (and (= (mod t 4) 2) (= (mod t 5) 0))
edge s8 -> s4
edge s8 -> s12: (and (= (mod t 3) 2) (= (mod t 5) 2))
edge s8 -> s13: (5,6,9)
edge s8 -> s14: (and (= (mod t 4) 0) (= (mod t 4) 2))
edge s9 -> s6: (1,7,9,11)
edge s9 -> s8: (not (= (mod t 4) 0))
edge s9 -> s13: (not (= (mod t 3) 2))
edge s10 -> s0: (= (mod t 6) 0)
edge s10 -> s2: (and (= (mod t 2) 1) (= (mod t 4) 1))
edge s10 -> s6: (= (mod t 8) 1)
edge s10 -> s8: (6,16,23,24)
edge s10 -> s9: (or (= (mod t 5) 2) (= (mod t 3) 1))
edge s10 -> s12: (or (= (mod t 5) 2) (= (mod t 3) 2))
edge s10 -> s14: (and (= (mod t 4) 0) (= (mod t 4) 0))
edge s11 -> s5: (and (= (mod t 4) 0) (= (mod t 3) 0))
edge s11 -> s7: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s11 -> s9: (not (= (mod t 2) 0))
edge s11 -> s10
edge s11 -> s12: (= (mod t 2) 0)
edge s12 -> s4: (2)
edge s12 -> s5: (not (= (mod t 6) 1))
edge s12 -> s6: (not (= (mod t 6) 0))
edge s12 -> s14: (or (= (mod t 4) 2) (= (mod t 4) 1))
edge s13 -> s1: (and (= (mod t 3) 0) (= (mod t 4) 3))
edge s13 -> s3: (not (= (mod t 5) 3))
edge s13 -> s8: (or (= (mod t 4) 3) (= (mod t 3) 2))
edge s13 -> s10: (not (= (mod t 6) 3))
edge s13 -> s11: (not (= (mod t 5) 3))
edge s13 -> s14: (and (= (mod t 4) 1) (= (mod t 3) 2))
edge s14 -> s0: (and (= (mod t 4) 0) (= (mod t 3) 0))
edge s14 -> s1: (not (= (mod t 3) 0))
edge s14 -> s7: (or (= (mod t 3) 2) (= (mod t 3) 1))
edge s14 -> s10: (and (= (mod t 3) 0) (= (mod t 4) 1))
edge s14 -> s11: (= (mod t 8) 0)
