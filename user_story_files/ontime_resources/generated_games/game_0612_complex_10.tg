// Complex graph with 10 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[0]
node s2: label["n2"], owner[1]
node s3: label["n3"], owner[0]
node s4: label["e"], owner[1]
node s5: label["state5"], owner[1]
node s6: label["g"], owner[1]
node s7: label["n7"], owner[1]
node s8: label["state8"], owner[1]
node s9: label["target"], owner[0]

edge s0 -> s6: (= (mod t 3) 1)
edge s2 -> s7: (= (mod t 4) 3)
edge s3 -> s0: (not (= (mod t 5) 2))
edge s3 -> s9
edge s4 -> s2: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s4 -> s5: (1,2,9,13,20)
edge s4 -> s7: (= (mod t 4) 3)
edge s5 -> s2
edge s5 -> s4: (or (= (mod t 4) 3) (= (mod t 4) 2))
edge s5 -> s6: (not (= (mod t 5) 4))
edge s5 -> s7: (6,14)
edge s5 -> s8: (not (= (mod t 3) 1))
edge s6 -> s3
edge s6 -> s7: (7,10,11,12)
edge s7 -> s0: (= (mod t 3) 2)
edge s8 -> s3
edge s8 -> s4: (7,9)
edge s8 -> s7: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s9 -> s0: (and (= (mod t 3) 2) (= (mod t 5) 1))
edge s9 -> s2: (and (= (mod t 4) 1) (= (mod t 5) 2))
edge s9 -> s3: (and (= (mod t 3) 2) (= (mod t 3) 2))
edge s9 -> s4: (and (= (mod t 3) 0) (= (mod t 5) 1))
edge s9 -> s5: (= (mod t 4) 0)
edge s9 -> s8: (or (= (mod t 5) 2) (= (mod t 5) 4))
