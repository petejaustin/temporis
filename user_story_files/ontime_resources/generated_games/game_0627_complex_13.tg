// Complex graph with 13 nodes

node s0: label["start"], owner[0]
node s1: label["state1"], owner[0]
node s2: label["state2"], owner[1]
node s3: label["n3"], owner[0]
node s4: label["e"], owner[1]
node s5: label["state5"], owner[1]
node s6: label["g"], owner[0]
node s7: label["n7"], owner[1]
node s8: label["n8"], owner[0]
node s9: label["j"], owner[0]
node s10: label["state10"], owner[0]
node s11: label["l"], owner[1]
node s12: label["target"], owner[0]

edge s0 -> s1: (and (= (mod t 4) 2) (= (mod t 5) 2))
edge s0 -> s7: (or (= (mod t 4) 1) (= (mod t 2) 1))
edge s0 -> s9: (= (mod t 4) 3)
edge s1 -> s9: (not (= (mod t 5) 1))
edge s2 -> s1: (not (= (mod t 6) 5))
edge s2 -> s7
edge s2 -> s10: (= (mod t 6) 0)
edge s2 -> s12: (or (= (mod t 4) 0) (= (mod t 3) 1))
edge s3 -> s4
edge s3 -> s8: (= (mod t 7) 0)
edge s4 -> s1
edge s4 -> s3: (and (= (mod t 3) 0) (= (mod t 5) 3))
edge s4 -> s7
edge s4 -> s10: (not (= (mod t 2) 0))
edge s5 -> s6: (8)
edge s5 -> s10
edge s6 -> s1: (= (mod t 3) 0)
edge s6 -> s2
edge s6 -> s7
edge s7 -> s5: (or (= (mod t 2) 1) (= (mod t 5) 1))
edge s7 -> s6: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s7 -> s9: (and (= (mod t 4) 1) (= (mod t 3) 2))
edge s7 -> s12: (and (= (mod t 3) 1) (= (mod t 4) 3))
edge s8 -> s0: (= (mod t 8) 0)
edge s9 -> s0: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s9 -> s3
edge s9 -> s11: (or (= (mod t 5) 2) (= (mod t 5) 3))
edge s10 -> s4: (= (mod t 8) 4)
edge s10 -> s6: (and (= (mod t 4) 3) (= (mod t 4) 3))
edge s10 -> s7: (= (mod t 2) 1)
edge s10 -> s12
edge s11 -> s0: (= (mod t 5) 1)
edge s11 -> s1: (5,13)
edge s11 -> s4: (and (= (mod t 3) 2) (= (mod t 4) 3))
edge s12 -> s3: (and (= (mod t 4) 1) (= (mod t 5) 4))
edge s12 -> s4: (or (= (mod t 3) 1) (= (mod t 4) 2))
edge s12 -> s6: (7)
edge s12 -> s7: (1,5,9,16)
edge s12 -> s8: (and (= (mod t 4) 1) (= (mod t 4) 2))
