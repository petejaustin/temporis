// Complex graph with 11 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[1]
node s2: label["n2"], owner[1]
node s3: label["d"], owner[0]
node s4: label["n4"], owner[0]
node s5: label["state5"], owner[1]
node s6: label["g"], owner[0]
node s7: label["n7"], owner[0]
node s8: label["state8"], owner[0]
node s9: label["n9"], owner[1]
node s10: label["target"], owner[0]

edge s0 -> s1: (not (= (mod t 5) 0))
edge s0 -> s10: (1,4,10,15,22)
edge s1 -> s4: (not (= (mod t 6) 0))
edge s1 -> s5: (= (mod t 4) 1)
edge s1 -> s7: (6)
edge s1 -> s10: (and (= (mod t 4) 2) (= (mod t 4) 1))
edge s2 -> s1: (2)
edge s2 -> s3: (not (= (mod t 4) 0))
edge s2 -> s5: (and (= (mod t 2) 0) (= (mod t 4) 3))
edge s2 -> s7
edge s3 -> s0: (not (= (mod t 2) 0))
edge s3 -> s8: (not (= (mod t 6) 5))
edge s4 -> s0: (not (= (mod t 5) 1))
edge s4 -> s2: (not (= (mod t 5) 2))
edge s4 -> s5: (not (= (mod t 4) 3))
edge s5 -> s0: (or (= (mod t 3) 0) (= (mod t 4) 0))
edge s5 -> s6
edge s5 -> s9: (not (= (mod t 5) 1))
edge s5 -> s10: (2,7,10)
edge s6 -> s3: (or (= (mod t 2) 0) (= (mod t 3) 0))
edge s6 -> s5
edge s6 -> s7
edge s7 -> s0: (not (= (mod t 4) 3))
edge s7 -> s5: (or (= (mod t 3) 2) (= (mod t 3) 0))
edge s8 -> s1
edge s8 -> s2: (and (= (mod t 2) 0) (= (mod t 4) 0))
edge s9 -> s0: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s9 -> s6: (= (mod t 4) 1)
edge s9 -> s8: (and (= (mod t 2) 0) (= (mod t 4) 2))
edge s9 -> s10: (not (= (mod t 6) 2))
edge s10 -> s0: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s10 -> s3: (4,13)
edge s10 -> s5: (or (= (mod t 4) 3) (= (mod t 5) 3))
edge s10 -> s6: (or (= (mod t 3) 1) (= (mod t 3) 0))
edge s10 -> s8: (and (= (mod t 2) 0) (= (mod t 5) 1))
