// Complex graph with 15 nodes

node s0: label["s0"], owner[1]
node s1: label["s1"], owner[1]
node s2: label["s2"], owner[1]
node s3: label["s3"], owner[1]
node s4: label["s4"], owner[0]
node s5: label["s5"], owner[0]
node s6: label["s6"], owner[0]
node s7: label["s7"], owner[1]
node s8: label["s8"], owner[0]
node s9: label["s9"], owner[1]
node s10: label["s10"], owner[1]
node s11: label["s11"], owner[0]
node s12: label["s12"], owner[0]
node s13: label["s13"], owner[1]
node s14: label["s14"], owner[0]

edge s0 -> s1: (not (= (mod t 4) 3))
edge s0 -> s3: (not (= (mod t 4) 1))
edge s0 -> s4
edge s0 -> s9: (1,12)
edge s0 -> s13: (or (= (mod t 4) 2) (= (mod t 4) 3))
edge s1 -> s0: (or (= (mod t 3) 2) (= (mod t 5) 0))
edge s1 -> s2: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s1 -> s3: (or (= (mod t 4) 2) (= (mod t 2) 1))
edge s1 -> s4: (= (mod t 3) 1)
edge s1 -> s9
edge s1 -> s12: (= (mod t 2) 0)
edge s1 -> s14
edge s2 -> s4: (or (= (mod t 2) 0) (= (mod t 3) 2))
edge s2 -> s5: (= (mod t 7) 3)
edge s2 -> s7
edge s2 -> s8: (not (= (mod t 6) 5))
edge s2 -> s9: (not (= (mod t 4) 0))
edge s2 -> s13: (= (mod t 7) 3)
edge s2 -> s14: (or (= (mod t 2) 1) (= (mod t 4) 0))
edge s3 -> s0: (and (= (mod t 2) 0) (= (mod t 5) 0))
edge s3 -> s1: (= (mod t 5) 0)
edge s3 -> s4: (not (= (mod t 3) 0))
edge s3 -> s5
edge s3 -> s7: (6,10,14,20,24)
edge s3 -> s10: (1,2,11,16)
edge s3 -> s12
edge s4 -> s2: (= (mod t 3) 0)
edge s4 -> s3: (or (= (mod t 2) 0) (= (mod t 5) 2))
edge s4 -> s5: (and (= (mod t 3) 0) (= (mod t 5) 2))
edge s4 -> s9: (or (= (mod t 4) 2) (= (mod t 4) 2))
edge s4 -> s12: (not (= (mod t 3) 1))
edge s5 -> s0
edge s5 -> s3
edge s5 -> s4: (not (= (mod t 5) 4))
edge s5 -> s14: (not (= (mod t 5) 2))
edge s6 -> s9
edge s6 -> s12
edge s7 -> s5: (= (mod t 4) 3)
edge s7 -> s10: (= (mod t 8) 0)
edge s7 -> s14: (not (= (mod t 4) 1))
edge s8 -> s0: (0,17,19,24,25)
edge s8 -> s4: (5,15,18,21)
edge s9 -> s5: (or (= (mod t 2) 1) (= (mod t 3) 2))
edge s9 -> s14: (= (mod t 3) 0)
edge s10 -> s0: (1,5,9,14,28)
edge s10 -> s1: (3,7,15,17)
edge s10 -> s2: (or (= (mod t 3) 1) (= (mod t 5) 4))
edge s10 -> s4: (not (= (mod t 6) 4))
edge s10 -> s5: (not (= (mod t 2) 0))
edge s11 -> s0: (3,8,10,15)
edge s11 -> s5
edge s11 -> s10: (= (mod t 3) 1)
edge s11 -> s14: (or (= (mod t 5) 3) (= (mod t 2) 0))
edge s12 -> s2: (or (= (mod t 4) 3) (= (mod t 3) 0))
edge s13 -> s0
edge s13 -> s4: (= (mod t 6) 4)
edge s13 -> s10: (2,4)
edge s14 -> s1: (or (= (mod t 2) 0) (= (mod t 3) 0))
edge s14 -> s2: (0,1,7,8,14)
edge s14 -> s3: (not (= (mod t 3) 0))
edge s14 -> s6
edge s14 -> s7
edge s14 -> s13: (5,8,9)
