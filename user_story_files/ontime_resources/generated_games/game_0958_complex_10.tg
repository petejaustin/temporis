// Complex graph with 10 nodes

node s0: label["start"], owner[1]
node s1: label["b"], owner[1]
node s2: label["c"], owner[1]
node s3: label["d"], owner[0]
node s4: label["e"], owner[0]
node s5: label["f"], owner[0]
node s6: label["n6"], owner[0]
node s7: label["n7"], owner[0]
node s8: label["state8"], owner[1]
node s9: label["target"], owner[1]

edge s0 -> s6: (= (mod t 6) 5)
edge s0 -> s8: (not (= (mod t 5) 4))
edge s0 -> s9: (= (mod t 5) 2)
edge s1 -> s7: (5,15)
edge s2 -> s0: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s2 -> s8: (not (= (mod t 2) 0))
edge s3 -> s1: (not (= (mod t 6) 4))
edge s3 -> s7: (and (= (mod t 3) 0) (= (mod t 5) 0))
edge s3 -> s9: (or (= (mod t 4) 2) (= (mod t 3) 1))
edge s4 -> s1
edge s4 -> s2: (0,9,10,12,15)
edge s4 -> s6: (not (= (mod t 6) 4))
edge s4 -> s7: (and (= (mod t 4) 3) (= (mod t 4) 3))
edge s4 -> s9: (= (mod t 7) 2)
edge s5 -> s1: (= (mod t 7) 6)
edge s5 -> s4: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s5 -> s8: (0,4,9,16)
edge s6 -> s0: (15)
edge s6 -> s2
edge s6 -> s8
edge s7 -> s6: (not (= (mod t 2) 1))
edge s8 -> s1: (and (= (mod t 3) 2) (= (mod t 4) 3))
edge s8 -> s2
edge s8 -> s9: (not (= (mod t 4) 3))
edge s9 -> s3: (not (= (mod t 2) 1))
edge s9 -> s4: (0,7,12,18)
edge s9 -> s7: (= (mod t 2) 0)
edge s9 -> s8
