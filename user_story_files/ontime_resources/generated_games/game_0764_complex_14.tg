// Complex graph with 14 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[0]
node s2: label["state2"], owner[0]
node s3: label["d"], owner[1]
node s4: label["state4"], owner[0]
node s5: label["f"], owner[1]
node s6: label["g"], owner[0]
node s7: label["n7"], owner[1]
node s8: label["state8"], owner[0]
node s9: label["n9"], owner[0]
node s10: label["n10"], owner[1]
node s11: label["n11"], owner[0]
node s12: label["state12"], owner[0]
node s13: label["target"], owner[0]

edge s0 -> s3
edge s0 -> s5: (= (mod t 6) 4)
edge s0 -> s6: (not (= (mod t 4) 0))
edge s1 -> s0: (or (= (mod t 4) 3) (= (mod t 2) 0))
edge s1 -> s4: (= (mod t 4) 1)
edge s1 -> s5: (not (= (mod t 2) 0))
edge s1 -> s6: (not (= (mod t 3) 1))
edge s1 -> s9: (= (mod t 7) 4)
edge s1 -> s10: (and (= (mod t 4) 2) (= (mod t 4) 2))
edge s1 -> s12: (or (= (mod t 3) 0) (= (mod t 5) 3))
edge s2 -> s9: (and (= (mod t 3) 2) (= (mod t 5) 0))
edge s3 -> s0: (or (= (mod t 5) 4) (= (mod t 4) 0))
edge s3 -> s2
edge s3 -> s4: (not (= (mod t 2) 1))
edge s3 -> s6
edge s3 -> s8: (= (mod t 8) 4)
edge s3 -> s10: (not (= (mod t 2) 1))
edge s3 -> s11: (3,5,6,11,16)
edge s4 -> s0: (0,6,11,16)
edge s4 -> s1: (or (= (mod t 4) 3) (= (mod t 3) 1))
edge s4 -> s9
edge s4 -> s12: (and (= (mod t 3) 2) (= (mod t 3) 2))
edge s5 -> s3
edge s5 -> s4: (not (= (mod t 5) 4))
edge s5 -> s8: (not (= (mod t 5) 0))
edge s5 -> s9: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s6 -> s8: (or (= (mod t 5) 2) (= (mod t 2) 1))
edge s7 -> s3: (not (= (mod t 6) 3))
edge s7 -> s5: (or (= (mod t 2) 0) (= (mod t 3) 1))
edge s7 -> s6: (or (= (mod t 3) 2) (= (mod t 5) 1))
edge s7 -> s12: (or (= (mod t 5) 3) (= (mod t 5) 3))
edge s7 -> s13: (not (= (mod t 3) 1))
edge s8 -> s7: (= (mod t 7) 4)
edge s9 -> s5
edge s9 -> s6: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s9 -> s11: (and (= (mod t 4) 2) (= (mod t 3) 0))
edge s10 -> s0
edge s10 -> s8: (not (= (mod t 6) 4))
edge s10 -> s13: (not (= (mod t 4) 3))
edge s11 -> s4: (or (= (mod t 5) 0) (= (mod t 3) 2))
edge s11 -> s6
edge s11 -> s8: (or (= (mod t 5) 2) (= (mod t 2) 0))
edge s11 -> s9
edge s11 -> s10: (= (mod t 3) 1)
edge s12 -> s5
edge s12 -> s7: (or (= (mod t 2) 1) (= (mod t 5) 4))
edge s12 -> s8: (4,5,9,14)
edge s13 -> s1
edge s13 -> s4: (not (= (mod t 6) 2))
edge s13 -> s8: (or (= (mod t 4) 1) (= (mod t 4) 2))
edge s13 -> s11: (= (mod t 4) 0)
