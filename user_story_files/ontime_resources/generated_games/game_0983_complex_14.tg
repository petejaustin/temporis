// Complex graph with 14 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["e"], owner[0]
node s5: label["n5"], owner[0]
node s6: label["n6"], owner[1]
node s7: label["state7"], owner[0]
node s8: label["i"], owner[0]
node s9: label["j"], owner[0]
node s10: label["state10"], owner[0]
node s11: label["n11"], owner[1]
node s12: label["n12"], owner[0]
node s13: label["target"], owner[0]

edge s0 -> s1: (15,16,19,23)
edge s0 -> s2: (and (= (mod t 4) 2) (= (mod t 3) 2))
edge s0 -> s3: (and (= (mod t 3) 0) (= (mod t 5) 0))
edge s0 -> s5: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s0 -> s9: (and (= (mod t 2) 0) (= (mod t 4) 3))
edge s0 -> s10
edge s1 -> s6: (= (mod t 8) 2)
edge s1 -> s11
edge s1 -> s13: (3,19,20)
edge s2 -> s3: (not (= (mod t 2) 1))
edge s2 -> s4: (= (mod t 5) 0)
edge s2 -> s7: (and (= (mod t 3) 1) (= (mod t 3) 0))
edge s2 -> s9
edge s2 -> s10: (not (= (mod t 5) 0))
edge s2 -> s11: (or (= (mod t 2) 1) (= (mod t 3) 0))
edge s2 -> s12
edge s2 -> s13: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s3 -> s1: (5,13)
edge s3 -> s2: (0,5,13,18)
edge s3 -> s5: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s3 -> s8: (or (= (mod t 2) 0) (= (mod t 2) 0))
edge s3 -> s12: (not (= (mod t 3) 0))
edge s4 -> s9: (not (= (mod t 5) 2))
edge s4 -> s11: (not (= (mod t 4) 3))
edge s4 -> s12: (and (= (mod t 3) 0) (= (mod t 4) 1))
edge s5 -> s0: (3,8,17,18)
edge s5 -> s2: (6)
edge s5 -> s3: (18)
edge s5 -> s12: (7,15,24)
edge s6 -> s1: (= (mod t 2) 0)
edge s6 -> s4: (and (= (mod t 3) 0) (= (mod t 5) 3))
edge s6 -> s9
edge s7 -> s6: (3,9,12)
edge s7 -> s10: (= (mod t 3) 1)
edge s7 -> s11: (= (mod t 4) 0)
edge s8 -> s4: (= (mod t 7) 4)
edge s8 -> s9: (or (= (mod t 4) 0) (= (mod t 4) 3))
edge s8 -> s10
edge s8 -> s11: (= (mod t 5) 2)
edge s9 -> s0
edge s9 -> s7: (and (= (mod t 3) 2) (= (mod t 5) 0))
edge s9 -> s8: (or (= (mod t 3) 0) (= (mod t 4) 3))
edge s9 -> s11: (and (= (mod t 2) 1) (= (mod t 5) 0))
edge s10 -> s3: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s10 -> s6: (not (= (mod t 2) 0))
edge s10 -> s8: (or (= (mod t 2) 1) (= (mod t 5) 2))
edge s10 -> s9: (and (= (mod t 3) 0) (= (mod t 5) 2))
edge s10 -> s11: (not (= (mod t 4) 1))
edge s10 -> s12: (= (mod t 4) 3)
edge s11 -> s0: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s12 -> s5: (not (= (mod t 3) 2))
edge s12 -> s8
edge s12 -> s13
edge s13 -> s1: (and (= (mod t 3) 0) (= (mod t 4) 3))
edge s13 -> s6: (not (= (mod t 6) 3))
edge s13 -> s8: (= (mod t 4) 2)
edge s13 -> s9: (0,3,4,15,16)
edge s13 -> s10: (3,6,15,19)
edge s13 -> s11: (18,25)
