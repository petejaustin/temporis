// Complex graph with 11 nodes

node s0: label["s0"], owner[1]
node s1: label["s1"], owner[0]
node s2: label["s2"], owner[1]
node s3: label["s3"], owner[1]
node s4: label["s4"], owner[1]
node s5: label["s5"], owner[1]
node s6: label["s6"], owner[1]
node s7: label["s7"], owner[1]
node s8: label["s8"], owner[0]
node s9: label["s9"], owner[0]
node s10: label["s10"], owner[0]

edge s0 -> s1: (or (= (mod t 3) 2) (= (mod t 5) 0))
edge s0 -> s2: (= (mod t 7) 1)
edge s1 -> s3: (not (= (mod t 5) 1))
edge s1 -> s9: (and (= (mod t 4) 2) (= (mod t 3) 2))
edge s2 -> s0: (10)
edge s2 -> s1: (6,7)
edge s2 -> s3: (5,10,15,19)
edge s2 -> s8: (not (= (mod t 5) 1))
edge s3 -> s0
edge s3 -> s9: (not (= (mod t 3) 2))
edge s4 -> s2: (or (= (mod t 2) 1) (= (mod t 4) 2))
edge s4 -> s3: (= (mod t 6) 5)
edge s4 -> s6: (= (mod t 5) 2)
edge s4 -> s9
edge s5 -> s2: (8,14)
edge s5 -> s3: (and (= (mod t 4) 3) (= (mod t 4) 2))
edge s5 -> s7: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s5 -> s9
edge s6 -> s0: (2,11,13)
edge s6 -> s2: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s6 -> s3: (and (= (mod t 4) 0) (= (mod t 3) 1))
edge s7 -> s2: (or (= (mod t 4) 0) (= (mod t 2) 1))
edge s7 -> s9: (or (= (mod t 4) 2) (= (mod t 4) 0))
edge s9 -> s4: (19)
edge s10 -> s3: (not (= (mod t 5) 1))
edge s10 -> s9: (not (= (mod t 4) 2))
