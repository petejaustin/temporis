// Complex graph with 10 nodes

node s0: label["s0"], owner[1]
node s1: label["s1"], owner[0]
node s2: label["s2"], owner[1]
node s3: label["s3"], owner[1]
node s4: label["s4"], owner[0]
node s5: label["s5"], owner[0]
node s6: label["s6"], owner[1]
node s7: label["s7"], owner[0]
node s8: label["s8"], owner[1]
node s9: label["s9"], owner[1]

edge s0 -> s3: (5,13,19,21)
edge s0 -> s5: (and (= (mod t 4) 2) (= (mod t 4) 0))
edge s0 -> s6: (= (mod t 6) 4)
edge s1 -> s6: (10,20)
edge s2 -> s0
edge s2 -> s3
edge s2 -> s5: (1,21,24,27)
edge s2 -> s6: (= (mod t 8) 5)
edge s2 -> s9: (or (= (mod t 4) 3) (= (mod t 3) 0))
edge s3 -> s4: (not (= (mod t 5) 2))
edge s3 -> s5: (or (= (mod t 5) 1) (= (mod t 5) 2))
edge s3 -> s6: (or (= (mod t 3) 0) (= (mod t 3) 0))
edge s4 -> s5: (= (mod t 2) 0)
edge s4 -> s9: (not (= (mod t 4) 3))
edge s5 -> s1: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s5 -> s9: (and (= (mod t 4) 1) (= (mod t 3) 0))
edge s6 -> s7: (not (= (mod t 6) 2))
edge s7 -> s1
edge s7 -> s2
edge s7 -> s9: (or (= (mod t 4) 3) (= (mod t 4) 0))
edge s8 -> s3: (0,7,14,15,21)
edge s9 -> s1: (= (mod t 2) 0)
edge s9 -> s2: (= (mod t 6) 5)
edge s9 -> s3
edge s9 -> s5: (0,4,10,11)
edge s9 -> s6: (= (mod t 3) 0)
edge s9 -> s8
