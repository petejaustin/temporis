// Complex graph with 9 nodes

node s0: label["start"], owner[0]
node s1: label["b"], owner[0]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["state4"], owner[0]
node s5: label["f"], owner[0]
node s6: label["state6"], owner[0]
node s7: label["h"], owner[1]
node s8: label["target"], owner[0]

edge s0 -> s7: (not (= (mod t 4) 3))
edge s1 -> s0: (or (= (mod t 4) 2) (= (mod t 2) 0))
edge s1 -> s2: (or (= (mod t 2) 0) (= (mod t 4) 0))
edge s1 -> s6: (and (= (mod t 3) 0) (= (mod t 4) 0))
edge s2 -> s1: (not (= (mod t 5) 0))
edge s2 -> s4: (or (= (mod t 2) 1) (= (mod t 2) 1))
edge s2 -> s7: (not (= (mod t 5) 3))
edge s3 -> s6: (and (= (mod t 3) 1) (= (mod t 4) 2))
edge s3 -> s8: (10,25)
edge s4 -> s6: (= (mod t 2) 0)
edge s4 -> s8: (or (= (mod t 4) 2) (= (mod t 4) 3))
edge s5 -> s2
edge s5 -> s8: (1)
edge s6 -> s2: (or (= (mod t 3) 2) (= (mod t 2) 1))
edge s6 -> s3: (2,5,12,16)
edge s7 -> s1: (and (= (mod t 3) 1) (= (mod t 4) 0))
edge s7 -> s8: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s8 -> s2
edge s8 -> s5: (= (mod t 3) 1)
