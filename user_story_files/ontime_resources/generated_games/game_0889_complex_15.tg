// Complex graph with 15 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[1]
node s2: label["c"], owner[1]
node s3: label["n3"], owner[1]
node s4: label["e"], owner[1]
node s5: label["state5"], owner[1]
node s6: label["n6"], owner[0]
node s7: label["h"], owner[1]
node s8: label["state8"], owner[0]
node s9: label["state9"], owner[1]
node s10: label["k"], owner[0]
node s11: label["n11"], owner[1]
node s12: label["state12"], owner[1]
node s13: label["n13"], owner[0]
node s14: label["target"], owner[0]

edge s0 -> s3: (0,6,7,12,18)
edge s0 -> s7: (1,4,11,12)
edge s0 -> s9: (or (= (mod t 4) 0) (= (mod t 2) 1))
edge s0 -> s11
edge s1 -> s14: (not (= (mod t 3) 2))
edge s2 -> s1
edge s2 -> s7: (= (mod t 8) 6)
edge s3 -> s5: (not (= (mod t 6) 0))
edge s3 -> s7: (not (= (mod t 2) 0))
edge s3 -> s8: (or (= (mod t 3) 1) (= (mod t 4) 3))
edge s3 -> s9
edge s3 -> s13: (= (mod t 8) 1)
edge s3 -> s14
edge s4 -> s6: (= (mod t 6) 4)
edge s4 -> s10: (= (mod t 4) 3)
edge s4 -> s13: (not (= (mod t 5) 4))
edge s4 -> s14: (not (= (mod t 3) 1))
edge s5 -> s0: (= (mod t 5) 3)
edge s5 -> s1: (not (= (mod t 4) 0))
edge s5 -> s4: (10,12)
edge s5 -> s10: (not (= (mod t 4) 2))
edge s5 -> s12: (not (= (mod t 4) 0))
edge s5 -> s13: (or (= (mod t 2) 1) (= (mod t 3) 1))
edge s6 -> s0: (not (= (mod t 4) 0))
edge s6 -> s4: (not (= (mod t 6) 2))
edge s6 -> s10: (and (= (mod t 2) 0) (= (mod t 5) 0))
edge s6 -> s11: (and (= (mod t 4) 2) (= (mod t 3) 1))
edge s7 -> s4: (or (= (mod t 3) 1) (= (mod t 2) 1))
edge s7 -> s5: (6,11,20,22,28)
edge s7 -> s9: (not (= (mod t 6) 5))
edge s7 -> s13: (or (= (mod t 4) 2) (= (mod t 4) 2))
edge s8 -> s2: (3)
edge s8 -> s5: (or (= (mod t 5) 1) (= (mod t 4) 3))
edge s8 -> s7
edge s8 -> s11: (not (= (mod t 5) 3))
edge s8 -> s13: (or (= (mod t 5) 2) (= (mod t 5) 0))
edge s9 -> s5: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s9 -> s8: (= (mod t 7) 5)
edge s11 -> s5: (0,5,6,9,11)
edge s11 -> s8: (= (mod t 4) 3)
edge s11 -> s9: (and (= (mod t 4) 3) (= (mod t 3) 1))
edge s11 -> s13: (not (= (mod t 3) 2))
edge s12 -> s2: (11)
edge s12 -> s4
edge s12 -> s5: (and (= (mod t 2) 1) (= (mod t 5) 4))
edge s12 -> s7: (or (= (mod t 5) 1) (= (mod t 3) 0))
edge s13 -> s2
edge s13 -> s5: (= (mod t 6) 2)
edge s13 -> s11
edge s14 -> s1
edge s14 -> s7: (not (= (mod t 4) 0))
