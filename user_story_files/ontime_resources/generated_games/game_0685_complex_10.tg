// Complex graph with 10 nodes

node s0: label["start"], owner[0]
node s1: label["b"], owner[1]
node s2: label["state2"], owner[0]
node s3: label["d"], owner[1]
node s4: label["state4"], owner[1]
node s5: label["n5"], owner[0]
node s6: label["n6"], owner[1]
node s7: label["state7"], owner[1]
node s8: label["state8"], owner[0]
node s9: label["target"], owner[0]

edge s0 -> s2
edge s0 -> s3: (and (= (mod t 3) 0) (= (mod t 4) 0))
edge s1 -> s0
edge s1 -> s5: (not (= (mod t 2) 0))
edge s1 -> s9: (1,5,15)
edge s2 -> s6: (or (= (mod t 2) 1) (= (mod t 5) 2))
edge s3 -> s5: (not (= (mod t 3) 2))
edge s3 -> s8: (not (= (mod t 2) 1))
edge s4 -> s2: (13)
edge s4 -> s8: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s4 -> s9
edge s5 -> s0: (= (mod t 7) 3)
edge s5 -> s2: (3,9,16)
edge s5 -> s3: (not (= (mod t 4) 3))
edge s5 -> s6: (and (= (mod t 2) 1) (= (mod t 5) 4))
edge s5 -> s8
edge s6 -> s2
edge s6 -> s7: (8,13,14)
edge s6 -> s9: (not (= (mod t 3) 1))
edge s7 -> s2: (not (= (mod t 4) 1))
edge s7 -> s4: (= (mod t 2) 1)
edge s7 -> s8: (not (= (mod t 2) 0))
edge s8 -> s3: (10,16)
edge s8 -> s4: (= (mod t 3) 0)
edge s8 -> s7: (13,14,18,19)
edge s9 -> s1
edge s9 -> s7: (1,8,10,20,23)
