// Complex graph with 15 nodes

node s0: label["start"], owner[0]
node s1: label["state1"], owner[0]
node s2: label["state2"], owner[1]
node s3: label["state3"], owner[0]
node s4: label["n4"], owner[0]
node s5: label["f"], owner[0]
node s6: label["n6"], owner[0]
node s7: label["state7"], owner[0]
node s8: label["state8"], owner[1]
node s9: label["j"], owner[1]
node s10: label["k"], owner[1]
node s11: label["state11"], owner[0]
node s12: label["m"], owner[0]
node s13: label["state13"], owner[0]
node s14: label["target"], owner[0]

edge s0 -> s12: (= (mod t 4) 1)
edge s0 -> s13: (not (= (mod t 6) 3))
edge s1 -> s7: (and (= (mod t 3) 2) (= (mod t 4) 1))
edge s1 -> s9: (and (= (mod t 4) 2) (= (mod t 3) 1))
edge s1 -> s11: (and (= (mod t 3) 1) (= (mod t 4) 0))
edge s1 -> s14
edge s2 -> s3: (not (= (mod t 3) 0))
edge s2 -> s6: (not (= (mod t 2) 1))
edge s2 -> s11: (not (= (mod t 5) 1))
edge s3 -> s2: (= (mod t 7) 0)
edge s3 -> s6: (and (= (mod t 3) 1) (= (mod t 5) 3))
edge s3 -> s7: (8)
edge s3 -> s9: (8,12,13,16,19)
edge s3 -> s13: (not (= (mod t 4) 0))
edge s3 -> s14: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s4 -> s5: (= (mod t 3) 2)
edge s4 -> s7: (or (= (mod t 5) 1) (= (mod t 2) 1))
edge s4 -> s9: (2,15)
edge s4 -> s10
edge s4 -> s11
edge s5 -> s4: (9,12)
edge s5 -> s6
edge s5 -> s9: (and (= (mod t 4) 1) (= (mod t 3) 2))
edge s5 -> s14: (or (= (mod t 5) 0) (= (mod t 3) 0))
edge s6 -> s2: (or (= (mod t 3) 0) (= (mod t 4) 1))
edge s6 -> s9: (0,3,7,19,29)
edge s6 -> s12: (3,9,11,12)
edge s7 -> s9: (6,19)
edge s7 -> s12: (= (mod t 2) 1)
edge s7 -> s14: (or (= (mod t 4) 3) (= (mod t 5) 0))
edge s8 -> s0: (= (mod t 6) 3)
edge s8 -> s6: (or (= (mod t 3) 2) (= (mod t 3) 2))
edge s8 -> s12: (1,8,11)
edge s8 -> s13: (not (= (mod t 3) 1))
edge s9 -> s0: (not (= (mod t 3) 1))
edge s9 -> s5: (14)
edge s9 -> s6: (or (= (mod t 4) 2) (= (mod t 4) 2))
edge s9 -> s8: (= (mod t 2) 0)
edge s9 -> s13: (not (= (mod t 3) 1))
edge s9 -> s14: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s10 -> s1: (4,5,10,14,16)
edge s10 -> s4: (not (= (mod t 4) 2))
edge s10 -> s11: (not (= (mod t 4) 1))
edge s10 -> s12: (or (= (mod t 3) 1) (= (mod t 4) 3))
edge s11 -> s9: (not (= (mod t 4) 0))
edge s12 -> s3: (= (mod t 5) 3)
edge s12 -> s5: (not (= (mod t 3) 1))
edge s12 -> s7: (or (= (mod t 2) 1) (= (mod t 5) 4))
edge s12 -> s8: (2,22)
edge s13 -> s0: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s13 -> s1: (and (= (mod t 4) 0) (= (mod t 4) 1))
edge s13 -> s7: (or (= (mod t 4) 3) (= (mod t 5) 1))
edge s13 -> s12: (2)
edge s14 -> s3: (or (= (mod t 4) 0) (= (mod t 5) 3))
edge s14 -> s10: (or (= (mod t 5) 3) (= (mod t 4) 2))
edge s14 -> s13: (or (= (mod t 3) 1) (= (mod t 3) 0))
