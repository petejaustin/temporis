// Complex graph with 14 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[1]
node s2: label["n2"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["e"], owner[1]
node s5: label["state5"], owner[0]
node s6: label["g"], owner[1]
node s7: label["state7"], owner[0]
node s8: label["state8"], owner[1]
node s9: label["j"], owner[0]
node s10: label["state10"], owner[0]
node s11: label["l"], owner[1]
node s12: label["n12"], owner[0]
node s13: label["target"], owner[1]

edge s0 -> s1: (and (= (mod t 3) 2) (= (mod t 5) 3))
edge s0 -> s10: (not (= (mod t 4) 2))
edge s0 -> s11: (or (= (mod t 5) 1) (= (mod t 4) 2))
edge s0 -> s12: (not (= (mod t 3) 0))
edge s1 -> s4: (and (= (mod t 2) 0) (= (mod t 4) 1))
edge s1 -> s5: (and (= (mod t 3) 1) (= (mod t 5) 3))
edge s1 -> s12: (= (mod t 3) 2)
edge s2 -> s0: (3,5,13,20)
edge s2 -> s1
edge s2 -> s3: (= (mod t 6) 0)
edge s2 -> s5: (and (= (mod t 4) 1) (= (mod t 5) 0))
edge s2 -> s8: (not (= (mod t 5) 4))
edge s2 -> s9: (and (= (mod t 3) 1) (= (mod t 5) 3))
edge s2 -> s12: (and (= (mod t 3) 1) (= (mod t 3) 0))
edge s3 -> s0: (= (mod t 6) 3)
edge s3 -> s8: (14,18)
edge s4 -> s6
edge s4 -> s8: (or (= (mod t 4) 2) (= (mod t 5) 0))
edge s4 -> s9: (not (= (mod t 5) 0))
edge s4 -> s12: (or (= (mod t 4) 1) (= (mod t 3) 1))
edge s4 -> s13
edge s5 -> s2: (or (= (mod t 5) 2) (= (mod t 4) 1))
edge s5 -> s11
edge s5 -> s12
edge s6 -> s1: (0,1,18,21,27)
edge s6 -> s2: (not (= (mod t 6) 0))
edge s6 -> s7: (not (= (mod t 2) 1))
edge s6 -> s8
edge s6 -> s10: (and (= (mod t 4) 0) (= (mod t 5) 2))
edge s7 -> s5: (and (= (mod t 3) 2) (= (mod t 4) 3))
edge s7 -> s10: (= (mod t 3) 1)
edge s7 -> s12: (and (= (mod t 4) 0) (= (mod t 4) 0))
edge s8 -> s7: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s8 -> s12: (or (= (mod t 3) 1) (= (mod t 5) 1))
edge s9 -> s1: (or (= (mod t 4) 1) (= (mod t 4) 0))
edge s9 -> s5: (or (= (mod t 5) 1) (= (mod t 5) 2))
edge s9 -> s7
edge s9 -> s11: (and (= (mod t 3) 0) (= (mod t 4) 1))
edge s10 -> s0: (not (= (mod t 5) 3))
edge s10 -> s4: (and (= (mod t 3) 2) (= (mod t 5) 4))
edge s10 -> s8
edge s10 -> s11
edge s11 -> s0: (not (= (mod t 3) 2))
edge s11 -> s3: (= (mod t 3) 0)
edge s11 -> s6: (0,11,14,15,16)
edge s11 -> s10
edge s11 -> s12: (not (= (mod t 5) 1))
edge s11 -> s13: (= (mod t 8) 5)
edge s12 -> s0: (13,16,17,18,25)
edge s12 -> s3
edge s12 -> s5: (or (= (mod t 5) 1) (= (mod t 5) 3))
edge s12 -> s11: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s13 -> s6: (or (= (mod t 4) 1) (= (mod t 2) 0))
edge s13 -> s8: (or (= (mod t 2) 1) (= (mod t 3) 1))
edge s13 -> s11: (= (mod t 7) 1)
