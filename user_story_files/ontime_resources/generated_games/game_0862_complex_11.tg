// Complex graph with 11 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[1]
node s2: label["n2"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["e"], owner[0]
node s5: label["state5"], owner[1]
node s6: label["g"], owner[0]
node s7: label["h"], owner[0]
node s8: label["i"], owner[0]
node s9: label["j"], owner[1]
node s10: label["target"], owner[1]

edge s0 -> s4
edge s0 -> s8
edge s1 -> s3: (or (= (mod t 3) 1) (= (mod t 4) 0))
edge s1 -> s5: (not (= (mod t 3) 0))
edge s1 -> s7: (= (mod t 8) 6)
edge s1 -> s9
edge s2 -> s1
edge s2 -> s3: (= (mod t 7) 3)
edge s2 -> s5: (or (= (mod t 3) 1) (= (mod t 2) 0))
edge s2 -> s6: (or (= (mod t 2) 1) (= (mod t 2) 0))
edge s2 -> s9: (= (mod t 8) 1)
edge s2 -> s10: (= (mod t 7) 1)
edge s3 -> s0: (3,12,15)
edge s3 -> s1: (or (= (mod t 2) 1) (= (mod t 4) 0))
edge s3 -> s2
edge s3 -> s9: (not (= (mod t 2) 1))
edge s4 -> s0
edge s4 -> s5: (and (= (mod t 3) 2) (= (mod t 4) 2))
edge s4 -> s7
edge s5 -> s2: (or (= (mod t 5) 3) (= (mod t 4) 0))
edge s5 -> s8
edge s5 -> s9: (or (= (mod t 3) 2) (= (mod t 3) 0))
edge s5 -> s10: (or (= (mod t 3) 1) (= (mod t 5) 1))
edge s6 -> s1: (not (= (mod t 6) 5))
edge s6 -> s2: (not (= (mod t 6) 0))
edge s7 -> s1: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s7 -> s3: (or (= (mod t 5) 0) (= (mod t 5) 4))
edge s7 -> s4: (14)
edge s7 -> s8: (= (mod t 2) 0)
edge s8 -> s2
edge s8 -> s5: (not (= (mod t 2) 1))
edge s9 -> s2: (= (mod t 4) 1)
edge s10 -> s2
edge s10 -> s3
edge s10 -> s4: (not (= (mod t 5) 4))
edge s10 -> s7: (not (= (mod t 3) 2))
edge s10 -> s9: (or (= (mod t 5) 3) (= (mod t 5) 3))
