// Complex graph with 12 nodes

node s0: label["start"], owner[1]
node s1: label["b"], owner[1]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[0]
node s4: label["e"], owner[0]
node s5: label["f"], owner[0]
node s6: label["n6"], owner[0]
node s7: label["h"], owner[1]
node s8: label["i"], owner[1]
node s9: label["state9"], owner[0]
node s10: label["state10"], owner[0]
node s11: label["target"], owner[0]

edge s0 -> s2: (or (= (mod t 5) 2) (= (mod t 3) 2))
edge s0 -> s4: (not (= (mod t 3) 1))
edge s2 -> s8: (and (= (mod t 4) 1) (= (mod t 4) 3))
edge s2 -> s10: (not (= (mod t 2) 0))
edge s3 -> s0: (= (mod t 8) 7)
edge s3 -> s4: (or (= (mod t 3) 0) (= (mod t 4) 3))
edge s3 -> s10
edge s3 -> s11: (= (mod t 6) 1)
edge s4 -> s0: (or (= (mod t 4) 3) (= (mod t 5) 0))
edge s4 -> s3: (3,5,9)
edge s4 -> s10: (and (= (mod t 4) 1) (= (mod t 3) 2))
edge s5 -> s3: (not (= (mod t 4) 3))
edge s6 -> s0
edge s7 -> s3: (and (= (mod t 3) 0) (= (mod t 4) 0))
edge s7 -> s6: (not (= (mod t 6) 1))
edge s7 -> s8: (= (mod t 8) 2)
edge s8 -> s3: (= (mod t 2) 1)
edge s8 -> s6: (0,5,10,14,15)
edge s8 -> s10: (= (mod t 2) 0)
edge s9 -> s2: (not (= (mod t 6) 2))
edge s9 -> s4: (not (= (mod t 5) 3))
edge s10 -> s1: (and (= (mod t 4) 0) (= (mod t 4) 3))
edge s10 -> s9: (= (mod t 7) 6)
edge s11 -> s0
edge s11 -> s1: (2,5,9,11,17)
edge s11 -> s3: (= (mod t 5) 2)
edge s11 -> s6: (= (mod t 7) 4)
edge s11 -> s7: (not (= (mod t 2) 0))
edge s11 -> s10
