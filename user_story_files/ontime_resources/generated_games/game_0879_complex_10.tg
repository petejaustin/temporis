// Complex graph with 10 nodes

node s0: label["start"], owner[1]
node s1: label["b"], owner[0]
node s2: label["c"], owner[1]
node s3: label["n3"], owner[1]
node s4: label["e"], owner[1]
node s5: label["state5"], owner[1]
node s6: label["n6"], owner[0]
node s7: label["h"], owner[1]
node s8: label["n8"], owner[0]
node s9: label["target"], owner[1]

edge s0 -> s2
edge s0 -> s7: (= (mod t 7) 5)
edge s0 -> s8: (not (= (mod t 5) 2))
edge s1 -> s3: (5,9,21,23,28)
edge s1 -> s9: (or (= (mod t 4) 2) (= (mod t 5) 3))
edge s2 -> s0: (not (= (mod t 6) 1))
edge s2 -> s7: (and (= (mod t 4) 1) (= (mod t 3) 1))
edge s2 -> s8: (or (= (mod t 4) 2) (= (mod t 3) 2))
edge s3 -> s2: (3,5,7,10)
edge s3 -> s4: (or (= (mod t 3) 0) (= (mod t 5) 4))
edge s4 -> s6
edge s4 -> s7: (and (= (mod t 4) 0) (= (mod t 4) 3))
edge s4 -> s8
edge s5 -> s7: (= (mod t 4) 2)
edge s5 -> s9: (not (= (mod t 5) 2))
edge s6 -> s8: (1)
edge s6 -> s9: (and (= (mod t 3) 2) (= (mod t 3) 1))
edge s7 -> s4: (= (mod t 7) 3)
edge s8 -> s0: (= (mod t 4) 2)
edge s8 -> s3: (= (mod t 6) 1)
edge s8 -> s4
edge s8 -> s6
edge s9 -> s1: (and (= (mod t 2) 1) (= (mod t 4) 2))
edge s9 -> s5: (or (= (mod t 5) 3) (= (mod t 4) 1))
