// Complex graph with 12 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[0]
node s2: label["n2"], owner[1]
node s3: label["d"], owner[1]
node s4: label["state4"], owner[1]
node s5: label["f"], owner[1]
node s6: label["state6"], owner[1]
node s7: label["n7"], owner[0]
node s8: label["state8"], owner[0]
node s9: label["n9"], owner[1]
node s10: label["state10"], owner[0]
node s11: label["target"], owner[1]

edge s0 -> s11: (or (= (mod t 5) 0) (= (mod t 2) 1))
edge s1 -> s0: (= (mod t 2) 1)
edge s1 -> s3: (= (mod t 3) 2)
edge s1 -> s5: (or (= (mod t 4) 1) (= (mod t 5) 4))
edge s1 -> s7: (and (= (mod t 4) 3) (= (mod t 5) 2))
edge s1 -> s9: (or (= (mod t 2) 1) (= (mod t 2) 1))
edge s1 -> s11: (not (= (mod t 3) 2))
edge s2 -> s4
edge s2 -> s5
edge s2 -> s10: (and (= (mod t 4) 1) (= (mod t 3) 0))
edge s4 -> s6: (and (= (mod t 3) 0) (= (mod t 5) 2))
edge s5 -> s0: (= (mod t 3) 0)
edge s5 -> s4: (not (= (mod t 3) 0))
edge s5 -> s6: (6,10,19)
edge s5 -> s7
edge s6 -> s0
edge s6 -> s5: (not (= (mod t 6) 2))
edge s6 -> s7
edge s6 -> s9: (and (= (mod t 4) 2) (= (mod t 4) 3))
edge s8 -> s6: (not (= (mod t 6) 4))
edge s8 -> s7: (2,8)
edge s8 -> s9: (and (= (mod t 4) 1) (= (mod t 3) 1))
edge s8 -> s10: (and (= (mod t 3) 2) (= (mod t 3) 1))
edge s9 -> s4: (not (= (mod t 5) 2))
edge s9 -> s7: (and (= (mod t 4) 2) (= (mod t 4) 1))
edge s9 -> s8: (= (mod t 7) 5)
edge s10 -> s0: (= (mod t 7) 1)
edge s10 -> s7
edge s11 -> s0: (= (mod t 7) 4)
edge s11 -> s3: (= (mod t 6) 1)
edge s11 -> s8: (or (= (mod t 4) 3) (= (mod t 3) 1))
