// Complex graph with 14 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[0]
node s4: label["state4"], owner[1]
node s5: label["state5"], owner[0]
node s6: label["g"], owner[1]
node s7: label["n7"], owner[0]
node s8: label["state8"], owner[1]
node s9: label["n9"], owner[0]
node s10: label["k"], owner[0]
node s11: label["state11"], owner[0]
node s12: label["m"], owner[1]
node s13: label["target"], owner[1]

edge s0 -> s12: (= (mod t 3) 1)
edge s0 -> s13: (and (= (mod t 3) 2) (= (mod t 4) 2))
edge s1 -> s3: (= (mod t 2) 0)
edge s1 -> s5
edge s1 -> s11: (or (= (mod t 3) 1) (= (mod t 2) 1))
edge s2 -> s1: (and (= (mod t 3) 1) (= (mod t 5) 2))
edge s2 -> s3: (not (= (mod t 5) 1))
edge s2 -> s6
edge s2 -> s9: (and (= (mod t 4) 1) (= (mod t 5) 1))
edge s2 -> s10: (= (mod t 6) 4)
edge s3 -> s6: (6)
edge s3 -> s7: (8,10,19)
edge s3 -> s8: (or (= (mod t 4) 3) (= (mod t 4) 3))
edge s4 -> s7: (and (= (mod t 4) 1) (= (mod t 3) 0))
edge s4 -> s11
edge s4 -> s13: (= (mod t 2) 1)
edge s5 -> s3: (not (= (mod t 2) 1))
edge s5 -> s13: (and (= (mod t 3) 0) (= (mod t 4) 3))
edge s6 -> s3: (not (= (mod t 3) 0))
edge s6 -> s10: (and (= (mod t 2) 1) (= (mod t 4) 3))
edge s6 -> s12: (not (= (mod t 2) 0))
edge s6 -> s13: (= (mod t 4) 0)
edge s7 -> s3: (or (= (mod t 2) 1) (= (mod t 4) 2))
edge s7 -> s8: (or (= (mod t 4) 0) (= (mod t 5) 4))
edge s7 -> s11: (= (mod t 7) 5)
edge s8 -> s2: (and (= (mod t 2) 1) (= (mod t 4) 1))
edge s8 -> s5: (= (mod t 3) 1)
edge s8 -> s7: (6,21)
edge s9 -> s1: (and (= (mod t 4) 3) (= (mod t 5) 1))
edge s9 -> s2: (= (mod t 5) 3)
edge s9 -> s4: (0,13,20)
edge s9 -> s5
edge s9 -> s7
edge s9 -> s11: (not (= (mod t 4) 2))
edge s10 -> s0: (= (mod t 4) 2)
edge s10 -> s1: (not (= (mod t 4) 3))
edge s10 -> s4: (19)
edge s10 -> s11: (or (= (mod t 3) 2) (= (mod t 3) 2))
edge s11 -> s4: (not (= (mod t 3) 0))
edge s11 -> s5
edge s11 -> s6: (= (mod t 5) 3)
edge s11 -> s9: (or (= (mod t 2) 0) (= (mod t 3) 1))
edge s12 -> s3
edge s12 -> s4: (4,18)
edge s12 -> s10: (or (= (mod t 2) 0) (= (mod t 4) 0))
edge s12 -> s11: (not (= (mod t 3) 2))
edge s12 -> s13: (or (= (mod t 4) 3) (= (mod t 4) 2))
edge s13 -> s0: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s13 -> s3: (8,13,17)
edge s13 -> s6: (and (= (mod t 4) 3) (= (mod t 3) 0))
edge s13 -> s7: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s13 -> s9: (1,11,13,23)
edge s13 -> s11: (not (= (mod t 5) 3))
edge s13 -> s12: (or (= (mod t 5) 0) (= (mod t 5) 2))
