// Complex graph with 13 nodes

node s0: label["s0"], owner[0]
node s1: label["s1"], owner[0]
node s2: label["s2"], owner[0]
node s3: label["s3"], owner[0]
node s4: label["s4"], owner[1]
node s5: label["s5"], owner[1]
node s6: label["s6"], owner[0]
node s7: label["s7"], owner[0]
node s8: label["s8"], owner[1]
node s9: label["s9"], owner[1]
node s10: label["s10"], owner[0]
node s11: label["s11"], owner[0]
node s12: label["s12"], owner[0]

edge s0 -> s1
edge s0 -> s6: (or (= (mod t 3) 2) (= (mod t 4) 0))
edge s0 -> s11: (or (= (mod t 5) 2) (= (mod t 2) 0))
edge s1 -> s2: (and (= (mod t 2) 1) (= (mod t 4) 2))
edge s2 -> s10: (not (= (mod t 4) 1))
edge s2 -> s11: (not (= (mod t 3) 1))
edge s3 -> s1: (not (= (mod t 6) 3))
edge s3 -> s4: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s3 -> s10: (or (= (mod t 2) 1) (= (mod t 2) 0))
edge s3 -> s12: (or (= (mod t 5) 3) (= (mod t 4) 1))
edge s4 -> s1: (not (= (mod t 3) 2))
edge s4 -> s5: (0)
edge s4 -> s7: (11,22)
edge s5 -> s1: (not (= (mod t 3) 2))
edge s5 -> s2: (10,24)
edge s5 -> s7: (1,11,14)
edge s5 -> s12: (= (mod t 8) 2)
edge s6 -> s8
edge s6 -> s12: (and (= (mod t 3) 0) (= (mod t 4) 0))
edge s7 -> s1
edge s7 -> s3: (not (= (mod t 2) 0))
edge s7 -> s9: (0,5,9,18,21)
edge s7 -> s11: (12)
edge s8 -> s0: (or (= (mod t 2) 1) (= (mod t 3) 0))
edge s8 -> s9
edge s8 -> s11: (not (= (mod t 5) 3))
edge s9 -> s2: (or (= (mod t 5) 3) (= (mod t 3) 1))
edge s9 -> s5: (not (= (mod t 3) 2))
edge s9 -> s6
edge s9 -> s12: (and (= (mod t 4) 3) (= (mod t 5) 1))
edge s10 -> s4: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s10 -> s7
edge s11 -> s0: (or (= (mod t 5) 3) (= (mod t 4) 3))
edge s11 -> s3: (13,27)
edge s11 -> s9: (or (= (mod t 5) 3) (= (mod t 5) 0))
edge s12 -> s0
edge s12 -> s1: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s12 -> s5: (= (mod t 6) 4)
edge s12 -> s7: (and (= (mod t 4) 2) (= (mod t 3) 1))
