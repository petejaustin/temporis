// Complex graph with 13 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["n3"], owner[0]
node s4: label["state4"], owner[0]
node s5: label["n5"], owner[1]
node s6: label["state6"], owner[0]
node s7: label["state7"], owner[0]
node s8: label["state8"], owner[1]
node s9: label["j"], owner[1]
node s10: label["state10"], owner[1]
node s11: label["state11"], owner[0]
node s12: label["target"], owner[1]

edge s0 -> s4
edge s0 -> s5: (= (mod t 8) 4)
edge s1 -> s0: (not (= (mod t 5) 0))
edge s1 -> s3: (12)
edge s1 -> s4: (= (mod t 5) 0)
edge s2 -> s0: (and (= (mod t 4) 1) (= (mod t 4) 1))
edge s2 -> s4: (5,6,11,12)
edge s2 -> s6: (or (= (mod t 3) 2) (= (mod t 3) 2))
edge s2 -> s9
edge s2 -> s11: (not (= (mod t 6) 2))
edge s3 -> s0: (or (= (mod t 5) 4) (= (mod t 5) 0))
edge s3 -> s2: (not (= (mod t 3) 0))
edge s3 -> s7: (8,11,20,21)
edge s3 -> s10: (= (mod t 5) 3)
edge s4 -> s0: (or (= (mod t 5) 3) (= (mod t 4) 2))
edge s4 -> s1: (or (= (mod t 2) 0) (= (mod t 4) 2))
edge s4 -> s8: (and (= (mod t 3) 2) (= (mod t 5) 0))
edge s4 -> s9: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s4 -> s10: (15)
edge s4 -> s12: (= (mod t 4) 1)
edge s5 -> s1: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s5 -> s3: (= (mod t 8) 3)
edge s5 -> s4
edge s5 -> s8: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s5 -> s12: (9,13)
edge s6 -> s1: (and (= (mod t 2) 0) (= (mod t 5) 4))
edge s6 -> s3: (and (= (mod t 2) 0) (= (mod t 4) 2))
edge s6 -> s4: (= (mod t 3) 2)
edge s7 -> s0
edge s7 -> s1: (not (= (mod t 6) 3))
edge s7 -> s4: (2,3,10,15,21)
edge s8 -> s1: (0,1,6,7,13)
edge s8 -> s2: (not (= (mod t 2) 1))
edge s8 -> s5: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s8 -> s7: (or (= (mod t 2) 1) (= (mod t 4) 3))
edge s8 -> s9: (= (mod t 3) 2)
edge s8 -> s10: (not (= (mod t 5) 4))
edge s8 -> s12: (or (= (mod t 5) 0) (= (mod t 4) 1))
edge s9 -> s1: (and (= (mod t 4) 0) (= (mod t 4) 0))
edge s9 -> s2: (and (= (mod t 3) 2) (= (mod t 3) 2))
edge s9 -> s4: (0,12)
edge s9 -> s11: (not (= (mod t 2) 1))
edge s10 -> s5
edge s10 -> s7: (or (= (mod t 3) 1) (= (mod t 4) 2))
edge s11 -> s0
edge s11 -> s3: (and (= (mod t 3) 1) (= (mod t 5) 1))
edge s11 -> s4
edge s11 -> s5: (and (= (mod t 4) 0) (= (mod t 4) 1))
edge s11 -> s7: (or (= (mod t 5) 2) (= (mod t 5) 2))
edge s11 -> s8: (not (= (mod t 2) 1))
edge s11 -> s12: (= (mod t 6) 1)
edge s12 -> s2: (7,9,11,19)
edge s12 -> s8: (or (= (mod t 4) 3) (= (mod t 4) 0))
