// Complex graph with 12 nodes

node s0: label["s0"], owner[0]
node s1: label["s1"], owner[1]
node s2: label["s2"], owner[0]
node s3: label["s3"], owner[0]
node s4: label["s4"], owner[1]
node s5: label["s5"], owner[1]
node s6: label["s6"], owner[0]
node s7: label["s7"], owner[0]
node s8: label["s8"], owner[0]
node s9: label["s9"], owner[0]
node s10: label["s10"], owner[1]
node s11: label["s11"], owner[0]

edge s0 -> s1: (or (= (mod t 4) 3) (= (mod t 5) 2))
edge s0 -> s4: (or (= (mod t 2) 0) (= (mod t 3) 1))
edge s0 -> s5: (not (= (mod t 4) 3))
edge s0 -> s8: (and (= (mod t 2) 0) (= (mod t 5) 0))
edge s0 -> s9: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s1 -> s7: (= (mod t 2) 0)
edge s1 -> s8: (1,5,24)
edge s1 -> s9
edge s2 -> s7: (7,10,21)
edge s2 -> s10
edge s3 -> s0: (= (mod t 2) 0)
edge s3 -> s2: (and (= (mod t 3) 1) (= (mod t 5) 3))
edge s3 -> s6
edge s3 -> s7: (5,12,15)
edge s3 -> s11: (and (= (mod t 4) 0) (= (mod t 4) 0))
edge s4 -> s0: (and (= (mod t 4) 1) (= (mod t 5) 2))
edge s4 -> s5: (= (mod t 7) 6)
edge s4 -> s7
edge s5 -> s6: (= (mod t 7) 6)
edge s5 -> s8: (and (= (mod t 2) 1) (= (mod t 5) 1))
edge s5 -> s9: (or (= (mod t 4) 0) (= (mod t 4) 2))
edge s5 -> s11: (or (= (mod t 5) 2) (= (mod t 4) 3))
edge s6 -> s1: (3,4,8,10,11)
edge s6 -> s4: (or (= (mod t 4) 1) (= (mod t 4) 0))
edge s6 -> s11: (and (= (mod t 4) 2) (= (mod t 3) 1))
edge s7 -> s6: (= (mod t 4) 1)
edge s7 -> s10: (= (mod t 5) 3)
edge s8 -> s4: (not (= (mod t 3) 2))
edge s8 -> s6: (11,14,15,18)
edge s9 -> s6: (or (= (mod t 4) 0) (= (mod t 2) 1))
edge s9 -> s11: (not (= (mod t 5) 0))
edge s10 -> s7: (1,9)
edge s10 -> s8: (= (mod t 5) 0)
edge s10 -> s11
edge s11 -> s1: (= (mod t 7) 3)
edge s11 -> s3
edge s11 -> s5: (1,5,16)
edge s11 -> s6: (or (= (mod t 4) 2) (= (mod t 2) 0))
edge s11 -> s7: (= (mod t 7) 4)
