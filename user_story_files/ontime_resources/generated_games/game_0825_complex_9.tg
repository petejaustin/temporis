// Complex graph with 9 nodes

node s0: label["start"], owner[1]
node s1: label["b"], owner[1]
node s2: label["c"], owner[0]
node s3: label["d"], owner[1]
node s4: label["state4"], owner[0]
node s5: label["state5"], owner[1]
node s6: label["g"], owner[0]
node s7: label["state7"], owner[0]
node s8: label["target"], owner[1]

edge s0 -> s6: (2,6,7,10,12)
edge s1 -> s0: (7)
edge s1 -> s2: (and (= (mod t 2) 0) (= (mod t 4) 3))
edge s1 -> s4: (or (= (mod t 4) 3) (= (mod t 2) 0))
edge s1 -> s5: (not (= (mod t 2) 0))
edge s1 -> s7: (= (mod t 3) 0)
edge s2 -> s3: (not (= (mod t 2) 1))
edge s2 -> s4: (= (mod t 7) 3)
edge s2 -> s8: (3,9,10,12)
edge s3 -> s8
edge s4 -> s3: (not (= (mod t 4) 2))
edge s4 -> s5: (or (= (mod t 2) 1) (= (mod t 2) 0))
edge s4 -> s8: (2,20)
edge s5 -> s0
edge s5 -> s1: (not (= (mod t 2) 1))
edge s5 -> s6: (not (= (mod t 5) 1))
edge s6 -> s2: (or (= (mod t 4) 2) (= (mod t 3) 1))
edge s6 -> s4: (17,21)
edge s7 -> s0: (not (= (mod t 3) 2))
edge s7 -> s2: (not (= (mod t 3) 2))
edge s7 -> s5: (7,12,20,28)
edge s7 -> s6: (and (= (mod t 3) 2) (= (mod t 5) 3))
edge s7 -> s8: (or (= (mod t 2) 1) (= (mod t 3) 0))
edge s8 -> s2: (not (= (mod t 2) 0))
edge s8 -> s5: (not (= (mod t 3) 1))
edge s8 -> s7: (or (= (mod t 4) 0) (= (mod t 5) 4))
