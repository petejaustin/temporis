// Complex graph with 11 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[0]
node s3: label["d"], owner[1]
node s4: label["n4"], owner[1]
node s5: label["n5"], owner[1]
node s6: label["g"], owner[0]
node s7: label["n7"], owner[1]
node s8: label["state8"], owner[1]
node s9: label["n9"], owner[0]
node s10: label["target"], owner[1]

edge s0 -> s4: (= (mod t 5) 1)
edge s0 -> s5
edge s0 -> s6: (= (mod t 4) 3)
edge s0 -> s8: (= (mod t 4) 3)
edge s0 -> s9: (not (= (mod t 6) 0))
edge s1 -> s4: (= (mod t 8) 6)
edge s1 -> s7: (or (= (mod t 4) 2) (= (mod t 5) 2))
edge s1 -> s8: (and (= (mod t 3) 2) (= (mod t 4) 0))
edge s1 -> s10
edge s3 -> s4
edge s3 -> s5
edge s3 -> s10: (= (mod t 6) 4)
edge s4 -> s0: (= (mod t 2) 1)
edge s4 -> s6: (7,8,10,13,14)
edge s4 -> s9: (not (= (mod t 4) 0))
edge s5 -> s1: (= (mod t 7) 5)
edge s5 -> s8
edge s6 -> s0: (or (= (mod t 5) 2) (= (mod t 4) 1))
edge s7 -> s10: (or (= (mod t 4) 0) (= (mod t 3) 1))
edge s8 -> s2: (and (= (mod t 4) 2) (= (mod t 4) 3))
edge s8 -> s6: (= (mod t 6) 3)
edge s9 -> s0: (and (= (mod t 3) 2) (= (mod t 3) 0))
edge s9 -> s2
edge s9 -> s4: (= (mod t 8) 4)
edge s9 -> s6
edge s9 -> s7: (not (= (mod t 2) 0))
edge s10 -> s4: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s10 -> s7: (= (mod t 3) 2)
