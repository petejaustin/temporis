// Complex graph with 11 nodes

node s0: label["s0"], owner[1]
node s1: label["s1"], owner[1]
node s2: label["s2"], owner[0]
node s3: label["s3"], owner[0]
node s4: label["s4"], owner[0]
node s5: label["s5"], owner[1]
node s6: label["s6"], owner[1]
node s7: label["s7"], owner[0]
node s8: label["s8"], owner[1]
node s9: label["s9"], owner[1]
node s10: label["s10"], owner[1]

edge s0 -> s1: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s0 -> s4: (and (= (mod t 4) 3) (= (mod t 3) 1))
edge s0 -> s6: (or (= (mod t 4) 0) (= (mod t 4) 2))
edge s0 -> s9: (14)
edge s1 -> s8
edge s2 -> s3
edge s2 -> s4: (or (= (mod t 4) 1) (= (mod t 2) 1))
edge s2 -> s6: (not (= (mod t 2) 1))
edge s2 -> s9
edge s3 -> s1: (3,7,10,12,13)
edge s3 -> s8: (16)
edge s3 -> s9: (6,11,17,24)
edge s3 -> s10: (not (= (mod t 5) 4))
edge s4 -> s0
edge s4 -> s10: (or (= (mod t 4) 3) (= (mod t 3) 1))
edge s5 -> s0
edge s5 -> s1: (= (mod t 2) 0)
edge s5 -> s4: (= (mod t 6) 3)
edge s5 -> s10
edge s6 -> s7
edge s6 -> s9: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s7 -> s0: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s7 -> s5: (= (mod t 5) 4)
edge s7 -> s6: (not (= (mod t 3) 2))
edge s8 -> s1: (or (= (mod t 2) 0) (= (mod t 4) 1))
edge s8 -> s2: (not (= (mod t 6) 5))
edge s8 -> s5: (and (= (mod t 3) 2) (= (mod t 4) 2))
edge s8 -> s6: (not (= (mod t 2) 0))
edge s8 -> s10
edge s9 -> s3: (= (mod t 7) 4)
edge s9 -> s5: (= (mod t 4) 0)
edge s9 -> s7: (and (= (mod t 2) 1) (= (mod t 5) 1))
edge s9 -> s8: (not (= (mod t 5) 1))
edge s10 -> s0: (1,8,11)
edge s10 -> s1: (3)
edge s10 -> s3: (6,7,8)
edge s10 -> s7: (8,17)
