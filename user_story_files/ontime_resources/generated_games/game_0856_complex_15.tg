// Complex graph with 15 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[1]
node s2: label["state2"], owner[0]
node s3: label["n3"], owner[1]
node s4: label["e"], owner[1]
node s5: label["f"], owner[0]
node s6: label["g"], owner[0]
node s7: label["h"], owner[1]
node s8: label["n8"], owner[1]
node s9: label["n9"], owner[1]
node s10: label["n10"], owner[1]
node s11: label["state11"], owner[1]
node s12: label["n12"], owner[0]
node s13: label["state13"], owner[1]
node s14: label["target"], owner[1]

edge s0 -> s2: (= (mod t 3) 1)
edge s0 -> s5: (or (= (mod t 2) 0) (= (mod t 4) 2))
edge s1 -> s2
edge s1 -> s4: (or (= (mod t 4) 2) (= (mod t 3) 0))
edge s1 -> s6: (8)
edge s1 -> s14
edge s2 -> s4: (not (= (mod t 6) 3))
edge s2 -> s5: (or (= (mod t 4) 3) (= (mod t 5) 2))
edge s2 -> s7: (not (= (mod t 4) 3))
edge s2 -> s12
edge s2 -> s13: (and (= (mod t 2) 0) (= (mod t 4) 3))
edge s3 -> s0: (or (= (mod t 4) 3) (= (mod t 3) 0))
edge s3 -> s10: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s3 -> s11: (and (= (mod t 3) 1) (= (mod t 4) 2))
edge s4 -> s0: (and (= (mod t 3) 0) (= (mod t 4) 0))
edge s4 -> s5: (15,19)
edge s4 -> s6: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s4 -> s8
edge s4 -> s11
edge s4 -> s14: (or (= (mod t 5) 3) (= (mod t 2) 0))
edge s5 -> s0: (not (= (mod t 4) 0))
edge s5 -> s14: (= (mod t 3) 0)
edge s6 -> s7: (and (= (mod t 4) 0) (= (mod t 3) 1))
edge s7 -> s2
edge s7 -> s3: (or (= (mod t 4) 0) (= (mod t 3) 1))
edge s7 -> s5: (and (= (mod t 4) 3) (= (mod t 4) 0))
edge s7 -> s9: (and (= (mod t 2) 0) (= (mod t 5) 1))
edge s7 -> s14: (not (= (mod t 6) 3))
edge s8 -> s3
edge s8 -> s4: (= (mod t 7) 4)
edge s8 -> s12: (= (mod t 6) 2)
edge s9 -> s0: (= (mod t 2) 0)
edge s9 -> s1: (or (= (mod t 4) 1) (= (mod t 4) 3))
edge s9 -> s3: (not (= (mod t 6) 2))
edge s9 -> s5
edge s9 -> s6: (= (mod t 5) 4)
edge s9 -> s8: (5,9,10,15)
edge s10 -> s6: (not (= (mod t 3) 2))
edge s10 -> s7
edge s10 -> s9: (= (mod t 3) 1)
edge s10 -> s11
edge s10 -> s13: (9,21)
edge s10 -> s14
edge s11 -> s5: (2)
edge s11 -> s6: (and (= (mod t 4) 1) (= (mod t 3) 1))
edge s12 -> s1
edge s12 -> s4: (3,4,10,11,13)
edge s12 -> s5: (not (= (mod t 2) 0))
edge s12 -> s8
edge s12 -> s11: (not (= (mod t 2) 1))
edge s12 -> s14: (and (= (mod t 3) 2) (= (mod t 5) 3))
edge s13 -> s5: (not (= (mod t 3) 1))
edge s13 -> s7: (or (= (mod t 5) 4) (= (mod t 5) 0))
edge s13 -> s8: (not (= (mod t 3) 0))
edge s14 -> s0: (and (= (mod t 2) 1) (= (mod t 4) 3))
edge s14 -> s1: (or (= (mod t 4) 3) (= (mod t 4) 2))
edge s14 -> s2
edge s14 -> s9: (or (= (mod t 4) 0) (= (mod t 3) 0))
edge s14 -> s10: (17,19)
