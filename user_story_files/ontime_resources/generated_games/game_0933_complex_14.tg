// Complex graph with 14 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[0]
node s3: label["state3"], owner[0]
node s4: label["e"], owner[0]
node s5: label["f"], owner[1]
node s6: label["state6"], owner[1]
node s7: label["n7"], owner[1]
node s8: label["state8"], owner[1]
node s9: label["j"], owner[0]
node s10: label["k"], owner[0]
node s11: label["state11"], owner[1]
node s12: label["m"], owner[1]
node s13: label["target"], owner[1]

edge s0 -> s4: (not (= (mod t 4) 0))
edge s0 -> s7: (= (mod t 5) 2)
edge s0 -> s11: (not (= (mod t 4) 1))
edge s0 -> s12: (or (= (mod t 2) 1) (= (mod t 4) 0))
edge s1 -> s3: (or (= (mod t 3) 2) (= (mod t 5) 2))
edge s1 -> s4: (and (= (mod t 3) 2) (= (mod t 3) 1))
edge s1 -> s7
edge s1 -> s11
edge s1 -> s13: (not (= (mod t 4) 1))
edge s2 -> s4: (or (= (mod t 4) 2) (= (mod t 2) 0))
edge s2 -> s11: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s3 -> s0: (or (= (mod t 4) 1) (= (mod t 4) 3))
edge s3 -> s5: (= (mod t 8) 4)
edge s3 -> s6: (= (mod t 5) 4)
edge s3 -> s10
edge s3 -> s13: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s4 -> s0
edge s4 -> s1
edge s4 -> s5: (not (= (mod t 4) 2))
edge s4 -> s7: (or (= (mod t 5) 1) (= (mod t 2) 0))
edge s4 -> s13: (2,8,12)
edge s5 -> s7: (= (mod t 6) 3)
edge s5 -> s9
edge s5 -> s10
edge s6 -> s2: (and (= (mod t 3) 2) (= (mod t 5) 2))
edge s6 -> s5: (not (= (mod t 6) 4))
edge s6 -> s11: (or (= (mod t 3) 0) (= (mod t 3) 1))
edge s7 -> s5: (not (= (mod t 4) 0))
edge s7 -> s11: (or (= (mod t 5) 2) (= (mod t 5) 3))
edge s8 -> s1: (or (= (mod t 3) 2) (= (mod t 2) 1))
edge s8 -> s2: (not (= (mod t 2) 1))
edge s8 -> s7: (and (= (mod t 3) 1) (= (mod t 4) 3))
edge s8 -> s10: (= (mod t 5) 0)
edge s9 -> s0: (= (mod t 5) 0)
edge s9 -> s3: (= (mod t 8) 3)
edge s9 -> s4
edge s9 -> s10: (= (mod t 8) 7)
edge s9 -> s13: (4,21)
edge s10 -> s0: (not (= (mod t 6) 4))
edge s10 -> s4: (4,14)
edge s10 -> s7: (and (= (mod t 3) 2) (= (mod t 5) 1))
edge s11 -> s0
edge s11 -> s1: (or (= (mod t 5) 1) (= (mod t 3) 0))
edge s11 -> s2: (not (= (mod t 5) 2))
edge s11 -> s6: (or (= (mod t 4) 0) (= (mod t 2) 1))
edge s11 -> s9
edge s12 -> s11: (and (= (mod t 4) 3) (= (mod t 5) 2))
edge s12 -> s13: (or (= (mod t 5) 3) (= (mod t 2) 0))
edge s13 -> s5: (= (mod t 2) 0)
edge s13 -> s8: (or (= (mod t 3) 1) (= (mod t 2) 1))
edge s13 -> s10: (22,26)
edge s13 -> s11: (not (= (mod t 6) 2))
