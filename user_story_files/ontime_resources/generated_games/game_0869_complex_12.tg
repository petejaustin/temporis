// Complex graph with 12 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[1]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["state4"], owner[0]
node s5: label["f"], owner[0]
node s6: label["n6"], owner[1]
node s7: label["state7"], owner[1]
node s8: label["n8"], owner[1]
node s9: label["j"], owner[1]
node s10: label["k"], owner[0]
node s11: label["target"], owner[1]

edge s0 -> s2
edge s1 -> s2: (= (mod t 5) 3)
edge s1 -> s3: (= (mod t 3) 0)
edge s1 -> s5: (= (mod t 6) 2)
edge s1 -> s8: (= (mod t 3) 1)
edge s1 -> s9: (3,8,22)
edge s1 -> s10: (= (mod t 7) 2)
edge s2 -> s0: (4,5,12,16,22)
edge s2 -> s3: (2,4,11,19)
edge s2 -> s5
edge s2 -> s7: (or (= (mod t 2) 1) (= (mod t 2) 0))
edge s2 -> s10: (not (= (mod t 3) 2))
edge s2 -> s11: (4,6,7,17)
edge s3 -> s2: (= (mod t 4) 3)
edge s3 -> s4: (= (mod t 2) 1)
edge s3 -> s5: (not (= (mod t 6) 5))
edge s3 -> s6: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s3 -> s7: (0,4)
edge s4 -> s3
edge s5 -> s1: (= (mod t 2) 1)
edge s5 -> s3: (not (= (mod t 5) 3))
edge s5 -> s7
edge s5 -> s9: (= (mod t 3) 2)
edge s5 -> s10: (1,8)
edge s5 -> s11: (and (= (mod t 2) 0) (= (mod t 5) 4))
edge s6 -> s1: (and (= (mod t 4) 2) (= (mod t 5) 4))
edge s6 -> s3: (not (= (mod t 3) 0))
edge s6 -> s4: (2,10,11,19)
edge s6 -> s10: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s7 -> s2: (or (= (mod t 2) 1) (= (mod t 5) 1))
edge s7 -> s8: (or (= (mod t 5) 2) (= (mod t 3) 2))
edge s8 -> s7: (or (= (mod t 2) 0) (= (mod t 4) 3))
edge s9 -> s1: (= (mod t 2) 0)
edge s9 -> s3: (13)
edge s9 -> s6: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s9 -> s7: (and (= (mod t 4) 3) (= (mod t 4) 1))
edge s10 -> s1: (0,5,8,11)
edge s10 -> s3: (4,15,18,21)
edge s10 -> s5: (11)
edge s11 -> s1: (not (= (mod t 4) 2))
edge s11 -> s2: (= (mod t 5) 0)
edge s11 -> s5: (= (mod t 3) 1)
edge s11 -> s7: (and (= (mod t 3) 1) (= (mod t 3) 0))
edge s11 -> s10: (not (= (mod t 5) 2))
