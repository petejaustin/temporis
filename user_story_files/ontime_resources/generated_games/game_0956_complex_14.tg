// Complex graph with 14 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[0]
node s2: label["n2"], owner[1]
node s3: label["d"], owner[0]
node s4: label["state4"], owner[0]
node s5: label["f"], owner[1]
node s6: label["n6"], owner[1]
node s7: label["state7"], owner[1]
node s8: label["state8"], owner[0]
node s9: label["state9"], owner[1]
node s10: label["state10"], owner[0]
node s11: label["l"], owner[1]
node s12: label["state12"], owner[0]
node s13: label["target"], owner[1]

edge s0 -> s2
edge s0 -> s3: (4,13,21,23,24)
edge s0 -> s9
edge s0 -> s10: (8,9,11,18)
edge s0 -> s12: (= (mod t 6) 0)
edge s0 -> s13: (and (= (mod t 3) 0) (= (mod t 4) 1))
edge s1 -> s0: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s1 -> s6: (not (= (mod t 5) 3))
edge s1 -> s13: (and (= (mod t 4) 2) (= (mod t 5) 0))
edge s2 -> s1: (and (= (mod t 4) 1) (= (mod t 4) 3))
edge s2 -> s11
edge s2 -> s12: (2,5,20,25)
edge s3 -> s4: (2,9,10,13,19)
edge s3 -> s9: (= (mod t 8) 3)
edge s4 -> s0: (not (= (mod t 3) 2))
edge s4 -> s6: (or (= (mod t 2) 0) (= (mod t 5) 2))
edge s4 -> s7: (or (= (mod t 5) 0) (= (mod t 2) 0))
edge s4 -> s12: (and (= (mod t 2) 0) (= (mod t 4) 0))
edge s4 -> s13: (not (= (mod t 2) 1))
edge s5 -> s2: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s5 -> s3: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s5 -> s4: (not (= (mod t 5) 3))
edge s5 -> s8: (or (= (mod t 3) 2) (= (mod t 5) 1))
edge s6 -> s1
edge s6 -> s4: (and (= (mod t 3) 2) (= (mod t 4) 2))
edge s6 -> s11
edge s7 -> s3
edge s8 -> s0: (= (mod t 6) 2)
edge s8 -> s1: (or (= (mod t 4) 2) (= (mod t 3) 2))
edge s8 -> s3: (= (mod t 4) 0)
edge s8 -> s4
edge s8 -> s6: (0,11,15)
edge s9 -> s3: (and (= (mod t 2) 0) (= (mod t 5) 3))
edge s9 -> s4: (= (mod t 5) 0)
edge s9 -> s5: (not (= (mod t 6) 2))
edge s9 -> s7: (1,5,7,12)
edge s9 -> s8: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s9 -> s11: (1,2,13)
edge s10 -> s2
edge s10 -> s5
edge s11 -> s3: (6,10)
edge s11 -> s5
edge s11 -> s9: (and (= (mod t 3) 2) (= (mod t 3) 1))
edge s11 -> s10: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s12 -> s1
edge s12 -> s6: (5)
edge s12 -> s7: (= (mod t 5) 4)
edge s12 -> s9: (not (= (mod t 3) 2))
edge s12 -> s10: (or (= (mod t 3) 2) (= (mod t 5) 4))
edge s13 -> s0: (= (mod t 2) 0)
edge s13 -> s8: (= (mod t 2) 1)
edge s13 -> s9: (not (= (mod t 5) 0))
edge s13 -> s10
