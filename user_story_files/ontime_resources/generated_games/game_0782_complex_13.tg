// Complex graph with 13 nodes

node s0: label["start"], owner[0]
node s1: label["b"], owner[1]
node s2: label["state2"], owner[0]
node s3: label["n3"], owner[1]
node s4: label["n4"], owner[1]
node s5: label["state5"], owner[1]
node s6: label["g"], owner[1]
node s7: label["state7"], owner[0]
node s8: label["n8"], owner[0]
node s9: label["n9"], owner[0]
node s10: label["k"], owner[0]
node s11: label["n11"], owner[1]
node s12: label["target"], owner[0]

edge s0 -> s1: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s0 -> s3: (or (= (mod t 3) 1) (= (mod t 4) 2))
edge s0 -> s4
edge s0 -> s6: (not (= (mod t 2) 1))
edge s0 -> s7: (2,3,4,10,12)
edge s0 -> s10: (= (mod t 3) 1)
edge s0 -> s12: (10,13)
edge s1 -> s0: (and (= (mod t 4) 0) (= (mod t 5) 3))
edge s1 -> s2: (not (= (mod t 4) 2))
edge s1 -> s3: (not (= (mod t 2) 0))
edge s1 -> s8: (not (= (mod t 3) 2))
edge s1 -> s11: (and (= (mod t 3) 1) (= (mod t 3) 2))
edge s2 -> s4: (= (mod t 2) 1)
edge s2 -> s6: (13)
edge s2 -> s11: (or (= (mod t 3) 1) (= (mod t 5) 1))
edge s3 -> s0: (or (= (mod t 4) 1) (= (mod t 4) 0))
edge s3 -> s1: (and (= (mod t 2) 0) (= (mod t 5) 4))
edge s3 -> s8: (= (mod t 3) 2)
edge s3 -> s9: (not (= (mod t 5) 3))
edge s4 -> s8: (not (= (mod t 5) 4))
edge s4 -> s9: (or (= (mod t 5) 3) (= (mod t 3) 1))
edge s4 -> s11: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s4 -> s12: (= (mod t 8) 6)
edge s5 -> s0: (= (mod t 4) 2)
edge s5 -> s1
edge s5 -> s2: (not (= (mod t 3) 2))
edge s5 -> s4: (or (= (mod t 4) 0) (= (mod t 5) 1))
edge s5 -> s10: (13,15,19)
edge s6 -> s7: (or (= (mod t 5) 3) (= (mod t 3) 0))
edge s7 -> s4: (or (= (mod t 4) 0) (= (mod t 3) 1))
edge s7 -> s6: (= (mod t 4) 2)
edge s7 -> s10: (or (= (mod t 5) 0) (= (mod t 3) 1))
edge s7 -> s11: (not (= (mod t 3) 1))
edge s8 -> s3: (not (= (mod t 2) 0))
edge s9 -> s4: (not (= (mod t 6) 2))
edge s9 -> s5
edge s9 -> s6: (or (= (mod t 5) 0) (= (mod t 5) 0))
edge s9 -> s7: (not (= (mod t 6) 1))
edge s9 -> s10: (4,14,21,23,24)
edge s9 -> s12: (and (= (mod t 3) 0) (= (mod t 4) 1))
edge s10 -> s2: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s10 -> s5: (= (mod t 2) 0)
edge s10 -> s6: (or (= (mod t 4) 3) (= (mod t 5) 4))
edge s10 -> s11: (or (= (mod t 5) 3) (= (mod t 4) 1))
edge s11 -> s1: (= (mod t 2) 0)
edge s11 -> s2: (or (= (mod t 5) 3) (= (mod t 3) 2))
edge s11 -> s4
edge s11 -> s5: (not (= (mod t 3) 1))
edge s11 -> s8: (or (= (mod t 2) 1) (= (mod t 5) 1))
edge s11 -> s9: (4,7,12,13,15)
edge s11 -> s10
edge s11 -> s12: (not (= (mod t 6) 1))
edge s12 -> s2: (and (= (mod t 3) 1) (= (mod t 4) 0))
edge s12 -> s9: (not (= (mod t 4) 2))
edge s12 -> s10: (not (= (mod t 2) 0))
edge s12 -> s11: (and (= (mod t 2) 0) (= (mod t 5) 1))
