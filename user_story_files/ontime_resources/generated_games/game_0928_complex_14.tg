// Complex graph with 14 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[1]
node s2: label["n2"], owner[0]
node s3: label["n3"], owner[1]
node s4: label["e"], owner[1]
node s5: label["n5"], owner[0]
node s6: label["g"], owner[0]
node s7: label["n7"], owner[0]
node s8: label["i"], owner[0]
node s9: label["n9"], owner[0]
node s10: label["n10"], owner[1]
node s11: label["l"], owner[0]
node s12: label["state12"], owner[1]
node s13: label["target"], owner[0]

edge s0 -> s2: (and (= (mod t 3) 0) (= (mod t 5) 3))
edge s0 -> s4
edge s0 -> s5: (or (= (mod t 5) 0) (= (mod t 5) 0))
edge s0 -> s7: (0,3,8,16)
edge s0 -> s10: (15,16)
edge s0 -> s12: (= (mod t 8) 1)
edge s1 -> s4: (not (= (mod t 5) 1))
edge s1 -> s6: (not (= (mod t 4) 3))
edge s1 -> s8: (14)
edge s1 -> s10: (not (= (mod t 3) 2))
edge s1 -> s12: (4,15)
edge s2 -> s6: (= (mod t 7) 6)
edge s3 -> s1: (and (= (mod t 3) 0) (= (mod t 5) 4))
edge s3 -> s4: (not (= (mod t 6) 2))
edge s3 -> s6: (and (= (mod t 2) 1) (= (mod t 4) 1))
edge s3 -> s7: (= (mod t 6) 1)
edge s3 -> s9
edge s3 -> s10: (= (mod t 7) 6)
edge s4 -> s0: (= (mod t 4) 1)
edge s4 -> s1: (not (= (mod t 4) 3))
edge s4 -> s2: (and (= (mod t 3) 0) (= (mod t 4) 2))
edge s4 -> s5: (and (= (mod t 3) 1) (= (mod t 5) 2))
edge s4 -> s13: (not (= (mod t 6) 4))
edge s5 -> s0
edge s5 -> s4: (= (mod t 8) 4)
edge s5 -> s8: (23)
edge s6 -> s1: (or (= (mod t 3) 0) (= (mod t 5) 2))
edge s6 -> s5: (= (mod t 7) 2)
edge s6 -> s9: (or (= (mod t 2) 1) (= (mod t 3) 1))
edge s6 -> s13: (not (= (mod t 4) 3))
edge s7 -> s1: (not (= (mod t 2) 1))
edge s7 -> s2: (0,2,6,7,14)
edge s7 -> s4: (= (mod t 8) 0)
edge s7 -> s6: (2,7,9)
edge s8 -> s4: (not (= (mod t 3) 2))
edge s8 -> s6: (and (= (mod t 4) 0) (= (mod t 3) 1))
edge s8 -> s9: (9,13)
edge s8 -> s11: (6,10,12,22,27)
edge s8 -> s12: (or (= (mod t 2) 0) (= (mod t 3) 0))
edge s10 -> s8: (not (= (mod t 2) 1))
edge s11 -> s2: (or (= (mod t 4) 3) (= (mod t 3) 1))
edge s11 -> s5: (or (= (mod t 5) 0) (= (mod t 2) 1))
edge s11 -> s7
edge s12 -> s3: (= (mod t 4) 1)
edge s12 -> s7: (not (= (mod t 2) 1))
edge s12 -> s9: (or (= (mod t 3) 0) (= (mod t 4) 3))
edge s13 -> s1: (= (mod t 4) 3)
edge s13 -> s8: (not (= (mod t 2) 1))
edge s13 -> s12: (= (mod t 7) 3)
