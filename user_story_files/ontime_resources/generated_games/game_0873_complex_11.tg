// Complex graph with 11 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[0]
node s2: label["state2"], owner[0]
node s3: label["n3"], owner[0]
node s4: label["n4"], owner[0]
node s5: label["n5"], owner[0]
node s6: label["state6"], owner[0]
node s7: label["h"], owner[1]
node s8: label["i"], owner[0]
node s9: label["n9"], owner[0]
node s10: label["target"], owner[0]

edge s0 -> s2: (= (mod t 2) 1)
edge s0 -> s6
edge s0 -> s7: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s0 -> s8: (22,25)
edge s1 -> s5: (and (= (mod t 4) 1) (= (mod t 3) 2))
edge s1 -> s6: (not (= (mod t 4) 0))
edge s1 -> s10: (2)
edge s2 -> s6
edge s2 -> s7: (not (= (mod t 2) 1))
edge s2 -> s8: (and (= (mod t 3) 2) (= (mod t 5) 1))
edge s2 -> s10: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s3 -> s1: (3,7,8,11,24)
edge s3 -> s2: (not (= (mod t 5) 1))
edge s3 -> s4: (= (mod t 4) 1)
edge s3 -> s8
edge s3 -> s10: (= (mod t 4) 0)
edge s4 -> s8: (not (= (mod t 6) 4))
edge s5 -> s0: (and (= (mod t 4) 1) (= (mod t 3) 2))
edge s5 -> s2: (not (= (mod t 6) 3))
edge s5 -> s3: (and (= (mod t 3) 0) (= (mod t 4) 1))
edge s5 -> s4: (= (mod t 6) 0)
edge s5 -> s6: (and (= (mod t 4) 0) (= (mod t 5) 4))
edge s5 -> s9: (6,9,11,23)
edge s6 -> s1: (16)
edge s6 -> s2: (= (mod t 5) 4)
edge s7 -> s2: (or (= (mod t 3) 2) (= (mod t 5) 0))
edge s7 -> s8
edge s8 -> s6: (= (mod t 6) 0)
edge s8 -> s7: (4,12)
edge s8 -> s9: (1,4,19,21,28)
edge s8 -> s10: (and (= (mod t 3) 2) (= (mod t 3) 0))
edge s9 -> s4: (not (= (mod t 5) 0))
edge s9 -> s7: (not (= (mod t 3) 0))
edge s10 -> s2
edge s10 -> s7: (and (= (mod t 2) 0) (= (mod t 5) 4))
edge s10 -> s9: (not (= (mod t 4) 3))
