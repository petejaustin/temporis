// Complex graph with 15 nodes

node s0: label["start"], owner[0]
node s1: label["b"], owner[1]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[0]
node s4: label["e"], owner[0]
node s5: label["n5"], owner[1]
node s6: label["state6"], owner[0]
node s7: label["state7"], owner[0]
node s8: label["i"], owner[1]
node s9: label["n9"], owner[1]
node s10: label["k"], owner[1]
node s11: label["l"], owner[0]
node s12: label["m"], owner[1]
node s13: label["n"], owner[0]
node s14: label["target"], owner[1]

edge s0 -> s2: (= (mod t 7) 1)
edge s0 -> s5: (not (= (mod t 2) 1))
edge s0 -> s12: (= (mod t 4) 2)
edge s1 -> s4: (= (mod t 2) 1)
edge s1 -> s5: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s1 -> s6: (2,3,9,21,25)
edge s1 -> s9
edge s2 -> s0: (and (= (mod t 3) 0) (= (mod t 4) 3))
edge s2 -> s1: (not (= (mod t 3) 1))
edge s2 -> s3
edge s2 -> s4: (and (= (mod t 4) 1) (= (mod t 5) 3))
edge s2 -> s5: (not (= (mod t 3) 2))
edge s2 -> s10
edge s2 -> s12: (not (= (mod t 5) 2))
edge s3 -> s4
edge s3 -> s9
edge s3 -> s11: (not (= (mod t 3) 2))
edge s3 -> s12: (and (= (mod t 4) 0) (= (mod t 4) 1))
edge s4 -> s7: (not (= (mod t 5) 3))
edge s4 -> s11: (19)
edge s4 -> s12
edge s4 -> s13
edge s5 -> s2
edge s5 -> s8: (or (= (mod t 2) 1) (= (mod t 5) 4))
edge s5 -> s12: (or (= (mod t 5) 4) (= (mod t 3) 0))
edge s5 -> s13
edge s6 -> s7
edge s6 -> s8: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s6 -> s9: (or (= (mod t 4) 2) (= (mod t 4) 3))
edge s7 -> s1: (5,9,13,15)
edge s7 -> s2: (1,2,6)
edge s7 -> s4: (= (mod t 2) 0)
edge s7 -> s8: (or (= (mod t 2) 1) (= (mod t 4) 2))
edge s7 -> s10: (10,13,15)
edge s7 -> s13: (9)
edge s7 -> s14: (= (mod t 7) 3)
edge s8 -> s0: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s8 -> s1: (or (= (mod t 4) 3) (= (mod t 2) 1))
edge s8 -> s2: (not (= (mod t 2) 0))
edge s8 -> s3: (= (mod t 4) 0)
edge s8 -> s4: (= (mod t 8) 5)
edge s8 -> s9: (not (= (mod t 4) 1))
edge s8 -> s10: (or (= (mod t 5) 1) (= (mod t 3) 0))
edge s8 -> s12: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s9 -> s0: (not (= (mod t 5) 0))
edge s9 -> s1: (or (= (mod t 4) 2) (= (mod t 4) 2))
edge s9 -> s3
edge s9 -> s5: (and (= (mod t 4) 3) (= (mod t 4) 1))
edge s9 -> s7
edge s10 -> s0: (not (= (mod t 3) 2))
edge s10 -> s2: (= (mod t 4) 2)
edge s10 -> s4: (= (mod t 6) 2)
edge s10 -> s6: (= (mod t 5) 2)
edge s10 -> s12: (not (= (mod t 3) 1))
edge s11 -> s1: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s11 -> s4
edge s11 -> s12
edge s11 -> s14: (= (mod t 3) 2)
edge s12 -> s0: (= (mod t 2) 1)
edge s12 -> s1: (and (= (mod t 4) 1) (= (mod t 4) 2))
edge s12 -> s4: (14)
edge s12 -> s5: (or (= (mod t 5) 0) (= (mod t 4) 3))
edge s12 -> s6: (= (mod t 5) 4)
edge s12 -> s10: (not (= (mod t 3) 0))
edge s12 -> s14: (0)
edge s13 -> s2: (= (mod t 8) 7)
edge s13 -> s3: (= (mod t 4) 1)
edge s13 -> s6: (9,17,24)
edge s13 -> s11: (= (mod t 6) 0)
edge s13 -> s12: (= (mod t 3) 0)
edge s14 -> s10: (not (= (mod t 5) 4))
edge s14 -> s12: (5,6,7,12,19)
edge s14 -> s13: (and (= (mod t 3) 1) (= (mod t 3) 0))
