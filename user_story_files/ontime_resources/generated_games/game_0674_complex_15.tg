// Complex graph with 15 nodes

node s0: label["start"], owner[0]
node s1: label["state1"], owner[1]
node s2: label["c"], owner[0]
node s3: label["d"], owner[0]
node s4: label["n4"], owner[1]
node s5: label["f"], owner[0]
node s6: label["state6"], owner[0]
node s7: label["n7"], owner[0]
node s8: label["state8"], owner[0]
node s9: label["n9"], owner[1]
node s10: label["k"], owner[0]
node s11: label["n11"], owner[0]
node s12: label["n12"], owner[0]
node s13: label["n13"], owner[1]
node s14: label["target"], owner[1]

edge s0 -> s2
edge s0 -> s3: (not (= (mod t 2) 1))
edge s0 -> s5: (or (= (mod t 5) 4) (= (mod t 5) 3))
edge s0 -> s8: (0,14,15)
edge s0 -> s11: (10,18)
edge s0 -> s12: (8)
edge s0 -> s14: (0)
edge s1 -> s0: (1,11,19,20)
edge s1 -> s2: (and (= (mod t 3) 0) (= (mod t 4) 3))
edge s1 -> s6: (not (= (mod t 6) 2))
edge s1 -> s8: (= (mod t 7) 3)
edge s1 -> s11: (= (mod t 2) 1)
edge s1 -> s13
edge s2 -> s3: (= (mod t 8) 7)
edge s2 -> s6: (0,3,4)
edge s3 -> s0: (or (= (mod t 3) 2) (= (mod t 3) 1))
edge s3 -> s1: (= (mod t 8) 3)
edge s3 -> s4: (and (= (mod t 3) 0) (= (mod t 3) 0))
edge s3 -> s9: (or (= (mod t 5) 2) (= (mod t 3) 1))
edge s4 -> s1: (and (= (mod t 3) 2) (= (mod t 4) 0))
edge s4 -> s3: (not (= (mod t 4) 0))
edge s4 -> s8: (and (= (mod t 3) 1) (= (mod t 5) 3))
edge s4 -> s9
edge s4 -> s12: (and (= (mod t 2) 1) (= (mod t 4) 0))
edge s4 -> s13: (or (= (mod t 4) 0) (= (mod t 3) 1))
edge s5 -> s3: (= (mod t 4) 3)
edge s5 -> s11: (= (mod t 6) 3)
edge s5 -> s12
edge s5 -> s13: (= (mod t 3) 2)
edge s6 -> s9: (= (mod t 2) 1)
edge s6 -> s11
edge s6 -> s13: (not (= (mod t 6) 4))
edge s7 -> s1: (5,9,10,11)
edge s7 -> s3: (or (= (mod t 5) 2) (= (mod t 4) 3))
edge s7 -> s4: (1,2,3,4)
edge s7 -> s5: (or (= (mod t 5) 3) (= (mod t 4) 1))
edge s7 -> s6: (or (= (mod t 4) 2) (= (mod t 3) 2))
edge s7 -> s8: (or (= (mod t 4) 2) (= (mod t 4) 0))
edge s7 -> s9: (= (mod t 6) 4)
edge s7 -> s11: (and (= (mod t 4) 0) (= (mod t 5) 1))
edge s8 -> s4: (or (= (mod t 5) 2) (= (mod t 5) 3))
edge s8 -> s9: (= (mod t 3) 1)
edge s8 -> s10
edge s9 -> s0: (and (= (mod t 3) 0) (= (mod t 5) 1))
edge s9 -> s2
edge s9 -> s11: (not (= (mod t 6) 1))
edge s9 -> s12: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s9 -> s13: (and (= (mod t 4) 0) (= (mod t 5) 2))
edge s10 -> s1: (2,8,9,14)
edge s10 -> s4: (not (= (mod t 6) 0))
edge s10 -> s12: (6,13,23,24)
edge s11 -> s1
edge s11 -> s6: (or (= (mod t 2) 1) (= (mod t 2) 1))
edge s11 -> s7: (3,7,8,15,16)
edge s11 -> s8: (and (= (mod t 3) 0) (= (mod t 5) 2))
edge s11 -> s9: (0,4,6,13)
edge s11 -> s12: (not (= (mod t 6) 2))
edge s11 -> s13: (not (= (mod t 4) 2))
edge s11 -> s14: (0,8,14)
edge s12 -> s0: (= (mod t 2) 0)
edge s12 -> s3: (= (mod t 4) 1)
edge s12 -> s5: (= (mod t 4) 2)
edge s12 -> s9: (1,5)
edge s12 -> s10: (= (mod t 4) 1)
edge s13 -> s1: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s13 -> s4
edge s13 -> s11
edge s14 -> s2: (12,14,15,20,23)
edge s14 -> s3: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s14 -> s4: (and (= (mod t 2) 0) (= (mod t 5) 1))
edge s14 -> s7: (not (= (mod t 5) 4))
edge s14 -> s8: (= (mod t 7) 0)
edge s14 -> s10
edge s14 -> s11: (= (mod t 8) 1)
