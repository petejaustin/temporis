// Complex graph with 13 nodes

node s0: label["start"], owner[0]
node s1: label["b"], owner[1]
node s2: label["state2"], owner[1]
node s3: label["n3"], owner[0]
node s4: label["state4"], owner[1]
node s5: label["n5"], owner[0]
node s6: label["state6"], owner[0]
node s7: label["state7"], owner[1]
node s8: label["i"], owner[1]
node s9: label["n9"], owner[0]
node s10: label["n10"], owner[0]
node s11: label["n11"], owner[0]
node s12: label["target"], owner[1]

edge s0 -> s3: (and (= (mod t 4) 1) (= (mod t 4) 2))
edge s0 -> s8: (and (= (mod t 2) 0) (= (mod t 4) 0))
edge s0 -> s10: (7,15,17,18,25)
edge s0 -> s11: (= (mod t 8) 7)
edge s1 -> s2: (= (mod t 7) 3)
edge s1 -> s8: (or (= (mod t 3) 0) (= (mod t 5) 3))
edge s1 -> s9: (not (= (mod t 5) 2))
edge s1 -> s10
edge s1 -> s12: (not (= (mod t 3) 1))
edge s2 -> s1: (not (= (mod t 4) 1))
edge s2 -> s4: (= (mod t 2) 1)
edge s2 -> s5: (= (mod t 7) 6)
edge s2 -> s8
edge s3 -> s1: (or (= (mod t 2) 0) (= (mod t 4) 0))
edge s3 -> s2: (or (= (mod t 2) 1) (= (mod t 4) 1))
edge s3 -> s5: (3,18,19,21,25)
edge s3 -> s6: (and (= (mod t 3) 0) (= (mod t 5) 1))
edge s3 -> s9
edge s3 -> s10: (and (= (mod t 4) 1) (= (mod t 4) 1))
edge s3 -> s11: (3,8,17)
edge s4 -> s12: (not (= (mod t 4) 0))
edge s5 -> s0: (12,14,21,26)
edge s5 -> s2: (and (= (mod t 3) 1) (= (mod t 4) 1))
edge s5 -> s3: (and (= (mod t 3) 2) (= (mod t 3) 2))
edge s5 -> s4: (= (mod t 6) 4)
edge s5 -> s7: (= (mod t 4) 0)
edge s5 -> s10: (and (= (mod t 4) 1) (= (mod t 4) 2))
edge s5 -> s11: (or (= (mod t 5) 3) (= (mod t 5) 3))
edge s6 -> s0: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s6 -> s2: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s6 -> s3: (= (mod t 6) 5)
edge s6 -> s5: (13)
edge s6 -> s7
edge s6 -> s9: (6,25)
edge s7 -> s4: (not (= (mod t 6) 1))
edge s7 -> s8: (or (= (mod t 5) 1) (= (mod t 2) 1))
edge s8 -> s4: (= (mod t 7) 3)
edge s8 -> s10: (= (mod t 3) 1)
edge s8 -> s11
edge s9 -> s0
edge s9 -> s5: (and (= (mod t 3) 2) (= (mod t 3) 2))
edge s9 -> s7: (or (= (mod t 5) 1) (= (mod t 5) 4))
edge s10 -> s0: (and (= (mod t 2) 1) (= (mod t 4) 1))
edge s10 -> s4: (5,8)
edge s10 -> s9: (or (= (mod t 3) 2) (= (mod t 4) 2))
edge s10 -> s12: (and (= (mod t 4) 2) (= (mod t 4) 2))
edge s11 -> s1: (and (= (mod t 3) 0) (= (mod t 3) 2))
edge s11 -> s7: (4,10)
edge s11 -> s8: (4,7)
edge s12 -> s11: (= (mod t 3) 2)
