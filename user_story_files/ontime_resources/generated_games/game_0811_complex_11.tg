// Complex graph with 11 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["d"], owner[0]
node s4: label["n4"], owner[1]
node s5: label["n5"], owner[1]
node s6: label["state6"], owner[0]
node s7: label["h"], owner[0]
node s8: label["n8"], owner[0]
node s9: label["n9"], owner[1]
node s10: label["target"], owner[1]

edge s0 -> s4: (not (= (mod t 3) 2))
edge s0 -> s6: (and (= (mod t 4) 2) (= (mod t 4) 2))
edge s1 -> s8: (or (= (mod t 2) 1) (= (mod t 4) 0))
edge s1 -> s10: (not (= (mod t 4) 2))
edge s2 -> s7: (= (mod t 8) 5)
edge s3 -> s0: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s3 -> s2: (or (= (mod t 4) 3) (= (mod t 2) 0))
edge s3 -> s5: (= (mod t 4) 2)
edge s3 -> s10
edge s4 -> s1: (= (mod t 4) 0)
edge s4 -> s5
edge s5 -> s1: (and (= (mod t 4) 2) (= (mod t 4) 2))
edge s5 -> s4: (3,4,10)
edge s5 -> s7
edge s5 -> s8: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s5 -> s10: (10,11,12,13,15)
edge s6 -> s0
edge s6 -> s4: (1,8,10)
edge s6 -> s7
edge s6 -> s8: (= (mod t 2) 1)
edge s7 -> s0: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s8 -> s1: (3,9,10,12)
edge s8 -> s2: (3,6,11)
edge s8 -> s5: (= (mod t 8) 1)
edge s8 -> s7: (or (= (mod t 3) 0) (= (mod t 3) 0))
edge s8 -> s9: (and (= (mod t 4) 2) (= (mod t 3) 2))
edge s9 -> s4: (5,11,14,17,19)
edge s10 -> s2: (or (= (mod t 3) 2) (= (mod t 3) 0))
edge s10 -> s3: (or (= (mod t 4) 2) (= (mod t 2) 1))
edge s10 -> s4: (not (= (mod t 4) 3))
edge s10 -> s6: (0,2,7,12,13)
edge s10 -> s7: (= (mod t 7) 3)
edge s10 -> s8: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s10 -> s9: (= (mod t 8) 4)
