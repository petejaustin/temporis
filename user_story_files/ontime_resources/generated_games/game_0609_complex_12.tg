// Complex graph with 12 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["n4"], owner[1]
node s5: label["state5"], owner[0]
node s6: label["n6"], owner[0]
node s7: label["state7"], owner[1]
node s8: label["i"], owner[0]
node s9: label["j"], owner[1]
node s10: label["state10"], owner[1]
node s11: label["target"], owner[1]

edge s0 -> s5: (19,23)
edge s0 -> s10: (= (mod t 4) 3)
edge s1 -> s0: (not (= (mod t 4) 1))
edge s1 -> s6
edge s1 -> s7: (4,6,16)
edge s1 -> s8: (and (= (mod t 3) 2) (= (mod t 4) 1))
edge s1 -> s10: (not (= (mod t 5) 2))
edge s1 -> s11: (or (= (mod t 2) 1) (= (mod t 5) 3))
edge s2 -> s1: (not (= (mod t 3) 2))
edge s2 -> s5: (and (= (mod t 3) 0) (= (mod t 4) 0))
edge s2 -> s9
edge s3 -> s0: (or (= (mod t 4) 0) (= (mod t 3) 1))
edge s3 -> s8
edge s3 -> s10: (and (= (mod t 4) 3) (= (mod t 4) 3))
edge s4 -> s1: (4,8,9,26,27)
edge s4 -> s2: (or (= (mod t 5) 4) (= (mod t 5) 3))
edge s5 -> s2: (= (mod t 4) 0)
edge s5 -> s10
edge s6 -> s5: (and (= (mod t 3) 1) (= (mod t 4) 2))
edge s6 -> s7
edge s6 -> s10: (or (= (mod t 2) 1) (= (mod t 3) 0))
edge s7 -> s0: (and (= (mod t 2) 1) (= (mod t 4) 0))
edge s7 -> s6: (12)
edge s7 -> s9
edge s8 -> s5: (= (mod t 3) 0)
edge s8 -> s11: (or (= (mod t 5) 0) (= (mod t 3) 1))
edge s9 -> s2: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s9 -> s3: (= (mod t 8) 3)
edge s9 -> s8: (15)
edge s9 -> s11
edge s10 -> s5: (= (mod t 5) 2)
edge s11 -> s3: (not (= (mod t 3) 2))
edge s11 -> s6: (and (= (mod t 3) 1) (= (mod t 5) 0))
edge s11 -> s10
