// Complex graph with 11 nodes

node s0: label["s0"], owner[0]
node s1: label["s1"], owner[1]
node s2: label["s2"], owner[0]
node s3: label["s3"], owner[0]
node s4: label["s4"], owner[0]
node s5: label["s5"], owner[1]
node s6: label["s6"], owner[1]
node s7: label["s7"], owner[1]
node s8: label["s8"], owner[0]
node s9: label["s9"], owner[0]
node s10: label["s10"], owner[0]

edge s1 -> s3
edge s1 -> s4: (or (= (mod t 2) 0) (= (mod t 3) 0))
edge s1 -> s6: (= (mod t 7) 6)
edge s1 -> s8: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s2 -> s1: (or (= (mod t 2) 0) (= (mod t 4) 2))
edge s2 -> s4
edge s2 -> s6: (or (= (mod t 2) 1) (= (mod t 4) 1))
edge s2 -> s8
edge s2 -> s10: (not (= (mod t 5) 0))
edge s3 -> s1
edge s3 -> s2: (not (= (mod t 2) 0))
edge s3 -> s7: (= (mod t 7) 6)
edge s3 -> s8: (6,9,10)
edge s4 -> s2
edge s5 -> s0: (or (= (mod t 4) 1) (= (mod t 4) 3))
edge s5 -> s4
edge s5 -> s7: (4,6)
edge s6 -> s1: (and (= (mod t 2) 1) (= (mod t 4) 2))
edge s6 -> s2: (not (= (mod t 2) 1))
edge s6 -> s4: (not (= (mod t 3) 1))
edge s6 -> s7: (and (= (mod t 3) 2) (= (mod t 4) 0))
edge s6 -> s8
edge s6 -> s10: (not (= (mod t 5) 0))
edge s7 -> s2: (9,12)
edge s7 -> s6: (and (= (mod t 3) 1) (= (mod t 3) 0))
edge s8 -> s1: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s8 -> s3: (4,9,14,16,19)
edge s8 -> s4: (8,12,16,21,26)
edge s9 -> s0: (and (= (mod t 3) 0) (= (mod t 5) 4))
edge s9 -> s2: (and (= (mod t 3) 2) (= (mod t 5) 2))
edge s9 -> s3: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s9 -> s6: (3,4,7,18,19)
edge s10 -> s8: (not (= (mod t 2) 0))
