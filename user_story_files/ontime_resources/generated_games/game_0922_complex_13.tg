// Complex graph with 13 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[1]
node s2: label["c"], owner[0]
node s3: label["d"], owner[1]
node s4: label["n4"], owner[1]
node s5: label["n5"], owner[1]
node s6: label["n6"], owner[0]
node s7: label["h"], owner[0]
node s8: label["n8"], owner[1]
node s9: label["j"], owner[1]
node s10: label["k"], owner[0]
node s11: label["l"], owner[1]
node s12: label["target"], owner[0]

edge s0 -> s1: (not (= (mod t 3) 1))
edge s0 -> s3
edge s0 -> s6: (not (= (mod t 6) 0))
edge s0 -> s8: (not (= (mod t 6) 5))
edge s0 -> s10: (= (mod t 6) 5)
edge s0 -> s11: (not (= (mod t 6) 3))
edge s0 -> s12: (or (= (mod t 3) 1) (= (mod t 5) 4))
edge s1 -> s2
edge s1 -> s3
edge s1 -> s4: (0,1,10,15,16)
edge s1 -> s6
edge s1 -> s9
edge s2 -> s0: (= (mod t 6) 4)
edge s2 -> s1: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s2 -> s9: (or (= (mod t 3) 0) (= (mod t 4) 2))
edge s3 -> s6: (not (= (mod t 3) 0))
edge s3 -> s12: (and (= (mod t 3) 2) (= (mod t 3) 0))
edge s4 -> s1: (not (= (mod t 4) 3))
edge s4 -> s2: (not (= (mod t 6) 1))
edge s4 -> s9: (or (= (mod t 2) 1) (= (mod t 2) 1))
edge s5 -> s10: (= (mod t 5) 4)
edge s6 -> s1: (= (mod t 2) 0)
edge s6 -> s3: (4,19)
edge s6 -> s5: (not (= (mod t 6) 5))
edge s6 -> s10: (not (= (mod t 5) 1))
edge s6 -> s12: (not (= (mod t 6) 5))
edge s7 -> s10
edge s8 -> s0: (and (= (mod t 2) 0) (= (mod t 4) 2))
edge s8 -> s6: (not (= (mod t 3) 1))
edge s9 -> s1: (and (= (mod t 3) 0) (= (mod t 3) 2))
edge s10 -> s2: (and (= (mod t 4) 3) (= (mod t 4) 1))
edge s11 -> s0: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s11 -> s1: (not (= (mod t 3) 1))
edge s11 -> s6: (4,12,22)
edge s11 -> s12: (and (= (mod t 4) 1) (= (mod t 4) 2))
edge s12 -> s3
edge s12 -> s5: (and (= (mod t 2) 1) (= (mod t 4) 2))
edge s12 -> s7: (not (= (mod t 6) 2))
edge s12 -> s8: (or (= (mod t 5) 0) (= (mod t 3) 2))
edge s12 -> s11: (and (= (mod t 3) 1) (= (mod t 3) 1))
