// Complex graph with 12 nodes

node s0: label["s0"], owner[0]
node s1: label["s1"], owner[0]
node s2: label["s2"], owner[1]
node s3: label["s3"], owner[1]
node s4: label["s4"], owner[1]
node s5: label["s5"], owner[0]
node s6: label["s6"], owner[0]
node s7: label["s7"], owner[1]
node s8: label["s8"], owner[0]
node s9: label["s9"], owner[1]
node s10: label["s10"], owner[1]
node s11: label["s11"], owner[1]

edge s0 -> s3: (and (= (mod t 2) 1) (= (mod t 4) 0))
edge s0 -> s5: (and (= (mod t 4) 1) (= (mod t 5) 0))
edge s1 -> s3
edge s1 -> s4
edge s1 -> s10
edge s2 -> s11: (not (= (mod t 6) 3))
edge s3 -> s0: (and (= (mod t 3) 0) (= (mod t 5) 3))
edge s4 -> s2: (11,16,22)
edge s4 -> s8: (= (mod t 7) 5)
edge s4 -> s10
edge s5 -> s10: (or (= (mod t 4) 1) (= (mod t 5) 3))
edge s6 -> s1: (= (mod t 4) 0)
edge s6 -> s5: (1,9,12,22,25)
edge s6 -> s8: (19,20)
edge s6 -> s9: (not (= (mod t 4) 2))
edge s7 -> s2: (and (= (mod t 4) 3) (= (mod t 4) 0))
edge s7 -> s6: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s7 -> s10: (and (= (mod t 2) 1) (= (mod t 5) 1))
edge s7 -> s11: (and (= (mod t 4) 3) (= (mod t 5) 1))
edge s8 -> s0
edge s8 -> s2: (= (mod t 6) 5)
edge s8 -> s6: (8)
edge s9 -> s4: (or (= (mod t 5) 4) (= (mod t 5) 1))
edge s9 -> s8
edge s10 -> s0
edge s10 -> s1: (or (= (mod t 2) 0) (= (mod t 5) 4))
edge s10 -> s2: (not (= (mod t 5) 4))
edge s10 -> s6: (not (= (mod t 5) 4))
edge s10 -> s8: (not (= (mod t 2) 0))
edge s10 -> s11: (4,6,8,13)
edge s11 -> s0: (and (= (mod t 3) 1) (= (mod t 5) 3))
edge s11 -> s1: (9,15,18)
edge s11 -> s4: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s11 -> s5
edge s11 -> s7
