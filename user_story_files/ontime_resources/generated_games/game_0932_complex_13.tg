// Complex graph with 13 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[1]
node s2: label["c"], owner[1]
node s3: label["d"], owner[1]
node s4: label["state4"], owner[1]
node s5: label["n5"], owner[0]
node s6: label["n6"], owner[0]
node s7: label["h"], owner[1]
node s8: label["i"], owner[1]
node s9: label["n9"], owner[1]
node s10: label["n10"], owner[1]
node s11: label["state11"], owner[0]
node s12: label["target"], owner[1]

edge s0 -> s1: (= (mod t 8) 5)
edge s0 -> s6: (= (mod t 8) 5)
edge s0 -> s8: (or (= (mod t 5) 3) (= (mod t 2) 1))
edge s0 -> s9: (3,4,7,15)
edge s0 -> s10: (or (= (mod t 3) 2) (= (mod t 5) 3))
edge s1 -> s0: (or (= (mod t 5) 1) (= (mod t 2) 0))
edge s1 -> s10: (not (= (mod t 3) 0))
edge s1 -> s12: (= (mod t 3) 1)
edge s2 -> s4
edge s2 -> s10
edge s3 -> s1: (= (mod t 3) 1)
edge s3 -> s4: (and (= (mod t 3) 2) (= (mod t 3) 1))
edge s3 -> s9
edge s4 -> s0: (not (= (mod t 5) 4))
edge s4 -> s5: (and (= (mod t 2) 0) (= (mod t 5) 3))
edge s4 -> s6: (or (= (mod t 3) 1) (= (mod t 4) 1))
edge s4 -> s12: (3,8,15,16,17)
edge s5 -> s1
edge s5 -> s3: (12,21)
edge s5 -> s7: (or (= (mod t 5) 0) (= (mod t 3) 0))
edge s5 -> s9
edge s5 -> s11: (2,12)
edge s6 -> s3: (not (= (mod t 4) 3))
edge s6 -> s5
edge s6 -> s7: (= (mod t 6) 1)
edge s6 -> s8: (= (mod t 4) 2)
edge s6 -> s10: (and (= (mod t 2) 1) (= (mod t 4) 2))
edge s6 -> s11: (= (mod t 8) 0)
edge s7 -> s8
edge s7 -> s10: (and (= (mod t 2) 0) (= (mod t 4) 2))
edge s7 -> s12: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s8 -> s0: (and (= (mod t 2) 1) (= (mod t 4) 0))
edge s8 -> s9: (= (mod t 8) 7)
edge s9 -> s5: (1,6,8,10)
edge s9 -> s6: (not (= (mod t 6) 3))
edge s9 -> s11: (not (= (mod t 3) 2))
edge s10 -> s0: (and (= (mod t 4) 1) (= (mod t 4) 2))
edge s10 -> s1: (0,2,5)
edge s10 -> s11: (= (mod t 8) 0)
edge s10 -> s12: (not (= (mod t 6) 5))
edge s11 -> s5: (= (mod t 6) 1)
edge s11 -> s7: (= (mod t 2) 1)
edge s11 -> s9: (and (= (mod t 4) 2) (= (mod t 4) 3))
edge s11 -> s12: (or (= (mod t 5) 4) (= (mod t 4) 3))
edge s12 -> s1: (not (= (mod t 3) 1))
edge s12 -> s2: (0,2,3,4,8)
edge s12 -> s3: (not (= (mod t 3) 0))
edge s12 -> s5: (= (mod t 3) 1)
edge s12 -> s9: (not (= (mod t 3) 1))
