// Complex graph with 13 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[0]
node s2: label["n2"], owner[0]
node s3: label["n3"], owner[0]
node s4: label["state4"], owner[0]
node s5: label["state5"], owner[0]
node s6: label["state6"], owner[1]
node s7: label["state7"], owner[1]
node s8: label["state8"], owner[1]
node s9: label["state9"], owner[0]
node s10: label["k"], owner[0]
node s11: label["state11"], owner[0]
node s12: label["target"], owner[1]

edge s0 -> s4: (and (= (mod t 4) 3) (= (mod t 3) 2))
edge s0 -> s5: (not (= (mod t 2) 1))
edge s0 -> s8: (or (= (mod t 5) 0) (= (mod t 4) 2))
edge s0 -> s12: (not (= (mod t 6) 4))
edge s1 -> s7: (or (= (mod t 3) 1) (= (mod t 4) 1))
edge s1 -> s10
edge s1 -> s11: (not (= (mod t 3) 1))
edge s2 -> s1: (and (= (mod t 4) 3) (= (mod t 3) 2))
edge s2 -> s6: (not (= (mod t 6) 3))
edge s3 -> s1
edge s3 -> s4: (= (mod t 7) 6)
edge s3 -> s6: (not (= (mod t 2) 0))
edge s3 -> s7: (or (= (mod t 2) 1) (= (mod t 4) 2))
edge s3 -> s12: (not (= (mod t 3) 0))
edge s4 -> s1: (= (mod t 5) 3)
edge s4 -> s5: (not (= (mod t 3) 1))
edge s4 -> s6: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s4 -> s7: (11)
edge s4 -> s11: (not (= (mod t 4) 1))
edge s5 -> s1: (3,4,8,10,17)
edge s5 -> s4: (10,14)
edge s5 -> s10: (not (= (mod t 6) 4))
edge s5 -> s11: (14,16)
edge s5 -> s12: (or (= (mod t 3) 1) (= (mod t 2) 0))
edge s6 -> s1: (9,11)
edge s6 -> s9
edge s6 -> s11: (= (mod t 3) 2)
edge s7 -> s0: (3,16)
edge s7 -> s1: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s7 -> s3: (and (= (mod t 2) 0) (= (mod t 5) 0))
edge s7 -> s6: (and (= (mod t 3) 2) (= (mod t 4) 3))
edge s7 -> s8: (or (= (mod t 3) 0) (= (mod t 3) 2))
edge s7 -> s10: (= (mod t 7) 2)
edge s8 -> s1
edge s8 -> s11: (= (mod t 6) 1)
edge s9 -> s2: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s9 -> s6: (and (= (mod t 3) 0) (= (mod t 4) 0))
edge s9 -> s10: (and (= (mod t 3) 0) (= (mod t 5) 2))
edge s10 -> s3: (or (= (mod t 2) 1) (= (mod t 2) 1))
edge s10 -> s8: (= (mod t 5) 0)
edge s10 -> s12
edge s11 -> s1: (not (= (mod t 3) 1))
edge s12 -> s0
edge s12 -> s2: (= (mod t 8) 2)
edge s12 -> s7: (not (= (mod t 2) 0))
