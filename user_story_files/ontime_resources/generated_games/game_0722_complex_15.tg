// Complex graph with 15 nodes

node s0: label["start"], owner[0]
node s1: label["b"], owner[1]
node s2: label["state2"], owner[1]
node s3: label["d"], owner[1]
node s4: label["e"], owner[0]
node s5: label["n5"], owner[1]
node s6: label["n6"], owner[0]
node s7: label["n7"], owner[0]
node s8: label["n8"], owner[0]
node s9: label["state9"], owner[0]
node s10: label["k"], owner[1]
node s11: label["n11"], owner[1]
node s12: label["n12"], owner[0]
node s13: label["state13"], owner[1]
node s14: label["target"], owner[1]

edge s0 -> s5
edge s0 -> s6: (and (= (mod t 4) 0) (= (mod t 3) 0))
edge s0 -> s8: (not (= (mod t 3) 2))
edge s0 -> s9: (= (mod t 5) 0)
edge s0 -> s10: (not (= (mod t 6) 2))
edge s0 -> s14
edge s1 -> s3: (and (= (mod t 2) 1) (= (mod t 3) 2))
edge s1 -> s4: (or (= (mod t 5) 4) (= (mod t 5) 0))
edge s1 -> s6: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s1 -> s9: (= (mod t 8) 5)
edge s1 -> s11: (not (= (mod t 6) 5))
edge s2 -> s0: (5,6,9,13)
edge s2 -> s5: (and (= (mod t 4) 1) (= (mod t 5) 3))
edge s2 -> s7: (not (= (mod t 6) 1))
edge s2 -> s10
edge s2 -> s11: (and (= (mod t 4) 3) (= (mod t 5) 1))
edge s2 -> s12: (and (= (mod t 2) 1) (= (mod t 5) 4))
edge s2 -> s13: (9,10)
edge s3 -> s1: (not (= (mod t 3) 0))
edge s3 -> s4: (and (= (mod t 3) 0) (= (mod t 4) 3))
edge s3 -> s5: (and (= (mod t 3) 2) (= (mod t 3) 1))
edge s3 -> s7: (or (= (mod t 5) 2) (= (mod t 2) 1))
edge s3 -> s8: (or (= (mod t 2) 1) (= (mod t 3) 0))
edge s3 -> s10: (or (= (mod t 5) 4) (= (mod t 2) 1))
edge s4 -> s2: (3,4,5,18,24)
edge s4 -> s3: (or (= (mod t 3) 2) (= (mod t 4) 0))
edge s4 -> s10: (or (= (mod t 4) 2) (= (mod t 5) 4))
edge s4 -> s12: (2,12)
edge s4 -> s13
edge s4 -> s14: (not (= (mod t 2) 0))
edge s5 -> s0: (not (= (mod t 4) 3))
edge s5 -> s2: (not (= (mod t 5) 0))
edge s5 -> s9: (or (= (mod t 3) 1) (= (mod t 2) 1))
edge s5 -> s11
edge s5 -> s12
edge s5 -> s13: (7,10,22)
edge s6 -> s0
edge s6 -> s1: (0,1,2,13)
edge s6 -> s5: (= (mod t 6) 0)
edge s6 -> s8: (8)
edge s6 -> s9: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s6 -> s10: (or (= (mod t 4) 2) (= (mod t 3) 1))
edge s6 -> s11: (not (= (mod t 3) 0))
edge s6 -> s13
edge s6 -> s14: (not (= (mod t 2) 0))
edge s7 -> s3: (0,6,19,22)
edge s7 -> s6: (= (mod t 7) 2)
edge s7 -> s13: (6)
edge s8 -> s7: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s9 -> s1: (and (= (mod t 2) 0) (= (mod t 4) 0))
edge s9 -> s4: (5,11,12,13,15)
edge s9 -> s5: (= (mod t 2) 1)
edge s10 -> s0: (or (= (mod t 3) 1) (= (mod t 4) 1))
edge s10 -> s1: (8)
edge s10 -> s3: (not (= (mod t 4) 3))
edge s10 -> s5: (or (= (mod t 2) 1) (= (mod t 4) 1))
edge s11 -> s3: (and (= (mod t 2) 1) (= (mod t 4) 3))
edge s11 -> s4
edge s11 -> s5: (0,1,6,7,12)
edge s12 -> s0
edge s12 -> s2: (and (= (mod t 3) 2) (= (mod t 4) 0))
edge s12 -> s4: (= (mod t 5) 1)
edge s12 -> s6: (= (mod t 2) 0)
edge s12 -> s13: (or (= (mod t 2) 0) (= (mod t 3) 0))
edge s13 -> s0: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s13 -> s1: (= (mod t 5) 1)
edge s13 -> s12
edge s14 -> s0: (and (= (mod t 3) 2) (= (mod t 4) 2))
edge s14 -> s4: (12,19,21)
edge s14 -> s5: (or (= (mod t 4) 0) (= (mod t 4) 0))
edge s14 -> s7: (or (= (mod t 3) 0) (= (mod t 3) 1))
edge s14 -> s8: (and (= (mod t 3) 0) (= (mod t 5) 4))
edge s14 -> s9: (or (= (mod t 5) 4) (= (mod t 5) 2))
edge s14 -> s12: (or (= (mod t 2) 0) (= (mod t 4) 2))
edge s14 -> s13
