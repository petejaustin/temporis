// Complex graph with 12 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[1]
node s2: label["state2"], owner[0]
node s3: label["n3"], owner[0]
node s4: label["state4"], owner[1]
node s5: label["f"], owner[1]
node s6: label["state6"], owner[0]
node s7: label["state7"], owner[1]
node s8: label["i"], owner[1]
node s9: label["j"], owner[0]
node s10: label["state10"], owner[1]
node s11: label["target"], owner[1]

edge s0 -> s5: (or (= (mod t 3) 2) (= (mod t 4) 3))
edge s0 -> s8: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s0 -> s9
edge s1 -> s0: (6,17)
edge s1 -> s10: (not (= (mod t 5) 2))
edge s2 -> s3: (and (= (mod t 3) 1) (= (mod t 3) 2))
edge s2 -> s4: (and (= (mod t 3) 2) (= (mod t 5) 3))
edge s2 -> s7
edge s3 -> s0: (and (= (mod t 2) 0) (= (mod t 5) 4))
edge s3 -> s5: (or (= (mod t 3) 2) (= (mod t 3) 0))
edge s3 -> s11: (not (= (mod t 6) 0))
edge s4 -> s6: (6,16,18,21)
edge s4 -> s9
edge s5 -> s3: (and (= (mod t 4) 0) (= (mod t 3) 0))
edge s6 -> s3: (or (= (mod t 3) 1) (= (mod t 2) 1))
edge s6 -> s7: (= (mod t 7) 1)
edge s6 -> s10: (and (= (mod t 3) 2) (= (mod t 3) 0))
edge s7 -> s1: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s7 -> s2: (not (= (mod t 2) 0))
edge s7 -> s3: (= (mod t 2) 1)
edge s7 -> s5
edge s7 -> s9: (or (= (mod t 4) 2) (= (mod t 4) 2))
edge s7 -> s10: (or (= (mod t 5) 2) (= (mod t 2) 0))
edge s7 -> s11: (= (mod t 6) 0)
edge s8 -> s2: (and (= (mod t 2) 0) (= (mod t 4) 2))
edge s8 -> s6: (and (= (mod t 4) 3) (= (mod t 4) 2))
edge s9 -> s0: (= (mod t 4) 3)
edge s9 -> s2: (3,7,10,11)
edge s9 -> s5: (not (= (mod t 5) 3))
edge s9 -> s6: (2,24)
edge s9 -> s11: (8,14)
edge s10 -> s0: (and (= (mod t 2) 0) (= (mod t 5) 3))
edge s10 -> s2: (3,12)
edge s10 -> s3: (= (mod t 7) 5)
edge s10 -> s11: (= (mod t 2) 1)
edge s11 -> s5: (not (= (mod t 6) 2))
edge s11 -> s10: (and (= (mod t 2) 1) (= (mod t 3) 2))
