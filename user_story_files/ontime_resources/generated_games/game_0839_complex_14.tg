// Complex graph with 14 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[0]
node s4: label["state4"], owner[1]
node s5: label["state5"], owner[0]
node s6: label["state6"], owner[1]
node s7: label["h"], owner[0]
node s8: label["i"], owner[1]
node s9: label["n9"], owner[0]
node s10: label["n10"], owner[1]
node s11: label["l"], owner[0]
node s12: label["n12"], owner[0]
node s13: label["target"], owner[0]

edge s0 -> s1: (and (= (mod t 4) 3) (= (mod t 5) 1))
edge s0 -> s9: (and (= (mod t 3) 1) (= (mod t 3) 2))
edge s1 -> s8: (= (mod t 3) 0)
edge s1 -> s12: (not (= (mod t 3) 0))
edge s2 -> s7: (not (= (mod t 5) 4))
edge s2 -> s9: (= (mod t 6) 1)
edge s3 -> s1: (= (mod t 5) 1)
edge s3 -> s2: (= (mod t 3) 2)
edge s3 -> s10: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s3 -> s11: (4)
edge s3 -> s12: (= (mod t 2) 0)
edge s4 -> s7: (and (= (mod t 2) 1) (= (mod t 5) 4))
edge s5 -> s3: (not (= (mod t 2) 0))
edge s6 -> s0: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s6 -> s11: (and (= (mod t 2) 1) (= (mod t 3) 0))
edge s6 -> s13: (= (mod t 6) 1)
edge s7 -> s0: (not (= (mod t 6) 0))
edge s7 -> s2: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s7 -> s5: (or (= (mod t 5) 1) (= (mod t 4) 1))
edge s7 -> s8: (not (= (mod t 2) 0))
edge s7 -> s11: (not (= (mod t 6) 5))
edge s7 -> s12: (not (= (mod t 3) 0))
edge s7 -> s13: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s8 -> s3: (not (= (mod t 4) 3))
edge s8 -> s5
edge s8 -> s7: (= (mod t 2) 1)
edge s8 -> s9: (= (mod t 4) 1)
edge s8 -> s12: (and (= (mod t 3) 2) (= (mod t 5) 4))
edge s8 -> s13: (8,11,17,18)
edge s9 -> s5: (or (= (mod t 3) 0) (= (mod t 5) 1))
edge s9 -> s8: (not (= (mod t 4) 0))
edge s9 -> s10
edge s9 -> s11: (= (mod t 2) 1)
edge s10 -> s0: (and (= (mod t 2) 1) (= (mod t 3) 2))
edge s10 -> s4: (not (= (mod t 5) 4))
edge s10 -> s6: (not (= (mod t 5) 0))
edge s10 -> s9: (not (= (mod t 4) 0))
edge s11 -> s0: (= (mod t 6) 4)
edge s11 -> s5: (not (= (mod t 6) 2))
edge s11 -> s6: (= (mod t 6) 0)
edge s11 -> s7
edge s11 -> s10: (not (= (mod t 2) 1))
edge s12 -> s7: (not (= (mod t 4) 0))
edge s12 -> s10: (not (= (mod t 2) 1))
edge s12 -> s11: (or (= (mod t 5) 2) (= (mod t 4) 3))
edge s12 -> s13
edge s13 -> s2: (and (= (mod t 3) 1) (= (mod t 5) 4))
edge s13 -> s4: (and (= (mod t 3) 2) (= (mod t 4) 0))
edge s13 -> s5
edge s13 -> s9: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s13 -> s10: (12)
edge s13 -> s12: (5,10,13,15)
