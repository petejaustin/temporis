// Complex graph with 12 nodes

node s0: label["start"], owner[0]
node s1: label["b"], owner[1]
node s2: label["n2"], owner[0]
node s3: label["state3"], owner[1]
node s4: label["state4"], owner[0]
node s5: label["f"], owner[1]
node s6: label["n6"], owner[1]
node s7: label["state7"], owner[0]
node s8: label["n8"], owner[1]
node s9: label["state9"], owner[1]
node s10: label["n10"], owner[0]
node s11: label["target"], owner[0]

edge s0 -> s4
edge s0 -> s7: (= (mod t 3) 0)
edge s0 -> s10: (= (mod t 6) 5)
edge s1 -> s2
edge s1 -> s4: (not (= (mod t 3) 1))
edge s1 -> s6: (and (= (mod t 3) 1) (= (mod t 4) 1))
edge s1 -> s9: (4,6,15,16,24)
edge s2 -> s8: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s2 -> s11: (not (= (mod t 2) 0))
edge s3 -> s1
edge s3 -> s2: (= (mod t 6) 0)
edge s3 -> s4: (or (= (mod t 5) 1) (= (mod t 2) 0))
edge s3 -> s7: (not (= (mod t 4) 2))
edge s4 -> s7
edge s4 -> s8: (= (mod t 2) 0)
edge s4 -> s11: (or (= (mod t 4) 1) (= (mod t 5) 0))
edge s5 -> s2: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s5 -> s3: (19)
edge s5 -> s4: (and (= (mod t 3) 2) (= (mod t 5) 4))
edge s5 -> s7: (or (= (mod t 2) 0) (= (mod t 3) 1))
edge s6 -> s0
edge s6 -> s9: (= (mod t 7) 2)
edge s6 -> s10: (= (mod t 6) 0)
edge s6 -> s11: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s7 -> s3: (= (mod t 4) 3)
edge s7 -> s8: (7,9,13)
edge s8 -> s6: (= (mod t 2) 1)
edge s9 -> s1: (not (= (mod t 5) 0))
edge s9 -> s2: (= (mod t 2) 1)
edge s9 -> s3: (not (= (mod t 2) 0))
edge s9 -> s4: (22,25)
edge s9 -> s6: (and (= (mod t 4) 1) (= (mod t 4) 3))
edge s10 -> s3: (not (= (mod t 5) 1))
edge s10 -> s7: (0,7)
edge s10 -> s11: (= (mod t 2) 1)
edge s11 -> s2: (0,3,10)
