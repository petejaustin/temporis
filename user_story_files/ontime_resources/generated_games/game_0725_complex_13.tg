// Complex graph with 13 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[0]
node s2: label["state2"], owner[0]
node s3: label["n3"], owner[0]
node s4: label["e"], owner[0]
node s5: label["f"], owner[1]
node s6: label["state6"], owner[1]
node s7: label["n7"], owner[1]
node s8: label["n8"], owner[1]
node s9: label["j"], owner[1]
node s10: label["k"], owner[0]
node s11: label["l"], owner[1]
node s12: label["target"], owner[1]

edge s0 -> s1: (and (= (mod t 4) 0) (= (mod t 3) 1))
edge s0 -> s2: (or (= (mod t 5) 0) (= (mod t 2) 0))
edge s0 -> s4: (not (= (mod t 5) 2))
edge s0 -> s7: (not (= (mod t 5) 3))
edge s0 -> s12: (4,5,6,11,12)
edge s1 -> s10: (and (= (mod t 4) 3) (= (mod t 4) 2))
edge s1 -> s11: (2,5,8,9)
edge s1 -> s12: (or (= (mod t 5) 0) (= (mod t 5) 1))
edge s3 -> s1: (13,17,19,22,27)
edge s3 -> s2: (= (mod t 2) 1)
edge s3 -> s4: (and (= (mod t 2) 1) (= (mod t 3) 2))
edge s3 -> s6: (not (= (mod t 5) 0))
edge s3 -> s9: (1,5)
edge s3 -> s12: (not (= (mod t 4) 0))
edge s4 -> s8: (= (mod t 4) 2)
edge s4 -> s9: (and (= (mod t 4) 1) (= (mod t 5) 0))
edge s4 -> s10: (not (= (mod t 5) 3))
edge s5 -> s2: (not (= (mod t 6) 5))
edge s5 -> s6: (not (= (mod t 3) 2))
edge s6 -> s5
edge s6 -> s8: (and (= (mod t 4) 3) (= (mod t 3) 2))
edge s7 -> s0: (or (= (mod t 5) 1) (= (mod t 3) 0))
edge s7 -> s1: (and (= (mod t 3) 0) (= (mod t 3) 1))
edge s7 -> s5
edge s8 -> s1
edge s8 -> s6: (and (= (mod t 2) 0) (= (mod t 5) 0))
edge s8 -> s9: (= (mod t 2) 1)
edge s8 -> s11: (0,1,5,13)
edge s8 -> s12: (and (= (mod t 4) 3) (= (mod t 4) 2))
edge s9 -> s3: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s9 -> s4: (6)
edge s9 -> s5: (3,7,10,11)
edge s9 -> s10: (3)
edge s9 -> s11: (not (= (mod t 6) 2))
edge s10 -> s0: (not (= (mod t 2) 0))
edge s10 -> s1: (not (= (mod t 6) 4))
edge s10 -> s4: (or (= (mod t 2) 0) (= (mod t 3) 0))
edge s10 -> s8
edge s11 -> s3
edge s12 -> s1: (not (= (mod t 2) 1))
edge s12 -> s3
edge s12 -> s11
