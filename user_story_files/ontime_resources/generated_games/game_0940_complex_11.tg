// Complex graph with 11 nodes

node s0: label["s0"], owner[1]
node s1: label["s1"], owner[0]
node s2: label["s2"], owner[1]
node s3: label["s3"], owner[0]
node s4: label["s4"], owner[0]
node s5: label["s5"], owner[0]
node s6: label["s6"], owner[1]
node s7: label["s7"], owner[1]
node s8: label["s8"], owner[1]
node s9: label["s9"], owner[1]
node s10: label["s10"], owner[0]

edge s0 -> s10
edge s1 -> s5
edge s2 -> s0
edge s2 -> s3: (or (= (mod t 2) 0) (= (mod t 3) 2))
edge s2 -> s8: (or (= (mod t 3) 0) (= (mod t 4) 0))
edge s3 -> s1: (not (= (mod t 2) 1))
edge s3 -> s5: (not (= (mod t 4) 0))
edge s3 -> s10: (not (= (mod t 3) 2))
edge s4 -> s3
edge s4 -> s8: (or (= (mod t 4) 0) (= (mod t 2) 0))
edge s4 -> s9: (not (= (mod t 3) 0))
edge s7 -> s1: (and (= (mod t 3) 0) (= (mod t 3) 2))
edge s7 -> s3: (or (= (mod t 3) 0) (= (mod t 4) 1))
edge s7 -> s10: (1,6,15)
edge s8 -> s0: (= (mod t 7) 3)
edge s8 -> s1: (or (= (mod t 4) 1) (= (mod t 4) 0))
edge s9 -> s0: (and (= (mod t 3) 0) (= (mod t 3) 2))
edge s9 -> s2: (24)
edge s9 -> s5: (not (= (mod t 4) 0))
edge s10 -> s0
edge s10 -> s2
edge s10 -> s5: (or (= (mod t 2) 0) (= (mod t 5) 4))
