// Complex graph with 11 nodes

node s0: label["start"], owner[0]
node s1: label["state1"], owner[1]
node s2: label["c"], owner[1]
node s3: label["d"], owner[1]
node s4: label["n4"], owner[1]
node s5: label["n5"], owner[1]
node s6: label["n6"], owner[0]
node s7: label["h"], owner[0]
node s8: label["state8"], owner[0]
node s9: label["state9"], owner[1]
node s10: label["target"], owner[1]

edge s0 -> s5: (7,17)
edge s0 -> s9: (or (= (mod t 5) 1) (= (mod t 5) 3))
edge s1 -> s0: (and (= (mod t 2) 0) (= (mod t 5) 0))
edge s1 -> s5: (and (= (mod t 4) 3) (= (mod t 3) 2))
edge s2 -> s0: (not (= (mod t 6) 2))
edge s2 -> s4: (not (= (mod t 2) 0))
edge s2 -> s6: (= (mod t 7) 6)
edge s2 -> s7
edge s2 -> s10: (or (= (mod t 3) 0) (= (mod t 3) 2))
edge s3 -> s1: (and (= (mod t 4) 3) (= (mod t 3) 2))
edge s3 -> s9: (= (mod t 8) 2)
edge s4 -> s2: (not (= (mod t 6) 4))
edge s4 -> s6: (not (= (mod t 2) 0))
edge s4 -> s7: (and (= (mod t 2) 0) (= (mod t 5) 3))
edge s4 -> s8: (and (= (mod t 4) 2) (= (mod t 5) 1))
edge s4 -> s9: (not (= (mod t 2) 0))
edge s5 -> s0: (= (mod t 2) 1)
edge s5 -> s1: (and (= (mod t 2) 1) (= (mod t 4) 0))
edge s5 -> s7: (= (mod t 5) 4)
edge s5 -> s10: (12,15,22,29)
edge s6 -> s0: (and (= (mod t 3) 2) (= (mod t 4) 0))
edge s6 -> s1: (not (= (mod t 2) 0))
edge s6 -> s4: (= (mod t 8) 1)
edge s7 -> s3: (and (= (mod t 3) 1) (= (mod t 4) 2))
edge s7 -> s8
edge s8 -> s0: (= (mod t 2) 1)
edge s8 -> s1: (= (mod t 8) 3)
edge s8 -> s2: (or (= (mod t 2) 1) (= (mod t 4) 2))
edge s8 -> s6: (0,6,7,10,12)
edge s8 -> s7: (= (mod t 4) 3)
edge s9 -> s4: (or (= (mod t 3) 2) (= (mod t 3) 2))
edge s9 -> s8: (and (= (mod t 2) 1) (= (mod t 3) 2))
edge s10 -> s0: (= (mod t 7) 1)
edge s10 -> s2: (not (= (mod t 4) 0))
edge s10 -> s3: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s10 -> s5: (6,9,18)
edge s10 -> s6: (or (= (mod t 5) 2) (= (mod t 2) 1))
edge s10 -> s8: (23)
edge s10 -> s9: (or (= (mod t 5) 3) (= (mod t 5) 1))
