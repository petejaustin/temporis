// Complex graph with 12 nodes

node s0: label["start"], owner[1]
node s1: label["b"], owner[0]
node s2: label["n2"], owner[1]
node s3: label["n3"], owner[0]
node s4: label["n4"], owner[1]
node s5: label["n5"], owner[1]
node s6: label["state6"], owner[1]
node s7: label["n7"], owner[0]
node s8: label["i"], owner[0]
node s9: label["state9"], owner[1]
node s10: label["state10"], owner[0]
node s11: label["target"], owner[0]

edge s0 -> s2: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s0 -> s3: (not (= (mod t 3) 0))
edge s0 -> s4
edge s0 -> s7: (6)
edge s0 -> s9: (not (= (mod t 6) 1))
edge s0 -> s11: (or (= (mod t 2) 1) (= (mod t 3) 2))
edge s1 -> s0: (and (= (mod t 2) 1) (= (mod t 5) 2))
edge s1 -> s2
edge s1 -> s5: (0,3)
edge s1 -> s6
edge s2 -> s0: (or (= (mod t 5) 4) (= (mod t 2) 1))
edge s2 -> s8: (not (= (mod t 5) 3))
edge s3 -> s4
edge s3 -> s8: (= (mod t 8) 1)
edge s4 -> s8: (or (= (mod t 5) 3) (= (mod t 5) 1))
edge s4 -> s11: (not (= (mod t 5) 3))
edge s5 -> s1: (0,14,16)
edge s5 -> s3: (1,2)
edge s5 -> s4: (and (= (mod t 2) 0) (= (mod t 4) 2))
edge s5 -> s10: (1,9,11,14)
edge s6 -> s7: (= (mod t 8) 1)
edge s7 -> s2: (and (= (mod t 3) 2) (= (mod t 5) 3))
edge s7 -> s6: (and (= (mod t 2) 0) (= (mod t 4) 1))
edge s7 -> s8: (= (mod t 8) 3)
edge s7 -> s10: (not (= (mod t 6) 0))
edge s7 -> s11
edge s8 -> s7: (= (mod t 4) 3)
edge s9 -> s1: (or (= (mod t 2) 0) (= (mod t 2) 0))
edge s9 -> s3: (2,6,9,16,20)
edge s9 -> s4: (or (= (mod t 3) 1) (= (mod t 2) 1))
edge s9 -> s7: (1,5,13)
edge s10 -> s4: (= (mod t 7) 2)
edge s10 -> s6: (not (= (mod t 4) 3))
edge s11 -> s9: (not (= (mod t 2) 0))
