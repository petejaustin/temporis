// Complex graph with 11 nodes

node s0: label["start"], owner[1]
node s1: label["state1"], owner[1]
node s2: label["state2"], owner[0]
node s3: label["n3"], owner[0]
node s4: label["e"], owner[1]
node s5: label["f"], owner[0]
node s6: label["n6"], owner[0]
node s7: label["state7"], owner[0]
node s8: label["i"], owner[0]
node s9: label["state9"], owner[0]
node s10: label["target"], owner[1]

edge s0 -> s1: (not (= (mod t 5) 2))
edge s0 -> s4: (not (= (mod t 2) 1))
edge s0 -> s5: (9,15)
edge s0 -> s6: (or (= (mod t 5) 3) (= (mod t 5) 4))
edge s1 -> s2: (or (= (mod t 2) 0) (= (mod t 2) 0))
edge s1 -> s7: (15,26)
edge s1 -> s10: (= (mod t 6) 4)
edge s2 -> s6: (or (= (mod t 3) 1) (= (mod t 4) 1))
edge s2 -> s7: (and (= (mod t 2) 0) (= (mod t 4) 3))
edge s4 -> s0: (= (mod t 4) 3)
edge s4 -> s1: (= (mod t 8) 2)
edge s4 -> s2: (= (mod t 5) 2)
edge s4 -> s5: (and (= (mod t 2) 1) (= (mod t 5) 0))
edge s4 -> s6
edge s4 -> s8: (5)
edge s4 -> s10: (or (= (mod t 3) 2) (= (mod t 3) 0))
edge s5 -> s0: (not (= (mod t 6) 4))
edge s5 -> s1: (not (= (mod t 4) 2))
edge s5 -> s7: (6,9,13,24)
edge s6 -> s1: (not (= (mod t 4) 2))
edge s6 -> s2: (not (= (mod t 5) 0))
edge s6 -> s8
edge s6 -> s9: (0,1,10,13,15)
edge s7 -> s0: (not (= (mod t 4) 3))
edge s7 -> s5: (6,7,12,15,17)
edge s7 -> s8: (25)
edge s7 -> s9
edge s7 -> s10: (not (= (mod t 5) 4))
edge s8 -> s4: (not (= (mod t 5) 0))
edge s8 -> s5: (or (= (mod t 4) 2) (= (mod t 2) 0))
edge s8 -> s7: (not (= (mod t 2) 0))
edge s9 -> s1: (= (mod t 4) 1)
edge s9 -> s2: (or (= (mod t 4) 0) (= (mod t 4) 1))
edge s9 -> s3
edge s10 -> s6: (and (= (mod t 3) 0) (= (mod t 3) 2))
edge s10 -> s7: (not (= (mod t 4) 0))
edge s10 -> s8: (not (= (mod t 4) 3))
