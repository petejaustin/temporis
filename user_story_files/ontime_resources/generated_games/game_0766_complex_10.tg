// Complex graph with 10 nodes

node s0: label["s0"], owner[0]
node s1: label["s1"], owner[0]
node s2: label["s2"], owner[1]
node s3: label["s3"], owner[0]
node s4: label["s4"], owner[0]
node s5: label["s5"], owner[0]
node s6: label["s6"], owner[1]
node s7: label["s7"], owner[1]
node s8: label["s8"], owner[0]
node s9: label["s9"], owner[0]

edge s0 -> s3: (and (= (mod t 3) 1) (= (mod t 3) 2))
edge s0 -> s5: (or (= (mod t 3) 1) (= (mod t 4) 1))
edge s1 -> s0: (= (mod t 8) 5)
edge s1 -> s2: (6,8,23)
edge s1 -> s5: (3,7,10,16)
edge s1 -> s7: (= (mod t 7) 5)
edge s2 -> s1: (= (mod t 5) 1)
edge s2 -> s7: (not (= (mod t 3) 0))
edge s3 -> s6: (or (= (mod t 3) 0) (= (mod t 3) 2))
edge s3 -> s8: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s3 -> s9
edge s4 -> s1: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s4 -> s6: (and (= (mod t 3) 1) (= (mod t 4) 3))
edge s4 -> s7: (not (= (mod t 4) 2))
edge s5 -> s0: (6,10,19,20)
edge s5 -> s1: (3,4,5,6)
edge s5 -> s4: (or (= (mod t 5) 2) (= (mod t 3) 1))
edge s5 -> s7: (or (= (mod t 5) 1) (= (mod t 4) 3))
edge s5 -> s8
edge s5 -> s9: (or (= (mod t 4) 2) (= (mod t 4) 2))
edge s6 -> s3: (= (mod t 6) 0)
edge s6 -> s5: (and (= (mod t 4) 1) (= (mod t 4) 3))
edge s7 -> s3: (and (= (mod t 4) 1) (= (mod t 4) 0))
edge s7 -> s4: (and (= (mod t 2) 1) (= (mod t 4) 3))
edge s7 -> s8: (or (= (mod t 3) 0) (= (mod t 5) 1))
edge s7 -> s9: (not (= (mod t 2) 0))
edge s8 -> s2
edge s8 -> s3
edge s8 -> s9: (or (= (mod t 5) 2) (= (mod t 4) 1))
edge s9 -> s5: (or (= (mod t 2) 1) (= (mod t 3) 1))
