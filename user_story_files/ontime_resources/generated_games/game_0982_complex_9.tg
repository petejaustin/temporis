// Complex graph with 9 nodes

node s0: label["start"], owner[0]
node s1: label["state1"], owner[0]
node s2: label["c"], owner[0]
node s3: label["n3"], owner[1]
node s4: label["state4"], owner[1]
node s5: label["state5"], owner[0]
node s6: label["state6"], owner[0]
node s7: label["h"], owner[0]
node s8: label["target"], owner[0]

edge s0 -> s2
edge s1 -> s2: (and (= (mod t 4) 1) (= (mod t 3) 1))
edge s1 -> s3: (0)
edge s1 -> s7: (= (mod t 2) 0)
edge s1 -> s8
edge s2 -> s0
edge s2 -> s1: (0,9)
edge s2 -> s5: (= (mod t 5) 2)
edge s2 -> s6: (= (mod t 6) 4)
edge s2 -> s7: (2,4,10,11,16)
edge s2 -> s8: (= (mod t 6) 0)
edge s3 -> s0: (= (mod t 6) 3)
edge s3 -> s8: (and (= (mod t 4) 3) (= (mod t 5) 2))
edge s4 -> s6: (= (mod t 6) 2)
edge s5 -> s0
edge s5 -> s2
edge s6 -> s0: (not (= (mod t 3) 1))
edge s6 -> s2: (and (= (mod t 3) 1) (= (mod t 5) 3))
edge s6 -> s3: (= (mod t 3) 0)
edge s6 -> s8: (or (= (mod t 2) 1) (= (mod t 5) 4))
edge s7 -> s1: (and (= (mod t 4) 2) (= (mod t 4) 1))
edge s7 -> s2: (8,12,17,18)
edge s7 -> s3: (and (= (mod t 3) 2) (= (mod t 4) 3))
edge s7 -> s5: (not (= (mod t 6) 0))
edge s8 -> s0: (= (mod t 7) 4)
edge s8 -> s1: (not (= (mod t 3) 2))
edge s8 -> s6: (not (= (mod t 2) 0))
edge s8 -> s7: (or (= (mod t 2) 0) (= (mod t 2) 1))
