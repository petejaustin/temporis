// Complex graph with 10 nodes

node s0: label["start"], owner[1]
node s1: label["b"], owner[0]
node s2: label["c"], owner[1]
node s3: label["n3"], owner[0]
node s4: label["state4"], owner[0]
node s5: label["n5"], owner[1]
node s6: label["g"], owner[0]
node s7: label["n7"], owner[0]
node s8: label["n8"], owner[1]
node s9: label["target"], owner[1]

edge s0 -> s1: (and (= (mod t 4) 3) (= (mod t 4) 0))
edge s0 -> s4: (not (= (mod t 4) 1))
edge s0 -> s5: (or (= (mod t 3) 2) (= (mod t 5) 0))
edge s1 -> s2: (not (= (mod t 3) 0))
edge s1 -> s4: (= (mod t 4) 1)
edge s1 -> s8: (not (= (mod t 3) 2))
edge s1 -> s9: (5,19)
edge s2 -> s1
edge s2 -> s5: (= (mod t 2) 0)
edge s2 -> s7: (10,13,14)
edge s3 -> s1: (or (= (mod t 3) 1) (= (mod t 5) 4))
edge s3 -> s2: (or (= (mod t 2) 1) (= (mod t 3) 1))
edge s3 -> s4
edge s4 -> s0: (not (= (mod t 5) 1))
edge s4 -> s1: (= (mod t 8) 1)
edge s4 -> s2: (3)
edge s4 -> s9: (and (= (mod t 4) 2) (= (mod t 5) 2))
edge s5 -> s4: (or (= (mod t 3) 0) (= (mod t 4) 0))
edge s6 -> s2: (0,1,5,6,16)
edge s6 -> s5: (= (mod t 4) 3)
edge s6 -> s8: (and (= (mod t 2) 1) (= (mod t 5) 2))
edge s7 -> s2: (or (= (mod t 5) 3) (= (mod t 2) 1))
edge s7 -> s6: (9,11)
edge s7 -> s9: (and (= (mod t 2) 0) (= (mod t 4) 1))
edge s8 -> s3: (8,11)
edge s8 -> s6: (4,9,18,25)
edge s8 -> s9: (not (= (mod t 2) 1))
