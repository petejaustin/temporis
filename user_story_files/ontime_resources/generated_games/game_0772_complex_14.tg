// Complex graph with 14 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[1]
node s2: label["c"], owner[1]
node s3: label["d"], owner[0]
node s4: label["state4"], owner[1]
node s5: label["n5"], owner[1]
node s6: label["g"], owner[1]
node s7: label["h"], owner[0]
node s8: label["n8"], owner[1]
node s9: label["state9"], owner[1]
node s10: label["n10"], owner[1]
node s11: label["l"], owner[0]
node s12: label["state12"], owner[0]
node s13: label["target"], owner[1]

edge s0 -> s3
edge s0 -> s5: (or (= (mod t 3) 2) (= (mod t 4) 3))
edge s0 -> s9: (= (mod t 7) 2)
edge s0 -> s11: (0,6,21)
edge s1 -> s6
edge s1 -> s11
edge s1 -> s12: (or (= (mod t 4) 3) (= (mod t 4) 1))
edge s2 -> s1: (or (= (mod t 4) 0) (= (mod t 2) 0))
edge s2 -> s6: (and (= (mod t 3) 0) (= (mod t 5) 0))
edge s2 -> s7: (= (mod t 4) 3)
edge s2 -> s8: (or (= (mod t 5) 3) (= (mod t 5) 1))
edge s2 -> s11: (9)
edge s3 -> s2: (not (= (mod t 4) 0))
edge s3 -> s6: (or (= (mod t 5) 1) (= (mod t 2) 1))
edge s3 -> s12: (not (= (mod t 4) 2))
edge s4 -> s7: (and (= (mod t 4) 3) (= (mod t 5) 3))
edge s4 -> s8: (6,12,13,14,22)
edge s4 -> s9
edge s4 -> s12
edge s5 -> s1
edge s6 -> s3: (= (mod t 2) 0)
edge s6 -> s5: (or (= (mod t 4) 1) (= (mod t 4) 1))
edge s6 -> s13
edge s7 -> s3: (= (mod t 4) 3)
edge s8 -> s0: (= (mod t 5) 1)
edge s8 -> s1: (not (= (mod t 5) 2))
edge s8 -> s11: (5,6,8,11)
edge s9 -> s5: (or (= (mod t 5) 0) (= (mod t 5) 1))
edge s9 -> s6
edge s9 -> s7: (= (mod t 5) 1)
edge s9 -> s13: (= (mod t 6) 4)
edge s10 -> s6: (not (= (mod t 5) 0))
edge s10 -> s8: (= (mod t 4) 0)
edge s11 -> s3: (or (= (mod t 5) 3) (= (mod t 5) 1))
edge s11 -> s4: (or (= (mod t 4) 2) (= (mod t 5) 2))
edge s11 -> s8: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s11 -> s9: (= (mod t 2) 0)
edge s11 -> s13: (and (= (mod t 2) 1) (= (mod t 5) 4))
edge s12 -> s4: (= (mod t 8) 5)
edge s12 -> s5: (0,8)
edge s12 -> s8: (or (= (mod t 2) 1) (= (mod t 3) 2))
edge s12 -> s13: (3)
edge s13 -> s1: (0,3,6,7)
edge s13 -> s4: (= (mod t 7) 6)
edge s13 -> s6: (not (= (mod t 2) 0))
edge s13 -> s7: (or (= (mod t 3) 0) (= (mod t 2) 1))
edge s13 -> s8: (7,8,9,10,19)
edge s13 -> s12
