// Complex graph with 10 nodes

node s0: label["start"], owner[0]
node s1: label["b"], owner[1]
node s2: label["state2"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["n4"], owner[0]
node s5: label["n5"], owner[1]
node s6: label["n6"], owner[1]
node s7: label["h"], owner[1]
node s8: label["i"], owner[1]
node s9: label["target"], owner[0]

edge s0 -> s2: (= (mod t 6) 3)
edge s0 -> s7: (= (mod t 5) 2)
edge s1 -> s2: (or (= (mod t 4) 2) (= (mod t 5) 1))
edge s1 -> s3: (= (mod t 5) 4)
edge s1 -> s4
edge s1 -> s7: (or (= (mod t 2) 0) (= (mod t 5) 0))
edge s2 -> s1: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s3 -> s1: (not (= (mod t 4) 1))
edge s3 -> s5: (= (mod t 3) 1)
edge s4 -> s2: (16)
edge s4 -> s3: (2,7)
edge s4 -> s5: (or (= (mod t 5) 4) (= (mod t 4) 3))
edge s4 -> s7: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s4 -> s8: (not (= (mod t 2) 1))
edge s5 -> s0: (or (= (mod t 5) 4) (= (mod t 2) 0))
edge s5 -> s2: (or (= (mod t 5) 3) (= (mod t 3) 0))
edge s5 -> s3: (and (= (mod t 2) 1) (= (mod t 4) 2))
edge s5 -> s6: (14,20,24)
edge s7 -> s6: (and (= (mod t 4) 1) (= (mod t 5) 1))
edge s8 -> s6: (7)
edge s8 -> s9
edge s9 -> s2: (and (= (mod t 4) 1) (= (mod t 4) 3))
