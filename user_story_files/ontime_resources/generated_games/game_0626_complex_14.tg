// Complex graph with 14 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[0]
node s2: label["state2"], owner[0]
node s3: label["n3"], owner[0]
node s4: label["n4"], owner[0]
node s5: label["state5"], owner[1]
node s6: label["g"], owner[1]
node s7: label["n7"], owner[1]
node s8: label["state8"], owner[0]
node s9: label["n9"], owner[0]
node s10: label["k"], owner[0]
node s11: label["l"], owner[1]
node s12: label["m"], owner[0]
node s13: label["target"], owner[1]

edge s0 -> s1: (not (= (mod t 5) 3))
edge s0 -> s4: (and (= (mod t 2) 0) (= (mod t 5) 4))
edge s0 -> s5: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s0 -> s6
edge s0 -> s11: (2,4,13)
edge s1 -> s0: (10,21)
edge s1 -> s2: (not (= (mod t 4) 3))
edge s1 -> s3: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s1 -> s6: (and (= (mod t 3) 0) (= (mod t 3) 2))
edge s1 -> s10: (0,3,4,5,7)
edge s1 -> s12: (0,3,10,14)
edge s2 -> s4: (1)
edge s2 -> s6: (4,12,13)
edge s2 -> s11: (and (= (mod t 3) 2) (= (mod t 5) 2))
edge s2 -> s12: (6,11,15,17,18)
edge s2 -> s13: (= (mod t 5) 1)
edge s3 -> s4: (not (= (mod t 6) 3))
edge s3 -> s7: (= (mod t 4) 0)
edge s3 -> s9: (and (= (mod t 2) 0) (= (mod t 4) 2))
edge s4 -> s1: (= (mod t 6) 3)
edge s4 -> s6
edge s4 -> s8: (and (= (mod t 4) 0) (= (mod t 4) 3))
edge s4 -> s10
edge s4 -> s11
edge s5 -> s0: (not (= (mod t 5) 2))
edge s5 -> s4: (or (= (mod t 3) 2) (= (mod t 2) 0))
edge s5 -> s6: (not (= (mod t 3) 2))
edge s6 -> s3
edge s6 -> s4: (10)
edge s6 -> s8: (1,3,6)
edge s6 -> s10: (= (mod t 2) 1)
edge s6 -> s13
edge s7 -> s0: (= (mod t 3) 1)
edge s7 -> s3: (1,14,16,19)
edge s7 -> s4: (not (= (mod t 2) 0))
edge s7 -> s9: (or (= (mod t 2) 0) (= (mod t 3) 2))
edge s7 -> s10: (= (mod t 4) 1)
edge s7 -> s13
edge s8 -> s0: (not (= (mod t 4) 2))
edge s8 -> s1
edge s8 -> s10: (= (mod t 3) 0)
edge s8 -> s13: (and (= (mod t 2) 1) (= (mod t 4) 2))
edge s9 -> s1
edge s9 -> s3: (and (= (mod t 4) 2) (= (mod t 3) 0))
edge s9 -> s7: (and (= (mod t 4) 2) (= (mod t 3) 0))
edge s10 -> s2
edge s10 -> s8: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s11 -> s1
edge s11 -> s3: (or (= (mod t 2) 1) (= (mod t 5) 2))
edge s11 -> s7: (and (= (mod t 2) 0) (= (mod t 5) 3))
edge s11 -> s8: (or (= (mod t 5) 1) (= (mod t 3) 0))
edge s11 -> s9: (not (= (mod t 6) 1))
edge s12 -> s3: (= (mod t 7) 6)
edge s12 -> s8
edge s12 -> s11: (21,25)
edge s13 -> s6: (not (= (mod t 4) 3))
