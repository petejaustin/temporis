// Complex graph with 12 nodes

node s0: label["start"], owner[0]
node s1: label["n1"], owner[0]
node s2: label["n2"], owner[0]
node s3: label["d"], owner[0]
node s4: label["n4"], owner[1]
node s5: label["n5"], owner[1]
node s6: label["state6"], owner[1]
node s7: label["state7"], owner[1]
node s8: label["n8"], owner[1]
node s9: label["j"], owner[1]
node s10: label["k"], owner[1]
node s11: label["target"], owner[1]

edge s0 -> s7: (= (mod t 7) 5)
edge s0 -> s9: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s1 -> s2: (not (= (mod t 3) 0))
edge s1 -> s4
edge s1 -> s6
edge s1 -> s7: (= (mod t 5) 4)
edge s2 -> s1: (or (= (mod t 2) 1) (= (mod t 3) 2))
edge s2 -> s9: (and (= (mod t 3) 2) (= (mod t 4) 1))
edge s2 -> s10: (not (= (mod t 4) 2))
edge s3 -> s2
edge s3 -> s5: (3,12,17)
edge s3 -> s6
edge s3 -> s8: (and (= (mod t 2) 1) (= (mod t 5) 3))
edge s4 -> s2: (or (= (mod t 5) 3) (= (mod t 3) 1))
edge s4 -> s5: (not (= (mod t 3) 0))
edge s4 -> s9: (not (= (mod t 4) 1))
edge s5 -> s0: (or (= (mod t 5) 2) (= (mod t 2) 1))
edge s5 -> s1: (not (= (mod t 4) 3))
edge s5 -> s2: (or (= (mod t 2) 1) (= (mod t 3) 2))
edge s5 -> s8: (3,16,21)
edge s5 -> s11
edge s6 -> s2: (= (mod t 2) 0)
edge s6 -> s5: (not (= (mod t 3) 0))
edge s6 -> s7: (3,7,8)
edge s7 -> s2: (and (= (mod t 3) 2) (= (mod t 3) 2))
edge s7 -> s4
edge s7 -> s10: (and (= (mod t 4) 0) (= (mod t 5) 3))
edge s7 -> s11: (or (= (mod t 4) 3) (= (mod t 5) 3))
edge s8 -> s4: (not (= (mod t 3) 1))
edge s8 -> s6: (5,14)
edge s8 -> s7: (not (= (mod t 2) 0))
edge s8 -> s10: (15)
edge s8 -> s11: (12,20)
edge s9 -> s0: (or (= (mod t 3) 1) (= (mod t 4) 3))
edge s9 -> s5: (not (= (mod t 3) 1))
edge s9 -> s10: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s9 -> s11: (or (= (mod t 2) 1) (= (mod t 4) 0))
edge s10 -> s0
edge s10 -> s3: (5,8,11)
edge s10 -> s6: (or (= (mod t 2) 0) (= (mod t 2) 0))
edge s10 -> s7
edge s10 -> s9: (= (mod t 8) 5)
edge s10 -> s11: (or (= (mod t 5) 4) (= (mod t 4) 3))
edge s11 -> s9
