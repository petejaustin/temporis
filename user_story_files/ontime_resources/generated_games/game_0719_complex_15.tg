// Complex graph with 15 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[0]
node s3: label["state3"], owner[0]
node s4: label["n4"], owner[1]
node s5: label["state5"], owner[1]
node s6: label["n6"], owner[0]
node s7: label["state7"], owner[1]
node s8: label["i"], owner[1]
node s9: label["state9"], owner[0]
node s10: label["k"], owner[1]
node s11: label["l"], owner[1]
node s12: label["state12"], owner[0]
node s13: label["n13"], owner[0]
node s14: label["target"], owner[1]

edge s0 -> s1: (or (= (mod t 5) 4) (= (mod t 5) 4))
edge s0 -> s2: (and (= (mod t 4) 1) (= (mod t 5) 3))
edge s0 -> s4: (not (= (mod t 4) 0))
edge s0 -> s11: (10,13)
edge s0 -> s13
edge s0 -> s14: (9)
edge s1 -> s2: (or (= (mod t 2) 1) (= (mod t 5) 1))
edge s1 -> s6: (not (= (mod t 4) 3))
edge s1 -> s9
edge s1 -> s10: (not (= (mod t 6) 0))
edge s1 -> s11: (not (= (mod t 4) 3))
edge s1 -> s13
edge s2 -> s1: (and (= (mod t 4) 2) (= (mod t 5) 1))
edge s3 -> s0: (and (= (mod t 4) 3) (= (mod t 3) 1))
edge s3 -> s8: (not (= (mod t 5) 3))
edge s4 -> s0: (or (= (mod t 2) 0) (= (mod t 5) 0))
edge s4 -> s5: (5,8,11)
edge s4 -> s14: (15)
edge s5 -> s1: (or (= (mod t 4) 0) (= (mod t 4) 1))
edge s5 -> s2: (or (= (mod t 4) 3) (= (mod t 4) 3))
edge s5 -> s3
edge s5 -> s4: (not (= (mod t 6) 5))
edge s5 -> s11
edge s5 -> s12: (= (mod t 4) 3)
edge s5 -> s13: (2,4,5,12,15)
edge s6 -> s1: (= (mod t 7) 1)
edge s6 -> s2: (2,4,7,12,19)
edge s6 -> s7: (= (mod t 3) 1)
edge s6 -> s9
edge s6 -> s11: (= (mod t 7) 4)
edge s6 -> s12: (= (mod t 3) 1)
edge s7 -> s1
edge s7 -> s2
edge s7 -> s4: (and (= (mod t 2) 0) (= (mod t 3) 0))
edge s7 -> s5: (and (= (mod t 3) 0) (= (mod t 3) 1))
edge s7 -> s6: (not (= (mod t 3) 2))
edge s7 -> s8: (not (= (mod t 5) 2))
edge s7 -> s11: (or (= (mod t 3) 1) (= (mod t 4) 3))
edge s7 -> s12: (or (= (mod t 2) 0) (= (mod t 4) 3))
edge s7 -> s13: (or (= (mod t 2) 1) (= (mod t 5) 1))
edge s7 -> s14
edge s8 -> s1: (= (mod t 4) 0)
edge s8 -> s2: (not (= (mod t 6) 1))
edge s8 -> s5: (or (= (mod t 2) 0) (= (mod t 3) 0))
edge s8 -> s7: (or (= (mod t 3) 2) (= (mod t 5) 2))
edge s8 -> s9: (or (= (mod t 2) 1) (= (mod t 4) 3))
edge s8 -> s11
edge s9 -> s1: (3,22)
edge s9 -> s4: (or (= (mod t 2) 0) (= (mod t 4) 2))
edge s9 -> s6: (not (= (mod t 4) 3))
edge s9 -> s7: (5,14,17,23)
edge s9 -> s13: (or (= (mod t 2) 0) (= (mod t 5) 1))
edge s9 -> s14: (and (= (mod t 2) 0) (= (mod t 5) 2))
edge s10 -> s0
edge s10 -> s3: (or (= (mod t 5) 2) (= (mod t 5) 3))
edge s10 -> s5: (not (= (mod t 6) 4))
edge s10 -> s8: (or (= (mod t 3) 2) (= (mod t 3) 0))
edge s10 -> s9: (not (= (mod t 5) 4))
edge s10 -> s12: (or (= (mod t 5) 1) (= (mod t 2) 0))
edge s10 -> s14: (= (mod t 6) 0)
edge s11 -> s0
edge s11 -> s4: (and (= (mod t 3) 2) (= (mod t 5) 0))
edge s11 -> s7: (1,5,15,16)
edge s11 -> s12: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s11 -> s13: (= (mod t 7) 3)
edge s12 -> s0: (= (mod t 4) 0)
edge s12 -> s1: (and (= (mod t 2) 0) (= (mod t 5) 1))
edge s12 -> s2
edge s12 -> s3
edge s12 -> s10
edge s12 -> s11: (and (= (mod t 3) 2) (= (mod t 4) 2))
edge s13 -> s3: (or (= (mod t 2) 0) (= (mod t 5) 4))
edge s13 -> s11: (and (= (mod t 3) 1) (= (mod t 5) 2))
edge s13 -> s14: (not (= (mod t 2) 0))
edge s14 -> s2: (= (mod t 8) 3)
edge s14 -> s5: (= (mod t 3) 0)
edge s14 -> s8: (and (= (mod t 4) 3) (= (mod t 4) 0))
edge s14 -> s9: (and (= (mod t 4) 1) (= (mod t 5) 0))
edge s14 -> s13: (or (= (mod t 4) 3) (= (mod t 3) 1))
