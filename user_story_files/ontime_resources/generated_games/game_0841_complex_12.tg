// Complex graph with 12 nodes

node s0: label["start"], owner[0]
node s1: label["state1"], owner[0]
node s2: label["state2"], owner[1]
node s3: label["state3"], owner[0]
node s4: label["state4"], owner[0]
node s5: label["state5"], owner[0]
node s6: label["state6"], owner[1]
node s7: label["state7"], owner[1]
node s8: label["state8"], owner[1]
node s9: label["n9"], owner[1]
node s10: label["k"], owner[1]
node s11: label["target"], owner[0]

edge s0 -> s1: (not (= (mod t 5) 1))
edge s0 -> s4: (not (= (mod t 3) 2))
edge s0 -> s8: (and (= (mod t 3) 1) (= (mod t 4) 2))
edge s0 -> s9: (or (= (mod t 5) 1) (= (mod t 3) 0))
edge s0 -> s10: (or (= (mod t 3) 0) (= (mod t 4) 0))
edge s1 -> s7: (= (mod t 4) 3)
edge s2 -> s1: (= (mod t 4) 3)
edge s2 -> s3: (15)
edge s2 -> s5: (or (= (mod t 2) 1) (= (mod t 3) 0))
edge s2 -> s7
edge s2 -> s11
edge s3 -> s0: (or (= (mod t 5) 0) (= (mod t 2) 0))
edge s3 -> s9
edge s3 -> s10
edge s4 -> s3: (17,18,20)
edge s4 -> s11: (not (= (mod t 4) 3))
edge s5 -> s1: (1,3,4,6,14)
edge s5 -> s2: (not (= (mod t 6) 4))
edge s5 -> s3: (not (= (mod t 5) 4))
edge s5 -> s7: (or (= (mod t 3) 0) (= (mod t 3) 1))
edge s5 -> s8
edge s6 -> s2: (or (= (mod t 3) 1) (= (mod t 2) 0))
edge s6 -> s3: (and (= (mod t 4) 0) (= (mod t 5) 1))
edge s6 -> s4: (11,14,16,22)
edge s6 -> s8
edge s7 -> s2
edge s7 -> s8: (21,22,28)
edge s8 -> s2: (= (mod t 5) 3)
edge s8 -> s9: (= (mod t 3) 1)
edge s9 -> s1: (not (= (mod t 4) 1))
edge s9 -> s3: (and (= (mod t 3) 2) (= (mod t 4) 2))
edge s9 -> s4: (and (= (mod t 4) 2) (= (mod t 4) 2))
edge s9 -> s6: (not (= (mod t 5) 0))
edge s9 -> s8: (0,1,4,8,17)
edge s9 -> s10: (and (= (mod t 2) 1) (= (mod t 4) 2))
edge s9 -> s11: (= (mod t 8) 1)
edge s10 -> s0: (or (= (mod t 2) 1) (= (mod t 3) 0))
edge s10 -> s7: (0,12,15,17,23)
edge s11 -> s1: (and (= (mod t 2) 1) (= (mod t 3) 1))
edge s11 -> s5: (or (= (mod t 4) 1) (= (mod t 2) 0))
