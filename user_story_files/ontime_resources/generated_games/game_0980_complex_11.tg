// Complex graph with 11 nodes

node s0: label["s0"], owner[0]
node s1: label["s1"], owner[0]
node s2: label["s2"], owner[1]
node s3: label["s3"], owner[1]
node s4: label["s4"], owner[0]
node s5: label["s5"], owner[0]
node s6: label["s6"], owner[0]
node s7: label["s7"], owner[1]
node s8: label["s8"], owner[0]
node s9: label["s9"], owner[0]
node s10: label["s10"], owner[1]

edge s0 -> s9: (and (= (mod t 2) 0) (= (mod t 5) 1))
edge s1 -> s0: (9,23)
edge s1 -> s9
edge s2 -> s3: (3,5,25)
edge s2 -> s5: (11)
edge s3 -> s0: (= (mod t 3) 1)
edge s3 -> s1: (= (mod t 3) 0)
edge s3 -> s4: (5,14,15,20)
edge s3 -> s5: (or (= (mod t 3) 1) (= (mod t 3) 1))
edge s4 -> s1: (10)
edge s4 -> s3: (not (= (mod t 4) 1))
edge s4 -> s5: (or (= (mod t 4) 0) (= (mod t 4) 3))
edge s5 -> s6: (= (mod t 8) 7)
edge s5 -> s10: (or (= (mod t 5) 1) (= (mod t 2) 0))
edge s6 -> s1
edge s6 -> s4: (2,4,6,12)
edge s6 -> s8: (= (mod t 7) 5)
edge s7 -> s2: (not (= (mod t 5) 2))
edge s7 -> s3
edge s9 -> s0: (not (= (mod t 2) 1))
edge s9 -> s1: (0,4,9,20,24)
edge s9 -> s3: (or (= (mod t 3) 0) (= (mod t 3) 2))
edge s10 -> s1
edge s10 -> s2: (9)
edge s10 -> s4
edge s10 -> s7: (not (= (mod t 4) 3))
edge s10 -> s8: (and (= (mod t 3) 2) (= (mod t 5) 1))
