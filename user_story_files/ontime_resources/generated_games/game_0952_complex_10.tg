// Complex graph with 10 nodes

node s0: label["start"], owner[1]
node s1: label["b"], owner[0]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[1]
node s4: label["e"], owner[1]
node s5: label["f"], owner[1]
node s6: label["g"], owner[0]
node s7: label["h"], owner[0]
node s8: label["state8"], owner[0]
node s9: label["target"], owner[0]

edge s0 -> s1: (6,18)
edge s0 -> s3: (or (= (mod t 3) 2) (= (mod t 2) 1))
edge s0 -> s7: (1,3,19,20)
edge s0 -> s8: (and (= (mod t 2) 0) (= (mod t 3) 1))
edge s1 -> s0: (= (mod t 4) 2)
edge s1 -> s3: (or (= (mod t 5) 2) (= (mod t 3) 2))
edge s2 -> s5: (not (= (mod t 3) 1))
edge s2 -> s9: (not (= (mod t 6) 1))
edge s3 -> s0: (or (= (mod t 3) 2) (= (mod t 3) 2))
edge s3 -> s6: (and (= (mod t 4) 2) (= (mod t 3) 0))
edge s4 -> s0: (= (mod t 6) 2)
edge s4 -> s8: (not (= (mod t 3) 2))
edge s5 -> s1
edge s5 -> s6
edge s5 -> s8: (10,12,26)
edge s7 -> s1: (and (= (mod t 4) 0) (= (mod t 5) 3))
edge s7 -> s6: (and (= (mod t 4) 2) (= (mod t 4) 1))
edge s8 -> s0: (= (mod t 2) 0)
edge s8 -> s2: (and (= (mod t 4) 3) (= (mod t 3) 1))
edge s8 -> s4: (= (mod t 4) 0)
edge s8 -> s6: (not (= (mod t 5) 3))
edge s9 -> s1: (= (mod t 8) 5)
edge s9 -> s4: (or (= (mod t 5) 3) (= (mod t 3) 1))
edge s9 -> s6: (= (mod t 2) 0)
