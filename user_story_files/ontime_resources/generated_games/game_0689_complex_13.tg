// Complex graph with 13 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[0]
node s2: label["state2"], owner[0]
node s3: label["d"], owner[0]
node s4: label["n4"], owner[1]
node s5: label["state5"], owner[1]
node s6: label["n6"], owner[0]
node s7: label["n7"], owner[1]
node s8: label["n8"], owner[1]
node s9: label["j"], owner[0]
node s10: label["state10"], owner[0]
node s11: label["state11"], owner[0]
node s12: label["target"], owner[0]

edge s0 -> s1: (or (= (mod t 4) 3) (= (mod t 3) 0))
edge s0 -> s3: (or (= (mod t 3) 2) (= (mod t 4) 3))
edge s0 -> s9
edge s0 -> s11: (or (= (mod t 2) 0) (= (mod t 2) 1))
edge s0 -> s12: (and (= (mod t 3) 0) (= (mod t 5) 2))
edge s1 -> s2: (0,3,4,7,8)
edge s1 -> s8: (0,2,5,14)
edge s1 -> s9: (and (= (mod t 2) 0) (= (mod t 3) 2))
edge s1 -> s10: (or (= (mod t 2) 1) (= (mod t 2) 1))
edge s1 -> s11: (= (mod t 8) 4)
edge s2 -> s7: (= (mod t 2) 1)
edge s3 -> s0: (2)
edge s3 -> s4: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s3 -> s5: (= (mod t 6) 3)
edge s3 -> s8: (and (= (mod t 4) 3) (= (mod t 4) 1))
edge s3 -> s9: (= (mod t 8) 7)
edge s4 -> s2: (= (mod t 3) 1)
edge s4 -> s5: (6,7)
edge s4 -> s12: (and (= (mod t 2) 0) (= (mod t 4) 1))
edge s5 -> s3: (or (= (mod t 3) 0) (= (mod t 4) 0))
edge s5 -> s8: (not (= (mod t 2) 0))
edge s5 -> s12: (not (= (mod t 3) 2))
edge s6 -> s3: (not (= (mod t 2) 1))
edge s6 -> s4: (and (= (mod t 4) 0) (= (mod t 3) 0))
edge s6 -> s9: (9,11)
edge s7 -> s1: (and (= (mod t 3) 1) (= (mod t 3) 1))
edge s7 -> s3: (and (= (mod t 2) 1) (= (mod t 4) 1))
edge s7 -> s5: (or (= (mod t 3) 0) (= (mod t 3) 1))
edge s7 -> s6: (or (= (mod t 4) 2) (= (mod t 5) 3))
edge s7 -> s9: (not (= (mod t 5) 2))
edge s8 -> s0: (not (= (mod t 3) 0))
edge s8 -> s1: (10,18,23)
edge s8 -> s5
edge s8 -> s7: (1,9,10,11,14)
edge s8 -> s9: (and (= (mod t 2) 1) (= (mod t 5) 4))
edge s9 -> s0: (= (mod t 3) 1)
edge s9 -> s1: (and (= (mod t 4) 2) (= (mod t 4) 1))
edge s9 -> s3
edge s10 -> s0: (not (= (mod t 2) 0))
edge s10 -> s3: (= (mod t 4) 3)
edge s10 -> s8: (= (mod t 2) 0)
edge s10 -> s9
edge s10 -> s11: (4,12,17,18)
edge s11 -> s0: (= (mod t 8) 5)
edge s11 -> s8: (not (= (mod t 5) 1))
edge s11 -> s10: (and (= (mod t 3) 0) (= (mod t 3) 0))
edge s12 -> s5: (or (= (mod t 5) 0) (= (mod t 5) 1))
edge s12 -> s6: (not (= (mod t 4) 3))
edge s12 -> s7: (and (= (mod t 4) 2) (= (mod t 3) 1))
edge s12 -> s11: (= (mod t 7) 6)
