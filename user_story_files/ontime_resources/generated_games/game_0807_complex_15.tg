// Complex graph with 15 nodes

node s0: label["start"], owner[1]
node s1: label["n1"], owner[0]
node s2: label["c"], owner[1]
node s3: label["state3"], owner[0]
node s4: label["state4"], owner[0]
node s5: label["n5"], owner[1]
node s6: label["n6"], owner[0]
node s7: label["n7"], owner[0]
node s8: label["i"], owner[0]
node s9: label["j"], owner[1]
node s10: label["state10"], owner[1]
node s11: label["n11"], owner[0]
node s12: label["state12"], owner[1]
node s13: label["n13"], owner[1]
node s14: label["target"], owner[1]

edge s0 -> s1: (or (= (mod t 2) 1) (= (mod t 2) 0))
edge s0 -> s5: (4,7,16,17,18)
edge s0 -> s8: (not (= (mod t 5) 3))
edge s1 -> s7: (and (= (mod t 4) 2) (= (mod t 4) 3))
edge s1 -> s11: (= (mod t 4) 2)
edge s1 -> s12: (not (= (mod t 5) 0))
edge s1 -> s14: (and (= (mod t 4) 1) (= (mod t 3) 0))
edge s2 -> s6: (and (= (mod t 2) 0) (= (mod t 5) 0))
edge s2 -> s13: (not (= (mod t 4) 2))
edge s3 -> s0: (and (= (mod t 2) 0) (= (mod t 5) 4))
edge s3 -> s9: (1,2,14,18,21)
edge s3 -> s10: (or (= (mod t 2) 0) (= (mod t 5) 2))
edge s3 -> s13
edge s4 -> s1: (= (mod t 6) 4)
edge s4 -> s5
edge s4 -> s6
edge s4 -> s7: (not (= (mod t 5) 1))
edge s4 -> s11: (not (= (mod t 2) 0))
edge s4 -> s12: (and (= (mod t 2) 1) (= (mod t 3) 2))
edge s5 -> s7: (or (= (mod t 3) 0) (= (mod t 2) 0))
edge s5 -> s10: (and (= (mod t 2) 1) (= (mod t 5) 2))
edge s5 -> s11
edge s6 -> s0: (and (= (mod t 4) 2) (= (mod t 3) 0))
edge s6 -> s5
edge s6 -> s8: (or (= (mod t 5) 1) (= (mod t 3) 2))
edge s6 -> s10: (= (mod t 6) 5)
edge s7 -> s2: (or (= (mod t 3) 0) (= (mod t 4) 3))
edge s7 -> s4: (0,7,8,10,12)
edge s7 -> s6: (or (= (mod t 3) 0) (= (mod t 3) 0))
edge s8 -> s1: (or (= (mod t 4) 2) (= (mod t 3) 1))
edge s8 -> s3
edge s8 -> s9
edge s8 -> s13: (= (mod t 3) 0)
edge s9 -> s1: (or (= (mod t 5) 2) (= (mod t 4) 3))
edge s9 -> s5
edge s9 -> s10: (or (= (mod t 5) 0) (= (mod t 2) 0))
edge s9 -> s14: (= (mod t 4) 2)
edge s10 -> s1: (= (mod t 7) 1)
edge s10 -> s5: (or (= (mod t 4) 3) (= (mod t 2) 1))
edge s10 -> s6: (and (= (mod t 4) 3) (= (mod t 4) 1))
edge s10 -> s11
edge s10 -> s13: (= (mod t 4) 3)
edge s10 -> s14: (= (mod t 4) 3)
edge s11 -> s0
edge s11 -> s1: (= (mod t 6) 0)
edge s11 -> s6: (or (= (mod t 2) 1) (= (mod t 2) 0))
edge s11 -> s8: (or (= (mod t 4) 2) (= (mod t 3) 0))
edge s12 -> s5: (and (= (mod t 4) 0) (= (mod t 3) 0))
edge s12 -> s13: (and (= (mod t 3) 1) (= (mod t 3) 1))
edge s13 -> s0: (= (mod t 7) 4)
edge s13 -> s2: (and (= (mod t 4) 2) (= (mod t 4) 0))
edge s13 -> s3: (10,11,13,20)
edge s13 -> s4: (not (= (mod t 5) 3))
edge s13 -> s9: (or (= (mod t 2) 0) (= (mod t 5) 0))
edge s13 -> s10: (not (= (mod t 5) 1))
edge s14 -> s3: (not (= (mod t 4) 0))
edge s14 -> s7: (12,18,19,20)
edge s14 -> s11: (1,2,13,17)
edge s14 -> s13: (or (= (mod t 5) 0) (= (mod t 4) 2))
