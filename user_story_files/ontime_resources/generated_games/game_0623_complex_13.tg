// Complex graph with 13 nodes

node s0: label["start"], owner[0]
node s1: label["state1"], owner[1]
node s2: label["n2"], owner[0]
node s3: label["state3"], owner[1]
node s4: label["e"], owner[1]
node s5: label["n5"], owner[0]
node s6: label["n6"], owner[0]
node s7: label["state7"], owner[1]
node s8: label["state8"], owner[1]
node s9: label["state9"], owner[1]
node s10: label["state10"], owner[1]
node s11: label["state11"], owner[1]
node s12: label["target"], owner[0]

edge s0 -> s2
edge s1 -> s2: (= (mod t 2) 1)
edge s1 -> s4: (and (= (mod t 3) 0) (= (mod t 5) 3))
edge s1 -> s9
edge s1 -> s10: (= (mod t 4) 1)
edge s2 -> s3: (not (= (mod t 3) 0))
edge s2 -> s4
edge s2 -> s6: (= (mod t 8) 2)
edge s2 -> s7: (not (= (mod t 5) 2))
edge s2 -> s8: (= (mod t 2) 0)
edge s3 -> s6: (or (= (mod t 4) 2) (= (mod t 2) 0))
edge s4 -> s2: (1,5,13,15,25)
edge s4 -> s3: (or (= (mod t 2) 1) (= (mod t 5) 4))
edge s4 -> s6: (0,6,10)
edge s4 -> s9: (not (= (mod t 4) 0))
edge s5 -> s1: (1,2,12)
edge s5 -> s7: (and (= (mod t 4) 3) (= (mod t 4) 3))
edge s5 -> s10: (= (mod t 4) 2)
edge s5 -> s11: (not (= (mod t 4) 1))
edge s6 -> s8: (= (mod t 4) 3)
edge s6 -> s9: (or (= (mod t 5) 2) (= (mod t 3) 2))
edge s7 -> s3: (or (= (mod t 4) 0) (= (mod t 5) 3))
edge s7 -> s5
edge s7 -> s9
edge s7 -> s10: (or (= (mod t 4) 0) (= (mod t 3) 2))
edge s8 -> s5: (not (= (mod t 5) 1))
edge s9 -> s1
edge s10 -> s5: (or (= (mod t 4) 1) (= (mod t 2) 1))
edge s10 -> s12: (and (= (mod t 2) 1) (= (mod t 4) 0))
edge s11 -> s1: (= (mod t 6) 0)
edge s11 -> s2: (not (= (mod t 4) 3))
edge s11 -> s5: (and (= (mod t 2) 1) (= (mod t 4) 3))
edge s11 -> s7: (= (mod t 3) 2)
edge s12 -> s8: (or (= (mod t 4) 3) (= (mod t 3) 0))
edge s12 -> s11: (or (= (mod t 2) 0) (= (mod t 3) 2))
